2024-07-24 16:42:07,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:42:07,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:42:07,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:42:07,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:42:07,846:INFO:PyCaret RegressionExperiment
2024-07-24 16:42:07,846:INFO:Logging name: reg-default-name
2024-07-24 16:42:07,846:INFO:ML Usecase: MLUsecase.REGRESSION
2024-07-24 16:42:07,846:INFO:version 3.3.2
2024-07-24 16:42:07,846:INFO:Initializing setup()
2024-07-24 16:42:07,846:INFO:self.USI: 3043
2024-07-24 16:42:07,846:INFO:self._variable_keys: {'USI', 'transform_target_param', 'html_param', 'logging_param', 'y_test', 'memory', 'y_train', 'exp_id', 'idx', 'data', 'n_jobs_param', 'fold_generator', '_available_plots', 'fold_groups_param', 'log_plots_param', 'gpu_param', 'exp_name_log', 'X_test', 'target_param', 'pipeline', 'y', 'X_train', 'gpu_n_jobs_param', 'fold_shuffle_param', 'seed', 'X', '_ml_usecase'}
2024-07-24 16:42:07,846:INFO:Checking environment
2024-07-24 16:42:07,846:INFO:python_version: 3.9.19
2024-07-24 16:42:07,846:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:42:07,846:INFO:machine: AMD64
2024-07-24 16:42:07,846:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:42:07,846:INFO:Memory: svmem(total=8387862528, available=1492496384, percent=82.2, used=6895366144, free=1492496384)
2024-07-24 16:42:07,846:INFO:Physical Core: 2
2024-07-24 16:42:07,846:INFO:Logical Core: 4
2024-07-24 16:42:07,846:INFO:Checking libraries
2024-07-24 16:42:07,846:INFO:System:
2024-07-24 16:42:07,846:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:42:07,846:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:42:07,846:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:42:07,846:INFO:PyCaret required dependencies:
2024-07-24 16:42:07,919:INFO:                 pip: 24.0
2024-07-24 16:42:07,919:INFO:          setuptools: 69.5.1
2024-07-24 16:42:07,919:INFO:             pycaret: 3.3.2
2024-07-24 16:42:07,919:INFO:             IPython: 8.18.1
2024-07-24 16:42:07,919:INFO:          ipywidgets: 8.1.3
2024-07-24 16:42:07,919:INFO:                tqdm: 4.66.4
2024-07-24 16:42:07,919:INFO:               numpy: 1.26.4
2024-07-24 16:42:07,919:INFO:              pandas: 2.1.4
2024-07-24 16:42:07,919:INFO:              jinja2: 3.1.4
2024-07-24 16:42:07,919:INFO:               scipy: 1.11.4
2024-07-24 16:42:07,919:INFO:              joblib: 1.3.2
2024-07-24 16:42:07,919:INFO:             sklearn: 1.4.2
2024-07-24 16:42:07,919:INFO:                pyod: 2.0.1
2024-07-24 16:42:07,919:INFO:            imblearn: 0.12.3
2024-07-24 16:42:07,919:INFO:   category_encoders: 2.6.3
2024-07-24 16:42:07,919:INFO:            lightgbm: 4.4.0
2024-07-24 16:42:07,919:INFO:               numba: 0.60.0
2024-07-24 16:42:07,919:INFO:            requests: 2.32.3
2024-07-24 16:42:07,919:INFO:          matplotlib: 3.7.5
2024-07-24 16:42:07,919:INFO:          scikitplot: 0.3.7
2024-07-24 16:42:07,919:INFO:         yellowbrick: 1.5
2024-07-24 16:42:07,919:INFO:              plotly: 5.23.0
2024-07-24 16:42:07,919:INFO:    plotly-resampler: Not installed
2024-07-24 16:42:07,919:INFO:             kaleido: 0.2.1
2024-07-24 16:42:07,919:INFO:           schemdraw: 0.15
2024-07-24 16:42:07,919:INFO:         statsmodels: 0.14.2
2024-07-24 16:42:07,919:INFO:              sktime: 0.26.0
2024-07-24 16:42:07,919:INFO:               tbats: 1.1.3
2024-07-24 16:42:07,919:INFO:            pmdarima: 2.0.4
2024-07-24 16:42:07,919:INFO:              psutil: 6.0.0
2024-07-24 16:42:07,919:INFO:          markupsafe: 2.1.5
2024-07-24 16:42:07,919:INFO:             pickle5: Not installed
2024-07-24 16:42:07,919:INFO:         cloudpickle: 3.0.0
2024-07-24 16:42:07,919:INFO:         deprecation: 2.1.0
2024-07-24 16:42:07,919:INFO:              xxhash: 3.4.1
2024-07-24 16:42:07,919:INFO:           wurlitzer: Not installed
2024-07-24 16:42:07,919:INFO:PyCaret optional dependencies:
2024-07-24 16:42:07,929:INFO:                shap: Not installed
2024-07-24 16:42:07,929:INFO:           interpret: Not installed
2024-07-24 16:42:07,929:INFO:                umap: Not installed
2024-07-24 16:42:07,929:INFO:     ydata_profiling: Not installed
2024-07-24 16:42:07,929:INFO:  explainerdashboard: Not installed
2024-07-24 16:42:07,929:INFO:             autoviz: Not installed
2024-07-24 16:42:07,929:INFO:           fairlearn: Not installed
2024-07-24 16:42:07,929:INFO:          deepchecks: Not installed
2024-07-24 16:42:07,929:INFO:             xgboost: Not installed
2024-07-24 16:42:07,929:INFO:            catboost: Not installed
2024-07-24 16:42:07,929:INFO:              kmodes: Not installed
2024-07-24 16:42:07,929:INFO:             mlxtend: Not installed
2024-07-24 16:42:07,929:INFO:       statsforecast: Not installed
2024-07-24 16:42:07,929:INFO:        tune_sklearn: Not installed
2024-07-24 16:42:07,929:INFO:                 ray: Not installed
2024-07-24 16:42:07,929:INFO:            hyperopt: Not installed
2024-07-24 16:42:07,929:INFO:              optuna: Not installed
2024-07-24 16:42:07,929:INFO:               skopt: Not installed
2024-07-24 16:42:07,929:INFO:              mlflow: Not installed
2024-07-24 16:42:07,929:INFO:              gradio: Not installed
2024-07-24 16:42:07,929:INFO:             fastapi: Not installed
2024-07-24 16:42:07,929:INFO:             uvicorn: Not installed
2024-07-24 16:42:07,929:INFO:              m2cgen: Not installed
2024-07-24 16:42:07,929:INFO:           evidently: Not installed
2024-07-24 16:42:07,929:INFO:               fugue: Not installed
2024-07-24 16:42:07,929:INFO:           streamlit: Not installed
2024-07-24 16:42:07,929:INFO:             prophet: Not installed
2024-07-24 16:42:07,929:INFO:None
2024-07-24 16:42:07,929:INFO:Set up data.
2024-07-24 16:42:07,946:INFO:Set up folding strategy.
2024-07-24 16:42:07,946:INFO:Set up train/test split.
2024-07-24 16:42:07,946:INFO:Set up index.
2024-07-24 16:42:07,946:INFO:Assigning column types.
2024-07-24 16:42:07,946:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:42:07,946:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 16:42:07,966:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 16:42:07,966:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,029:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,081:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,082:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,082:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,146:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,196:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,196:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-07-24 16:42:08,211:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,212:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,262:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,329:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,329:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,395:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,445:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-07-24 16:42:08,445:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,519:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,581:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,648:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,711:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-07-24 16:42:08,778:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,899:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,945:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:42:08,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:08,945:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:42:09,015:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:09,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:09,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:09,133:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:42:09,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:09,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:09,182:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-07-24 16:42:09,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:09,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:09,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:09,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:09,428:INFO:Preparing preprocessing pipeline...
2024-07-24 16:42:09,428:INFO:Set up simple imputation.
2024-07-24 16:42:09,428:INFO:Set up encoding of ordinal features.
2024-07-24 16:42:09,428:INFO:Set up encoding of categorical features.
2024-07-24 16:42:09,520:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:42:09,544:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transf...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-07-24 16:42:09,544:INFO:Creating final display dataframe.
2024-07-24 16:42:09,781:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              3043
2024-07-24 16:42:10,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:10,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:10,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:10,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:42:10,366:INFO:setup() successfully completed in 2.52s...............
2024-07-24 16:42:17,453:INFO:Initializing compare_models()
2024-07-24 16:42:17,453:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-07-24 16:42:17,453:INFO:Checking exceptions
2024-07-24 16:42:17,457:INFO:Preparing display monitor
2024-07-24 16:42:17,508:INFO:Initializing Linear Regression
2024-07-24 16:42:17,509:INFO:Total runtime is 0.0 minutes
2024-07-24 16:42:17,515:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:17,515:INFO:Initializing create_model()
2024-07-24 16:42:17,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:17,516:INFO:Checking exceptions
2024-07-24 16:42:17,516:INFO:Importing libraries
2024-07-24 16:42:17,516:INFO:Copying training dataset
2024-07-24 16:42:17,524:INFO:Defining folds
2024-07-24 16:42:17,524:INFO:Declaring metric variables
2024-07-24 16:42:17,526:INFO:Importing untrained model
2024-07-24 16:42:17,541:INFO:Linear Regression Imported successfully
2024-07-24 16:42:17,557:INFO:Starting cross validation
2024-07-24 16:42:17,591:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:22,796:INFO:Calculating mean and std
2024-07-24 16:42:22,799:INFO:Creating metrics dataframe
2024-07-24 16:42:22,799:INFO:Uploading results into container
2024-07-24 16:42:22,799:INFO:Uploading model into container now
2024-07-24 16:42:22,799:INFO:_master_model_container: 1
2024-07-24 16:42:22,799:INFO:_display_container: 2
2024-07-24 16:42:22,799:INFO:LinearRegression(n_jobs=-1)
2024-07-24 16:42:22,799:INFO:create_model() successfully completed......................................
2024-07-24 16:42:22,885:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:22,885:INFO:Creating metrics dataframe
2024-07-24 16:42:22,901:INFO:Initializing Lasso Regression
2024-07-24 16:42:22,901:INFO:Total runtime is 0.08988004525502523 minutes
2024-07-24 16:42:22,901:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:22,901:INFO:Initializing create_model()
2024-07-24 16:42:22,901:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:22,901:INFO:Checking exceptions
2024-07-24 16:42:22,901:INFO:Importing libraries
2024-07-24 16:42:22,901:INFO:Copying training dataset
2024-07-24 16:42:22,916:INFO:Defining folds
2024-07-24 16:42:22,916:INFO:Declaring metric variables
2024-07-24 16:42:22,922:INFO:Importing untrained model
2024-07-24 16:42:22,934:INFO:Lasso Regression Imported successfully
2024-07-24 16:42:22,934:INFO:Starting cross validation
2024-07-24 16:42:22,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:23,447:INFO:Calculating mean and std
2024-07-24 16:42:23,448:INFO:Creating metrics dataframe
2024-07-24 16:42:23,450:INFO:Uploading results into container
2024-07-24 16:42:23,450:INFO:Uploading model into container now
2024-07-24 16:42:23,450:INFO:_master_model_container: 2
2024-07-24 16:42:23,450:INFO:_display_container: 2
2024-07-24 16:42:23,450:INFO:Lasso(random_state=123)
2024-07-24 16:42:23,450:INFO:create_model() successfully completed......................................
2024-07-24 16:42:23,534:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:23,534:INFO:Creating metrics dataframe
2024-07-24 16:42:23,534:INFO:Initializing Ridge Regression
2024-07-24 16:42:23,534:INFO:Total runtime is 0.10044076045354207 minutes
2024-07-24 16:42:23,549:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:23,550:INFO:Initializing create_model()
2024-07-24 16:42:23,550:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:23,550:INFO:Checking exceptions
2024-07-24 16:42:23,550:INFO:Importing libraries
2024-07-24 16:42:23,550:INFO:Copying training dataset
2024-07-24 16:42:23,551:INFO:Defining folds
2024-07-24 16:42:23,551:INFO:Declaring metric variables
2024-07-24 16:42:23,560:INFO:Importing untrained model
2024-07-24 16:42:23,564:INFO:Ridge Regression Imported successfully
2024-07-24 16:42:23,585:INFO:Starting cross validation
2024-07-24 16:42:23,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:24,030:INFO:Calculating mean and std
2024-07-24 16:42:24,031:INFO:Creating metrics dataframe
2024-07-24 16:42:24,033:INFO:Uploading results into container
2024-07-24 16:42:24,033:INFO:Uploading model into container now
2024-07-24 16:42:24,033:INFO:_master_model_container: 3
2024-07-24 16:42:24,033:INFO:_display_container: 2
2024-07-24 16:42:24,033:INFO:Ridge(random_state=123)
2024-07-24 16:42:24,035:INFO:create_model() successfully completed......................................
2024-07-24 16:42:24,116:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:24,116:INFO:Creating metrics dataframe
2024-07-24 16:42:24,116:INFO:Initializing Elastic Net
2024-07-24 16:42:24,116:INFO:Total runtime is 0.11013875007629394 minutes
2024-07-24 16:42:24,116:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:24,132:INFO:Initializing create_model()
2024-07-24 16:42:24,132:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:24,132:INFO:Checking exceptions
2024-07-24 16:42:24,133:INFO:Importing libraries
2024-07-24 16:42:24,133:INFO:Copying training dataset
2024-07-24 16:42:24,133:INFO:Defining folds
2024-07-24 16:42:24,133:INFO:Declaring metric variables
2024-07-24 16:42:24,143:INFO:Importing untrained model
2024-07-24 16:42:24,155:INFO:Elastic Net Imported successfully
2024-07-24 16:42:24,169:INFO:Starting cross validation
2024-07-24 16:42:24,171:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:24,629:INFO:Calculating mean and std
2024-07-24 16:42:24,630:INFO:Creating metrics dataframe
2024-07-24 16:42:24,634:INFO:Uploading results into container
2024-07-24 16:42:24,634:INFO:Uploading model into container now
2024-07-24 16:42:24,634:INFO:_master_model_container: 4
2024-07-24 16:42:24,634:INFO:_display_container: 2
2024-07-24 16:42:24,635:INFO:ElasticNet(random_state=123)
2024-07-24 16:42:24,635:INFO:create_model() successfully completed......................................
2024-07-24 16:42:24,718:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:24,718:INFO:Creating metrics dataframe
2024-07-24 16:42:24,732:INFO:Initializing Least Angle Regression
2024-07-24 16:42:24,732:INFO:Total runtime is 0.12040220896402994 minutes
2024-07-24 16:42:24,732:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:24,732:INFO:Initializing create_model()
2024-07-24 16:42:24,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:24,732:INFO:Checking exceptions
2024-07-24 16:42:24,732:INFO:Importing libraries
2024-07-24 16:42:24,732:INFO:Copying training dataset
2024-07-24 16:42:24,747:INFO:Defining folds
2024-07-24 16:42:24,747:INFO:Declaring metric variables
2024-07-24 16:42:24,747:INFO:Importing untrained model
2024-07-24 16:42:24,768:INFO:Least Angle Regression Imported successfully
2024-07-24 16:42:24,785:INFO:Starting cross validation
2024-07-24 16:42:24,787:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:25,347:INFO:Calculating mean and std
2024-07-24 16:42:25,349:INFO:Creating metrics dataframe
2024-07-24 16:42:25,349:INFO:Uploading results into container
2024-07-24 16:42:25,349:INFO:Uploading model into container now
2024-07-24 16:42:25,349:INFO:_master_model_container: 5
2024-07-24 16:42:25,349:INFO:_display_container: 2
2024-07-24 16:42:25,349:INFO:Lars(random_state=123)
2024-07-24 16:42:25,360:INFO:create_model() successfully completed......................................
2024-07-24 16:42:25,453:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:25,453:INFO:Creating metrics dataframe
2024-07-24 16:42:25,465:INFO:Initializing Lasso Least Angle Regression
2024-07-24 16:42:25,465:INFO:Total runtime is 0.13262666861216227 minutes
2024-07-24 16:42:25,465:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:25,465:INFO:Initializing create_model()
2024-07-24 16:42:25,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:25,465:INFO:Checking exceptions
2024-07-24 16:42:25,465:INFO:Importing libraries
2024-07-24 16:42:25,465:INFO:Copying training dataset
2024-07-24 16:42:25,465:INFO:Defining folds
2024-07-24 16:42:25,478:INFO:Declaring metric variables
2024-07-24 16:42:25,484:INFO:Importing untrained model
2024-07-24 16:42:25,501:INFO:Lasso Least Angle Regression Imported successfully
2024-07-24 16:42:25,523:INFO:Starting cross validation
2024-07-24 16:42:25,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:26,063:INFO:Calculating mean and std
2024-07-24 16:42:26,065:INFO:Creating metrics dataframe
2024-07-24 16:42:26,066:INFO:Uploading results into container
2024-07-24 16:42:26,066:INFO:Uploading model into container now
2024-07-24 16:42:26,066:INFO:_master_model_container: 6
2024-07-24 16:42:26,066:INFO:_display_container: 2
2024-07-24 16:42:26,079:INFO:LassoLars(random_state=123)
2024-07-24 16:42:26,079:INFO:create_model() successfully completed......................................
2024-07-24 16:42:26,183:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:26,183:INFO:Creating metrics dataframe
2024-07-24 16:42:26,195:INFO:Initializing Orthogonal Matching Pursuit
2024-07-24 16:42:26,195:INFO:Total runtime is 0.14479175806045533 minutes
2024-07-24 16:42:26,195:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:26,195:INFO:Initializing create_model()
2024-07-24 16:42:26,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:26,195:INFO:Checking exceptions
2024-07-24 16:42:26,195:INFO:Importing libraries
2024-07-24 16:42:26,195:INFO:Copying training dataset
2024-07-24 16:42:26,195:INFO:Defining folds
2024-07-24 16:42:26,195:INFO:Declaring metric variables
2024-07-24 16:42:26,212:INFO:Importing untrained model
2024-07-24 16:42:26,219:INFO:Orthogonal Matching Pursuit Imported successfully
2024-07-24 16:42:26,236:INFO:Starting cross validation
2024-07-24 16:42:26,236:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:26,660:INFO:Calculating mean and std
2024-07-24 16:42:26,662:INFO:Creating metrics dataframe
2024-07-24 16:42:26,662:INFO:Uploading results into container
2024-07-24 16:42:26,662:INFO:Uploading model into container now
2024-07-24 16:42:26,662:INFO:_master_model_container: 7
2024-07-24 16:42:26,662:INFO:_display_container: 2
2024-07-24 16:42:26,662:INFO:OrthogonalMatchingPursuit()
2024-07-24 16:42:26,662:INFO:create_model() successfully completed......................................
2024-07-24 16:42:26,747:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:26,747:INFO:Creating metrics dataframe
2024-07-24 16:42:26,762:INFO:Initializing Bayesian Ridge
2024-07-24 16:42:26,762:INFO:Total runtime is 0.1542366107304891 minutes
2024-07-24 16:42:26,762:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:26,762:INFO:Initializing create_model()
2024-07-24 16:42:26,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:26,762:INFO:Checking exceptions
2024-07-24 16:42:26,762:INFO:Importing libraries
2024-07-24 16:42:26,762:INFO:Copying training dataset
2024-07-24 16:42:26,779:INFO:Defining folds
2024-07-24 16:42:26,779:INFO:Declaring metric variables
2024-07-24 16:42:26,795:INFO:Importing untrained model
2024-07-24 16:42:26,801:INFO:Bayesian Ridge Imported successfully
2024-07-24 16:42:26,818:INFO:Starting cross validation
2024-07-24 16:42:26,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:27,260:INFO:Calculating mean and std
2024-07-24 16:42:27,261:INFO:Creating metrics dataframe
2024-07-24 16:42:27,261:INFO:Uploading results into container
2024-07-24 16:42:27,261:INFO:Uploading model into container now
2024-07-24 16:42:27,261:INFO:_master_model_container: 8
2024-07-24 16:42:27,261:INFO:_display_container: 2
2024-07-24 16:42:27,261:INFO:BayesianRidge()
2024-07-24 16:42:27,265:INFO:create_model() successfully completed......................................
2024-07-24 16:42:27,348:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:27,348:INFO:Creating metrics dataframe
2024-07-24 16:42:27,360:INFO:Initializing Passive Aggressive Regressor
2024-07-24 16:42:27,360:INFO:Total runtime is 0.16420939763387046 minutes
2024-07-24 16:42:27,368:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:27,368:INFO:Initializing create_model()
2024-07-24 16:42:27,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:27,368:INFO:Checking exceptions
2024-07-24 16:42:27,368:INFO:Importing libraries
2024-07-24 16:42:27,368:INFO:Copying training dataset
2024-07-24 16:42:27,377:INFO:Defining folds
2024-07-24 16:42:27,377:INFO:Declaring metric variables
2024-07-24 16:42:27,383:INFO:Importing untrained model
2024-07-24 16:42:27,387:INFO:Passive Aggressive Regressor Imported successfully
2024-07-24 16:42:27,416:INFO:Starting cross validation
2024-07-24 16:42:27,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:27,875:INFO:Calculating mean and std
2024-07-24 16:42:27,876:INFO:Creating metrics dataframe
2024-07-24 16:42:27,877:INFO:Uploading results into container
2024-07-24 16:42:27,877:INFO:Uploading model into container now
2024-07-24 16:42:27,877:INFO:_master_model_container: 9
2024-07-24 16:42:27,877:INFO:_display_container: 2
2024-07-24 16:42:27,877:INFO:PassiveAggressiveRegressor(random_state=123)
2024-07-24 16:42:27,877:INFO:create_model() successfully completed......................................
2024-07-24 16:42:27,960:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:27,962:INFO:Creating metrics dataframe
2024-07-24 16:42:27,975:INFO:Initializing Huber Regressor
2024-07-24 16:42:27,975:INFO:Total runtime is 0.1744448781013489 minutes
2024-07-24 16:42:27,979:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:27,982:INFO:Initializing create_model()
2024-07-24 16:42:27,982:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:27,982:INFO:Checking exceptions
2024-07-24 16:42:27,982:INFO:Importing libraries
2024-07-24 16:42:27,982:INFO:Copying training dataset
2024-07-24 16:42:27,982:INFO:Defining folds
2024-07-24 16:42:27,982:INFO:Declaring metric variables
2024-07-24 16:42:27,993:INFO:Importing untrained model
2024-07-24 16:42:27,996:INFO:Huber Regressor Imported successfully
2024-07-24 16:42:28,061:INFO:Starting cross validation
2024-07-24 16:42:28,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:28,276:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,277:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,307:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,307:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,478:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,485:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,508:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,508:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,629:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,642:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 16:42:28,674:INFO:Calculating mean and std
2024-07-24 16:42:28,675:INFO:Creating metrics dataframe
2024-07-24 16:42:28,676:INFO:Uploading results into container
2024-07-24 16:42:28,676:INFO:Uploading model into container now
2024-07-24 16:42:28,676:INFO:_master_model_container: 10
2024-07-24 16:42:28,679:INFO:_display_container: 2
2024-07-24 16:42:28,680:INFO:HuberRegressor()
2024-07-24 16:42:28,680:INFO:create_model() successfully completed......................................
2024-07-24 16:42:28,760:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:28,760:INFO:Creating metrics dataframe
2024-07-24 16:42:28,760:INFO:Initializing K Neighbors Regressor
2024-07-24 16:42:28,760:INFO:Total runtime is 0.18753005266189576 minutes
2024-07-24 16:42:28,779:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:28,779:INFO:Initializing create_model()
2024-07-24 16:42:28,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:28,779:INFO:Checking exceptions
2024-07-24 16:42:28,779:INFO:Importing libraries
2024-07-24 16:42:28,779:INFO:Copying training dataset
2024-07-24 16:42:28,779:INFO:Defining folds
2024-07-24 16:42:28,779:INFO:Declaring metric variables
2024-07-24 16:42:28,796:INFO:Importing untrained model
2024-07-24 16:42:28,807:INFO:K Neighbors Regressor Imported successfully
2024-07-24 16:42:28,825:INFO:Starting cross validation
2024-07-24 16:42:28,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:29,324:INFO:Calculating mean and std
2024-07-24 16:42:29,327:INFO:Creating metrics dataframe
2024-07-24 16:42:29,335:INFO:Uploading results into container
2024-07-24 16:42:29,335:INFO:Uploading model into container now
2024-07-24 16:42:29,335:INFO:_master_model_container: 11
2024-07-24 16:42:29,335:INFO:_display_container: 2
2024-07-24 16:42:29,335:INFO:KNeighborsRegressor(n_jobs=-1)
2024-07-24 16:42:29,335:INFO:create_model() successfully completed......................................
2024-07-24 16:42:29,406:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:29,406:INFO:Creating metrics dataframe
2024-07-24 16:42:29,430:INFO:Initializing Decision Tree Regressor
2024-07-24 16:42:29,430:INFO:Total runtime is 0.19870432217915854 minutes
2024-07-24 16:42:29,430:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:29,430:INFO:Initializing create_model()
2024-07-24 16:42:29,430:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:29,430:INFO:Checking exceptions
2024-07-24 16:42:29,430:INFO:Importing libraries
2024-07-24 16:42:29,430:INFO:Copying training dataset
2024-07-24 16:42:29,445:INFO:Defining folds
2024-07-24 16:42:29,445:INFO:Declaring metric variables
2024-07-24 16:42:29,453:INFO:Importing untrained model
2024-07-24 16:42:29,458:INFO:Decision Tree Regressor Imported successfully
2024-07-24 16:42:29,478:INFO:Starting cross validation
2024-07-24 16:42:29,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:29,939:INFO:Calculating mean and std
2024-07-24 16:42:29,943:INFO:Creating metrics dataframe
2024-07-24 16:42:29,953:INFO:Uploading results into container
2024-07-24 16:42:29,958:INFO:Uploading model into container now
2024-07-24 16:42:29,959:INFO:_master_model_container: 12
2024-07-24 16:42:29,959:INFO:_display_container: 2
2024-07-24 16:42:29,961:INFO:DecisionTreeRegressor(random_state=123)
2024-07-24 16:42:29,963:INFO:create_model() successfully completed......................................
2024-07-24 16:42:30,063:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:30,063:INFO:Creating metrics dataframe
2024-07-24 16:42:30,072:INFO:Initializing Random Forest Regressor
2024-07-24 16:42:30,072:INFO:Total runtime is 0.2094080607096354 minutes
2024-07-24 16:42:30,072:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:30,072:INFO:Initializing create_model()
2024-07-24 16:42:30,072:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:30,072:INFO:Checking exceptions
2024-07-24 16:42:30,072:INFO:Importing libraries
2024-07-24 16:42:30,072:INFO:Copying training dataset
2024-07-24 16:42:30,072:INFO:Defining folds
2024-07-24 16:42:30,072:INFO:Declaring metric variables
2024-07-24 16:42:30,092:INFO:Importing untrained model
2024-07-24 16:42:30,095:INFO:Random Forest Regressor Imported successfully
2024-07-24 16:42:30,117:INFO:Starting cross validation
2024-07-24 16:42:30,117:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:31,904:INFO:Calculating mean and std
2024-07-24 16:42:31,904:INFO:Creating metrics dataframe
2024-07-24 16:42:31,904:INFO:Uploading results into container
2024-07-24 16:42:31,904:INFO:Uploading model into container now
2024-07-24 16:42:31,904:INFO:_master_model_container: 13
2024-07-24 16:42:31,904:INFO:_display_container: 2
2024-07-24 16:42:31,904:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-07-24 16:42:31,911:INFO:create_model() successfully completed......................................
2024-07-24 16:42:31,987:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:31,987:INFO:Creating metrics dataframe
2024-07-24 16:42:32,004:INFO:Initializing Extra Trees Regressor
2024-07-24 16:42:32,004:INFO:Total runtime is 0.2415979504585266 minutes
2024-07-24 16:42:32,004:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:32,004:INFO:Initializing create_model()
2024-07-24 16:42:32,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:32,004:INFO:Checking exceptions
2024-07-24 16:42:32,004:INFO:Importing libraries
2024-07-24 16:42:32,004:INFO:Copying training dataset
2024-07-24 16:42:32,004:INFO:Defining folds
2024-07-24 16:42:32,004:INFO:Declaring metric variables
2024-07-24 16:42:32,004:INFO:Importing untrained model
2024-07-24 16:42:32,027:INFO:Extra Trees Regressor Imported successfully
2024-07-24 16:42:32,042:INFO:Starting cross validation
2024-07-24 16:42:32,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:33,654:INFO:Calculating mean and std
2024-07-24 16:42:33,658:INFO:Creating metrics dataframe
2024-07-24 16:42:33,669:INFO:Uploading results into container
2024-07-24 16:42:33,672:INFO:Uploading model into container now
2024-07-24 16:42:33,672:INFO:_master_model_container: 14
2024-07-24 16:42:33,672:INFO:_display_container: 2
2024-07-24 16:42:33,672:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-07-24 16:42:33,672:INFO:create_model() successfully completed......................................
2024-07-24 16:42:33,773:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:33,773:INFO:Creating metrics dataframe
2024-07-24 16:42:33,790:INFO:Initializing AdaBoost Regressor
2024-07-24 16:42:33,790:INFO:Total runtime is 0.2713713129361471 minutes
2024-07-24 16:42:33,790:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:33,790:INFO:Initializing create_model()
2024-07-24 16:42:33,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:33,790:INFO:Checking exceptions
2024-07-24 16:42:33,790:INFO:Importing libraries
2024-07-24 16:42:33,790:INFO:Copying training dataset
2024-07-24 16:42:33,807:INFO:Defining folds
2024-07-24 16:42:33,807:INFO:Declaring metric variables
2024-07-24 16:42:33,807:INFO:Importing untrained model
2024-07-24 16:42:33,823:INFO:AdaBoost Regressor Imported successfully
2024-07-24 16:42:33,843:INFO:Starting cross validation
2024-07-24 16:42:33,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:34,434:INFO:Calculating mean and std
2024-07-24 16:42:34,436:INFO:Creating metrics dataframe
2024-07-24 16:42:34,438:INFO:Uploading results into container
2024-07-24 16:42:34,439:INFO:Uploading model into container now
2024-07-24 16:42:34,439:INFO:_master_model_container: 15
2024-07-24 16:42:34,439:INFO:_display_container: 2
2024-07-24 16:42:34,439:INFO:AdaBoostRegressor(random_state=123)
2024-07-24 16:42:34,442:INFO:create_model() successfully completed......................................
2024-07-24 16:42:34,534:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:34,534:INFO:Creating metrics dataframe
2024-07-24 16:42:34,534:INFO:Initializing Gradient Boosting Regressor
2024-07-24 16:42:34,534:INFO:Total runtime is 0.28377284606297815 minutes
2024-07-24 16:42:34,556:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:34,556:INFO:Initializing create_model()
2024-07-24 16:42:34,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:34,556:INFO:Checking exceptions
2024-07-24 16:42:34,556:INFO:Importing libraries
2024-07-24 16:42:34,556:INFO:Copying training dataset
2024-07-24 16:42:34,556:INFO:Defining folds
2024-07-24 16:42:34,556:INFO:Declaring metric variables
2024-07-24 16:42:34,566:INFO:Importing untrained model
2024-07-24 16:42:34,570:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 16:42:34,608:INFO:Starting cross validation
2024-07-24 16:42:34,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:35,610:INFO:Calculating mean and std
2024-07-24 16:42:35,611:INFO:Creating metrics dataframe
2024-07-24 16:42:35,613:INFO:Uploading results into container
2024-07-24 16:42:35,614:INFO:Uploading model into container now
2024-07-24 16:42:35,614:INFO:_master_model_container: 16
2024-07-24 16:42:35,614:INFO:_display_container: 2
2024-07-24 16:42:35,615:INFO:GradientBoostingRegressor(random_state=123)
2024-07-24 16:42:35,615:INFO:create_model() successfully completed......................................
2024-07-24 16:42:35,683:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:35,683:INFO:Creating metrics dataframe
2024-07-24 16:42:35,719:INFO:Initializing Light Gradient Boosting Machine
2024-07-24 16:42:35,719:INFO:Total runtime is 0.3035190701484681 minutes
2024-07-24 16:42:35,719:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:35,719:INFO:Initializing create_model()
2024-07-24 16:42:35,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:35,719:INFO:Checking exceptions
2024-07-24 16:42:35,719:INFO:Importing libraries
2024-07-24 16:42:35,719:INFO:Copying training dataset
2024-07-24 16:42:35,719:INFO:Defining folds
2024-07-24 16:42:35,719:INFO:Declaring metric variables
2024-07-24 16:42:35,735:INFO:Importing untrained model
2024-07-24 16:42:35,735:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 16:42:35,760:INFO:Starting cross validation
2024-07-24 16:42:35,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:36,632:INFO:Calculating mean and std
2024-07-24 16:42:36,633:INFO:Creating metrics dataframe
2024-07-24 16:42:36,634:INFO:Uploading results into container
2024-07-24 16:42:36,634:INFO:Uploading model into container now
2024-07-24 16:42:36,634:INFO:_master_model_container: 17
2024-07-24 16:42:36,634:INFO:_display_container: 2
2024-07-24 16:42:36,634:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-07-24 16:42:36,634:INFO:create_model() successfully completed......................................
2024-07-24 16:42:36,734:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:36,734:INFO:Creating metrics dataframe
2024-07-24 16:42:36,740:INFO:Initializing Dummy Regressor
2024-07-24 16:42:36,740:INFO:Total runtime is 0.320530128479004 minutes
2024-07-24 16:42:36,751:INFO:SubProcess create_model() called ==================================
2024-07-24 16:42:36,751:INFO:Initializing create_model()
2024-07-24 16:42:36,752:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1C21005B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:36,752:INFO:Checking exceptions
2024-07-24 16:42:36,752:INFO:Importing libraries
2024-07-24 16:42:36,752:INFO:Copying training dataset
2024-07-24 16:42:36,755:INFO:Defining folds
2024-07-24 16:42:36,755:INFO:Declaring metric variables
2024-07-24 16:42:36,755:INFO:Importing untrained model
2024-07-24 16:42:36,768:INFO:Dummy Regressor Imported successfully
2024-07-24 16:42:36,783:INFO:Starting cross validation
2024-07-24 16:42:36,787:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:42:37,198:INFO:Calculating mean and std
2024-07-24 16:42:37,201:INFO:Creating metrics dataframe
2024-07-24 16:42:37,206:INFO:Uploading results into container
2024-07-24 16:42:37,207:INFO:Uploading model into container now
2024-07-24 16:42:37,209:INFO:_master_model_container: 18
2024-07-24 16:42:37,209:INFO:_display_container: 2
2024-07-24 16:42:37,210:INFO:DummyRegressor()
2024-07-24 16:42:37,210:INFO:create_model() successfully completed......................................
2024-07-24 16:42:37,285:INFO:SubProcess create_model() end ==================================
2024-07-24 16:42:37,285:INFO:Creating metrics dataframe
2024-07-24 16:42:37,316:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-24 16:42:37,323:INFO:Initializing create_model()
2024-07-24 16:42:37,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C1B080E9A0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:42:37,323:INFO:Checking exceptions
2024-07-24 16:42:37,334:INFO:Importing libraries
2024-07-24 16:42:37,334:INFO:Copying training dataset
2024-07-24 16:42:37,338:INFO:Defining folds
2024-07-24 16:42:37,338:INFO:Declaring metric variables
2024-07-24 16:42:37,339:INFO:Importing untrained model
2024-07-24 16:42:37,339:INFO:Declaring custom model
2024-07-24 16:42:37,340:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 16:42:37,342:INFO:Cross validation set to False
2024-07-24 16:42:37,342:INFO:Fitting Model
2024-07-24 16:42:37,503:INFO:GradientBoostingRegressor(random_state=123)
2024-07-24 16:42:37,503:INFO:create_model() successfully completed......................................
2024-07-24 16:42:37,655:INFO:_master_model_container: 18
2024-07-24 16:42:37,655:INFO:_display_container: 2
2024-07-24 16:42:37,655:INFO:GradientBoostingRegressor(random_state=123)
2024-07-24 16:42:37,655:INFO:compare_models() successfully completed......................................
2024-07-24 16:45:10,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:45:10,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:45:10,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:45:10,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:45:10,437:INFO:PyCaret ClassificationExperiment
2024-07-24 16:45:10,437:INFO:Logging name: clf-default-name
2024-07-24 16:45:10,437:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:45:10,437:INFO:version 3.3.2
2024-07-24 16:45:10,437:INFO:Initializing setup()
2024-07-24 16:45:10,437:INFO:self.USI: 01e0
2024-07-24 16:45:10,437:INFO:self._variable_keys: {'exp_id', 'is_multiclass', 'memory', 'X_train', 'log_plots_param', 'html_param', 'fix_imbalance', 'gpu_n_jobs_param', 'data', 'X_test', 'n_jobs_param', 'fold_shuffle_param', 'idx', 'logging_param', 'pipeline', 'gpu_param', 'seed', 'X', 'y', '_available_plots', 'y_test', 'exp_name_log', 'target_param', 'fold_groups_param', 'y_train', 'fold_generator', 'USI', '_ml_usecase'}
2024-07-24 16:45:10,437:INFO:Checking environment
2024-07-24 16:45:10,437:INFO:python_version: 3.9.19
2024-07-24 16:45:10,437:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:45:10,437:INFO:machine: AMD64
2024-07-24 16:45:10,437:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:45:10,437:INFO:Memory: svmem(total=8387862528, available=1397673984, percent=83.3, used=6990188544, free=1397673984)
2024-07-24 16:45:10,437:INFO:Physical Core: 2
2024-07-24 16:45:10,437:INFO:Logical Core: 4
2024-07-24 16:45:10,437:INFO:Checking libraries
2024-07-24 16:45:10,437:INFO:System:
2024-07-24 16:45:10,437:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:45:10,437:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:45:10,437:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:45:10,437:INFO:PyCaret required dependencies:
2024-07-24 16:45:10,437:INFO:                 pip: 24.0
2024-07-24 16:45:10,437:INFO:          setuptools: 69.5.1
2024-07-24 16:45:10,437:INFO:             pycaret: 3.3.2
2024-07-24 16:45:10,437:INFO:             IPython: 8.18.1
2024-07-24 16:45:10,437:INFO:          ipywidgets: 8.1.3
2024-07-24 16:45:10,437:INFO:                tqdm: 4.66.4
2024-07-24 16:45:10,437:INFO:               numpy: 1.26.4
2024-07-24 16:45:10,437:INFO:              pandas: 2.1.4
2024-07-24 16:45:10,437:INFO:              jinja2: 3.1.4
2024-07-24 16:45:10,437:INFO:               scipy: 1.11.4
2024-07-24 16:45:10,437:INFO:              joblib: 1.3.2
2024-07-24 16:45:10,437:INFO:             sklearn: 1.4.2
2024-07-24 16:45:10,437:INFO:                pyod: 2.0.1
2024-07-24 16:45:10,437:INFO:            imblearn: 0.12.3
2024-07-24 16:45:10,437:INFO:   category_encoders: 2.6.3
2024-07-24 16:45:10,437:INFO:            lightgbm: 4.4.0
2024-07-24 16:45:10,437:INFO:               numba: 0.60.0
2024-07-24 16:45:10,437:INFO:            requests: 2.32.3
2024-07-24 16:45:10,437:INFO:          matplotlib: 3.7.5
2024-07-24 16:45:10,437:INFO:          scikitplot: 0.3.7
2024-07-24 16:45:10,437:INFO:         yellowbrick: 1.5
2024-07-24 16:45:10,437:INFO:              plotly: 5.23.0
2024-07-24 16:45:10,437:INFO:    plotly-resampler: Not installed
2024-07-24 16:45:10,437:INFO:             kaleido: 0.2.1
2024-07-24 16:45:10,437:INFO:           schemdraw: 0.15
2024-07-24 16:45:10,437:INFO:         statsmodels: 0.14.2
2024-07-24 16:45:10,437:INFO:              sktime: 0.26.0
2024-07-24 16:45:10,437:INFO:               tbats: 1.1.3
2024-07-24 16:45:10,437:INFO:            pmdarima: 2.0.4
2024-07-24 16:45:10,437:INFO:              psutil: 6.0.0
2024-07-24 16:45:10,437:INFO:          markupsafe: 2.1.5
2024-07-24 16:45:10,437:INFO:             pickle5: Not installed
2024-07-24 16:45:10,437:INFO:         cloudpickle: 3.0.0
2024-07-24 16:45:10,437:INFO:         deprecation: 2.1.0
2024-07-24 16:45:10,437:INFO:              xxhash: 3.4.1
2024-07-24 16:45:10,437:INFO:           wurlitzer: Not installed
2024-07-24 16:45:10,437:INFO:PyCaret optional dependencies:
2024-07-24 16:45:10,454:INFO:                shap: Not installed
2024-07-24 16:45:10,454:INFO:           interpret: Not installed
2024-07-24 16:45:10,454:INFO:                umap: Not installed
2024-07-24 16:45:10,454:INFO:     ydata_profiling: Not installed
2024-07-24 16:45:10,454:INFO:  explainerdashboard: Not installed
2024-07-24 16:45:10,454:INFO:             autoviz: Not installed
2024-07-24 16:45:10,454:INFO:           fairlearn: Not installed
2024-07-24 16:45:10,454:INFO:          deepchecks: Not installed
2024-07-24 16:45:10,454:INFO:             xgboost: Not installed
2024-07-24 16:45:10,454:INFO:            catboost: Not installed
2024-07-24 16:45:10,454:INFO:              kmodes: Not installed
2024-07-24 16:45:10,454:INFO:             mlxtend: Not installed
2024-07-24 16:45:10,454:INFO:       statsforecast: Not installed
2024-07-24 16:45:10,454:INFO:        tune_sklearn: Not installed
2024-07-24 16:45:10,454:INFO:                 ray: Not installed
2024-07-24 16:45:10,454:INFO:            hyperopt: Not installed
2024-07-24 16:45:10,454:INFO:              optuna: Not installed
2024-07-24 16:45:10,454:INFO:               skopt: Not installed
2024-07-24 16:45:10,454:INFO:              mlflow: Not installed
2024-07-24 16:45:10,454:INFO:              gradio: Not installed
2024-07-24 16:45:10,454:INFO:             fastapi: Not installed
2024-07-24 16:45:10,454:INFO:             uvicorn: Not installed
2024-07-24 16:45:10,454:INFO:              m2cgen: Not installed
2024-07-24 16:45:10,454:INFO:           evidently: Not installed
2024-07-24 16:45:10,454:INFO:               fugue: Not installed
2024-07-24 16:45:10,454:INFO:           streamlit: Not installed
2024-07-24 16:45:10,454:INFO:             prophet: Not installed
2024-07-24 16:45:10,454:INFO:None
2024-07-24 16:45:10,454:INFO:Set up data.
2024-07-24 16:45:10,454:INFO:Set up folding strategy.
2024-07-24 16:45:10,454:INFO:Set up train/test split.
2024-07-24 16:45:10,454:INFO:Set up index.
2024-07-24 16:45:10,470:INFO:Assigning column types.
2024-07-24 16:45:10,471:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:45:10,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:45:10,523:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:45:10,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,615:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:45:10,615:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:45:10,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,638:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:45:10,691:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:45:10,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,771:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:45:10,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,789:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:45:10,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:10,970:INFO:Preparing preprocessing pipeline...
2024-07-24 16:45:10,970:INFO:Set up label encoding.
2024-07-24 16:45:10,970:INFO:Set up simple imputation.
2024-07-24 16:45:10,987:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:45:10,987:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-07-24 16:45:10,987:INFO:Creating final display dataframe.
2024-07-24 16:45:11,070:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                 123  
1                                             species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 5)  
5                                            (150, 5)  
6                                            (105, 5)  
7                                             (45, 5)  
8                                                   4  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               01e0  
2024-07-24 16:45:11,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:11,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:11,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:11,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:45:11,489:INFO:setup() successfully completed in 1.07s...............
2024-07-24 16:45:20,244:INFO:Initializing compare_models()
2024-07-24 16:45:20,244:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-24 16:45:20,244:INFO:Checking exceptions
2024-07-24 16:45:20,253:INFO:Preparing display monitor
2024-07-24 16:45:20,313:INFO:Initializing Logistic Regression
2024-07-24 16:45:20,313:INFO:Total runtime is 0.0 minutes
2024-07-24 16:45:20,319:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:20,320:INFO:Initializing create_model()
2024-07-24 16:45:20,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:20,321:INFO:Checking exceptions
2024-07-24 16:45:20,321:INFO:Importing libraries
2024-07-24 16:45:20,321:INFO:Copying training dataset
2024-07-24 16:45:20,332:INFO:Defining folds
2024-07-24 16:45:20,332:INFO:Declaring metric variables
2024-07-24 16:45:20,340:INFO:Importing untrained model
2024-07-24 16:45:20,348:INFO:Logistic Regression Imported successfully
2024-07-24 16:45:20,401:INFO:Starting cross validation
2024-07-24 16:45:20,453:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:25,082:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:25,095:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,095:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,098:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,100:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,100:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,100:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,107:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,108:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,108:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,155:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:25,160:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,160:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,168:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,249:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:25,251:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,256:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,259:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:25,259:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:25,261:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,261:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,261:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,261:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,261:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,269:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,271:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,311:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:25,311:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,311:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,319:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,324:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:25,324:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,329:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:25,329:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,329:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,331:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,331:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,331:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,356:INFO:Calculating mean and std
2024-07-24 16:45:25,361:INFO:Creating metrics dataframe
2024-07-24 16:45:25,368:INFO:Uploading results into container
2024-07-24 16:45:25,369:INFO:Uploading model into container now
2024-07-24 16:45:25,369:INFO:_master_model_container: 1
2024-07-24 16:45:25,369:INFO:_display_container: 2
2024-07-24 16:45:25,375:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-24 16:45:25,375:INFO:create_model() successfully completed......................................
2024-07-24 16:45:25,449:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:25,449:INFO:Creating metrics dataframe
2024-07-24 16:45:25,457:INFO:Initializing K Neighbors Classifier
2024-07-24 16:45:25,457:INFO:Total runtime is 0.08574764728546143 minutes
2024-07-24 16:45:25,457:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:25,457:INFO:Initializing create_model()
2024-07-24 16:45:25,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:25,457:INFO:Checking exceptions
2024-07-24 16:45:25,457:INFO:Importing libraries
2024-07-24 16:45:25,457:INFO:Copying training dataset
2024-07-24 16:45:25,457:INFO:Defining folds
2024-07-24 16:45:25,457:INFO:Declaring metric variables
2024-07-24 16:45:25,475:INFO:Importing untrained model
2024-07-24 16:45:25,483:INFO:K Neighbors Classifier Imported successfully
2024-07-24 16:45:25,506:INFO:Starting cross validation
2024-07-24 16:45:25,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,657:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,673:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,673:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,675:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,792:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,792:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,809:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,810:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,810:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,810:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,810:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,810:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,810:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,825:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,825:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,825:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,911:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,922:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,923:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,923:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,923:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:25,956:INFO:Calculating mean and std
2024-07-24 16:45:25,956:INFO:Creating metrics dataframe
2024-07-24 16:45:25,963:INFO:Uploading results into container
2024-07-24 16:45:25,963:INFO:Uploading model into container now
2024-07-24 16:45:25,963:INFO:_master_model_container: 2
2024-07-24 16:45:25,963:INFO:_display_container: 2
2024-07-24 16:45:25,963:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-24 16:45:25,963:INFO:create_model() successfully completed......................................
2024-07-24 16:45:26,050:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:26,050:INFO:Creating metrics dataframe
2024-07-24 16:45:26,063:INFO:Initializing Naive Bayes
2024-07-24 16:45:26,063:INFO:Total runtime is 0.09583967526753744 minutes
2024-07-24 16:45:26,072:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:26,072:INFO:Initializing create_model()
2024-07-24 16:45:26,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:26,072:INFO:Checking exceptions
2024-07-24 16:45:26,072:INFO:Importing libraries
2024-07-24 16:45:26,072:INFO:Copying training dataset
2024-07-24 16:45:26,072:INFO:Defining folds
2024-07-24 16:45:26,072:INFO:Declaring metric variables
2024-07-24 16:45:26,072:INFO:Importing untrained model
2024-07-24 16:45:26,094:INFO:Naive Bayes Imported successfully
2024-07-24 16:45:26,110:INFO:Starting cross validation
2024-07-24 16:45:26,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,171:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,193:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,206:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,224:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,224:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,224:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,224:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,224:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,224:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,240:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,240:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,240:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,262:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,262:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,270:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,273:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,282:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,282:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,282:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,282:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,290:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,300:INFO:Calculating mean and std
2024-07-24 16:45:26,306:INFO:Creating metrics dataframe
2024-07-24 16:45:26,310:INFO:Uploading results into container
2024-07-24 16:45:26,310:INFO:Uploading model into container now
2024-07-24 16:45:26,310:INFO:_master_model_container: 3
2024-07-24 16:45:26,310:INFO:_display_container: 2
2024-07-24 16:45:26,310:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-24 16:45:26,315:INFO:create_model() successfully completed......................................
2024-07-24 16:45:26,390:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:26,390:INFO:Creating metrics dataframe
2024-07-24 16:45:26,391:INFO:Initializing Decision Tree Classifier
2024-07-24 16:45:26,391:INFO:Total runtime is 0.10130497217178344 minutes
2024-07-24 16:45:26,404:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:26,405:INFO:Initializing create_model()
2024-07-24 16:45:26,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:26,405:INFO:Checking exceptions
2024-07-24 16:45:26,405:INFO:Importing libraries
2024-07-24 16:45:26,405:INFO:Copying training dataset
2024-07-24 16:45:26,410:INFO:Defining folds
2024-07-24 16:45:26,410:INFO:Declaring metric variables
2024-07-24 16:45:26,417:INFO:Importing untrained model
2024-07-24 16:45:26,428:INFO:Decision Tree Classifier Imported successfully
2024-07-24 16:45:26,440:INFO:Starting cross validation
2024-07-24 16:45:26,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:26,495:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,495:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,495:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,503:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,507:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,509:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,509:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,510:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,510:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,510:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,538:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,543:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,545:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,545:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,561:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,561:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,577:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,577:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,589:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,592:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,592:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,604:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,611:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,611:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,613:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,617:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,621:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,623:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,631:INFO:Calculating mean and std
2024-07-24 16:45:26,631:INFO:Creating metrics dataframe
2024-07-24 16:45:26,638:INFO:Uploading results into container
2024-07-24 16:45:26,639:INFO:Uploading model into container now
2024-07-24 16:45:26,640:INFO:_master_model_container: 4
2024-07-24 16:45:26,640:INFO:_display_container: 2
2024-07-24 16:45:26,643:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-24 16:45:26,643:INFO:create_model() successfully completed......................................
2024-07-24 16:45:26,707:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:26,707:INFO:Creating metrics dataframe
2024-07-24 16:45:26,725:INFO:Initializing SVM - Linear Kernel
2024-07-24 16:45:26,725:INFO:Total runtime is 0.10687834024429321 minutes
2024-07-24 16:45:26,725:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:26,725:INFO:Initializing create_model()
2024-07-24 16:45:26,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:26,725:INFO:Checking exceptions
2024-07-24 16:45:26,725:INFO:Importing libraries
2024-07-24 16:45:26,725:INFO:Copying training dataset
2024-07-24 16:45:26,725:INFO:Defining folds
2024-07-24 16:45:26,725:INFO:Declaring metric variables
2024-07-24 16:45:26,739:INFO:Importing untrained model
2024-07-24 16:45:26,741:INFO:SVM - Linear Kernel Imported successfully
2024-07-24 16:45:26,810:INFO:Starting cross validation
2024-07-24 16:45:26,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:26,964:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:26,972:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:26,972:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:26,972:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,974:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,974:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,974:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,974:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,974:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:26,974:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:26,982:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,982:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,982:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:26,994:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:26,994:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,005:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,005:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:27,012:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,064:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,064:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,074:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,074:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,074:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,075:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,075:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,075:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,075:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,087:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,094:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,104:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,107:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,107:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:27,112:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,122:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,122:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,132:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,134:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:27,139:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,145:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,145:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,155:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,158:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:27,158:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,171:INFO:Calculating mean and std
2024-07-24 16:45:27,171:INFO:Creating metrics dataframe
2024-07-24 16:45:27,173:INFO:Uploading results into container
2024-07-24 16:45:27,173:INFO:Uploading model into container now
2024-07-24 16:45:27,173:INFO:_master_model_container: 5
2024-07-24 16:45:27,173:INFO:_display_container: 2
2024-07-24 16:45:27,173:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-24 16:45:27,173:INFO:create_model() successfully completed......................................
2024-07-24 16:45:27,241:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:27,241:INFO:Creating metrics dataframe
2024-07-24 16:45:27,256:INFO:Initializing Ridge Classifier
2024-07-24 16:45:27,256:INFO:Total runtime is 0.11571464538574219 minutes
2024-07-24 16:45:27,256:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:27,256:INFO:Initializing create_model()
2024-07-24 16:45:27,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:27,256:INFO:Checking exceptions
2024-07-24 16:45:27,256:INFO:Importing libraries
2024-07-24 16:45:27,256:INFO:Copying training dataset
2024-07-24 16:45:27,269:INFO:Defining folds
2024-07-24 16:45:27,269:INFO:Declaring metric variables
2024-07-24 16:45:27,275:INFO:Importing untrained model
2024-07-24 16:45:27,282:INFO:Ridge Classifier Imported successfully
2024-07-24 16:45:27,296:INFO:Starting cross validation
2024-07-24 16:45:27,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:27,358:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,359:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,371:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,371:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,373:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,373:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,373:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,406:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,406:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,406:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,406:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,406:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,406:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,406:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,421:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,421:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,421:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,421:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,421:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,421:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,421:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,439:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,443:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,455:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,455:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:27,455:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,455:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,455:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,455:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,455:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:27,489:INFO:Calculating mean and std
2024-07-24 16:45:27,492:INFO:Creating metrics dataframe
2024-07-24 16:45:27,500:INFO:Uploading results into container
2024-07-24 16:45:27,500:INFO:Uploading model into container now
2024-07-24 16:45:27,500:INFO:_master_model_container: 6
2024-07-24 16:45:27,500:INFO:_display_container: 2
2024-07-24 16:45:27,500:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-24 16:45:27,500:INFO:create_model() successfully completed......................................
2024-07-24 16:45:27,590:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:27,590:INFO:Creating metrics dataframe
2024-07-24 16:45:27,605:INFO:Initializing Random Forest Classifier
2024-07-24 16:45:27,605:INFO:Total runtime is 0.12154125769933065 minutes
2024-07-24 16:45:27,605:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:27,605:INFO:Initializing create_model()
2024-07-24 16:45:27,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:27,605:INFO:Checking exceptions
2024-07-24 16:45:27,605:INFO:Importing libraries
2024-07-24 16:45:27,605:INFO:Copying training dataset
2024-07-24 16:45:27,605:INFO:Defining folds
2024-07-24 16:45:27,605:INFO:Declaring metric variables
2024-07-24 16:45:27,619:INFO:Importing untrained model
2024-07-24 16:45:27,619:INFO:Random Forest Classifier Imported successfully
2024-07-24 16:45:27,645:INFO:Starting cross validation
2024-07-24 16:45:27,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:28,004:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,004:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,004:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,020:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,020:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,020:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,020:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,039:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,043:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,088:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,088:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,104:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,387:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,387:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,387:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,404:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,404:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,404:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,436:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,436:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,453:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,488:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,497:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,503:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,697:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,697:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,697:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,697:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,713:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,713:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,737:INFO:Calculating mean and std
2024-07-24 16:45:28,738:INFO:Creating metrics dataframe
2024-07-24 16:45:28,738:INFO:Uploading results into container
2024-07-24 16:45:28,738:INFO:Uploading model into container now
2024-07-24 16:45:28,738:INFO:_master_model_container: 7
2024-07-24 16:45:28,738:INFO:_display_container: 2
2024-07-24 16:45:28,738:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-24 16:45:28,738:INFO:create_model() successfully completed......................................
2024-07-24 16:45:28,823:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:28,823:INFO:Creating metrics dataframe
2024-07-24 16:45:28,838:INFO:Initializing Quadratic Discriminant Analysis
2024-07-24 16:45:28,838:INFO:Total runtime is 0.14209453662236532 minutes
2024-07-24 16:45:28,852:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:28,852:INFO:Initializing create_model()
2024-07-24 16:45:28,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:28,853:INFO:Checking exceptions
2024-07-24 16:45:28,853:INFO:Importing libraries
2024-07-24 16:45:28,853:INFO:Copying training dataset
2024-07-24 16:45:28,853:INFO:Defining folds
2024-07-24 16:45:28,853:INFO:Declaring metric variables
2024-07-24 16:45:28,853:INFO:Importing untrained model
2024-07-24 16:45:28,853:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-24 16:45:28,881:INFO:Starting cross validation
2024-07-24 16:45:28,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:28,942:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:28,942:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:28,942:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:28,942:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,942:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,952:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,953:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,954:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,954:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,956:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,957:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,957:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,957:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,989:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:28,989:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,989:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:28,998:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,014:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,019:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,019:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,037:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,038:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,038:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,038:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,038:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,038:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,038:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,038:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,052:INFO:Calculating mean and std
2024-07-24 16:45:29,053:INFO:Creating metrics dataframe
2024-07-24 16:45:29,055:INFO:Uploading results into container
2024-07-24 16:45:29,055:INFO:Uploading model into container now
2024-07-24 16:45:29,055:INFO:_master_model_container: 8
2024-07-24 16:45:29,055:INFO:_display_container: 2
2024-07-24 16:45:29,055:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-24 16:45:29,055:INFO:create_model() successfully completed......................................
2024-07-24 16:45:29,121:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:29,121:INFO:Creating metrics dataframe
2024-07-24 16:45:29,139:INFO:Initializing Ada Boost Classifier
2024-07-24 16:45:29,139:INFO:Total runtime is 0.1471118648846944 minutes
2024-07-24 16:45:29,139:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:29,152:INFO:Initializing create_model()
2024-07-24 16:45:29,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:29,152:INFO:Checking exceptions
2024-07-24 16:45:29,152:INFO:Importing libraries
2024-07-24 16:45:29,153:INFO:Copying training dataset
2024-07-24 16:45:29,154:INFO:Defining folds
2024-07-24 16:45:29,154:INFO:Declaring metric variables
2024-07-24 16:45:29,154:INFO:Importing untrained model
2024-07-24 16:45:29,154:INFO:Ada Boost Classifier Imported successfully
2024-07-24 16:45:29,182:INFO:Starting cross validation
2024-07-24 16:45:29,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:29,243:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,243:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,247:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,248:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,481:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,481:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,504:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,509:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,509:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,509:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,511:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,511:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,521:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,522:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,531:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,541:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,541:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,549:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,579:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,586:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,591:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,636:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,722:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,722:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,722:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,722:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,722:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,730:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,735:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,737:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,752:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,752:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,752:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-24 16:45:29,752:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,762:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,769:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,802:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,802:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,802:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,802:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,886:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,886:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:29,886:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,886:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,886:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,892:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,892:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,892:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:29,919:INFO:Calculating mean and std
2024-07-24 16:45:29,921:INFO:Creating metrics dataframe
2024-07-24 16:45:29,934:INFO:Uploading results into container
2024-07-24 16:45:29,936:INFO:Uploading model into container now
2024-07-24 16:45:29,938:INFO:_master_model_container: 9
2024-07-24 16:45:29,939:INFO:_display_container: 2
2024-07-24 16:45:29,939:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-24 16:45:29,939:INFO:create_model() successfully completed......................................
2024-07-24 16:45:30,004:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:30,004:INFO:Creating metrics dataframe
2024-07-24 16:45:30,021:INFO:Initializing Gradient Boosting Classifier
2024-07-24 16:45:30,021:INFO:Total runtime is 0.16181297699610392 minutes
2024-07-24 16:45:30,021:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:30,021:INFO:Initializing create_model()
2024-07-24 16:45:30,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:30,021:INFO:Checking exceptions
2024-07-24 16:45:30,021:INFO:Importing libraries
2024-07-24 16:45:30,021:INFO:Copying training dataset
2024-07-24 16:45:30,036:INFO:Defining folds
2024-07-24 16:45:30,036:INFO:Declaring metric variables
2024-07-24 16:45:30,036:INFO:Importing untrained model
2024-07-24 16:45:30,089:INFO:Gradient Boosting Classifier Imported successfully
2024-07-24 16:45:30,102:INFO:Starting cross validation
2024-07-24 16:45:30,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:30,769:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:30,777:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,779:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,787:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,789:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:30,789:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,801:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:30,801:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,801:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,807:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,809:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,809:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,830:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:30,835:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,840:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:30,842:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,436:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:31,444:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,449:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,451:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,468:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:31,474:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,476:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:31,476:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,476:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,484:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,486:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,486:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,494:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:31,499:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,500:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,506:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,918:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:31,920:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,920:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,928:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,940:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:31,940:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,940:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,940:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:31,973:INFO:Calculating mean and std
2024-07-24 16:45:31,973:INFO:Creating metrics dataframe
2024-07-24 16:45:31,992:INFO:Uploading results into container
2024-07-24 16:45:31,992:INFO:Uploading model into container now
2024-07-24 16:45:31,999:INFO:_master_model_container: 10
2024-07-24 16:45:32,000:INFO:_display_container: 2
2024-07-24 16:45:32,003:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-24 16:45:32,003:INFO:create_model() successfully completed......................................
2024-07-24 16:45:32,083:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:32,083:INFO:Creating metrics dataframe
2024-07-24 16:45:32,098:INFO:Initializing Linear Discriminant Analysis
2024-07-24 16:45:32,099:INFO:Total runtime is 0.1964475671450297 minutes
2024-07-24 16:45:32,100:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:32,100:INFO:Initializing create_model()
2024-07-24 16:45:32,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:32,100:INFO:Checking exceptions
2024-07-24 16:45:32,100:INFO:Importing libraries
2024-07-24 16:45:32,100:INFO:Copying training dataset
2024-07-24 16:45:32,100:INFO:Defining folds
2024-07-24 16:45:32,100:INFO:Declaring metric variables
2024-07-24 16:45:32,119:INFO:Importing untrained model
2024-07-24 16:45:32,127:INFO:Linear Discriminant Analysis Imported successfully
2024-07-24 16:45:32,178:INFO:Starting cross validation
2024-07-24 16:45:32,183:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:32,219:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,219:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,219:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,232:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,233:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,233:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,233:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,245:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,268:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,268:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,284:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,300:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,300:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,318:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,318:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,318:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-24 16:45:32,318:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,318:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,333:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,333:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,334:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,348:INFO:Calculating mean and std
2024-07-24 16:45:32,349:INFO:Creating metrics dataframe
2024-07-24 16:45:32,349:INFO:Uploading results into container
2024-07-24 16:45:32,349:INFO:Uploading model into container now
2024-07-24 16:45:32,359:INFO:_master_model_container: 11
2024-07-24 16:45:32,360:INFO:_display_container: 2
2024-07-24 16:45:32,361:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-24 16:45:32,361:INFO:create_model() successfully completed......................................
2024-07-24 16:45:32,434:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:32,434:INFO:Creating metrics dataframe
2024-07-24 16:45:32,448:INFO:Initializing Extra Trees Classifier
2024-07-24 16:45:32,448:INFO:Total runtime is 0.20225372711817424 minutes
2024-07-24 16:45:32,449:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:32,449:INFO:Initializing create_model()
2024-07-24 16:45:32,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:32,449:INFO:Checking exceptions
2024-07-24 16:45:32,449:INFO:Importing libraries
2024-07-24 16:45:32,449:INFO:Copying training dataset
2024-07-24 16:45:32,449:INFO:Defining folds
2024-07-24 16:45:32,449:INFO:Declaring metric variables
2024-07-24 16:45:32,458:INFO:Importing untrained model
2024-07-24 16:45:32,467:INFO:Extra Trees Classifier Imported successfully
2024-07-24 16:45:32,490:INFO:Starting cross validation
2024-07-24 16:45:32,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:32,804:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,804:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,804:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,816:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,816:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,816:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,833:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,835:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,837:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,854:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,854:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:32,865:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,098:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,098:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,098:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,115:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,117:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,117:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,128:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,134:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,160:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,165:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,167:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,360:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,365:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,365:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,365:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,365:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,382:INFO:Calculating mean and std
2024-07-24 16:45:33,383:INFO:Creating metrics dataframe
2024-07-24 16:45:33,383:INFO:Uploading results into container
2024-07-24 16:45:33,383:INFO:Uploading model into container now
2024-07-24 16:45:33,383:INFO:_master_model_container: 12
2024-07-24 16:45:33,383:INFO:_display_container: 2
2024-07-24 16:45:33,383:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-24 16:45:33,383:INFO:create_model() successfully completed......................................
2024-07-24 16:45:33,466:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:33,466:INFO:Creating metrics dataframe
2024-07-24 16:45:33,482:INFO:Initializing Light Gradient Boosting Machine
2024-07-24 16:45:33,482:INFO:Total runtime is 0.21949459711710612 minutes
2024-07-24 16:45:33,482:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:33,482:INFO:Initializing create_model()
2024-07-24 16:45:33,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:33,482:INFO:Checking exceptions
2024-07-24 16:45:33,482:INFO:Importing libraries
2024-07-24 16:45:33,482:INFO:Copying training dataset
2024-07-24 16:45:33,498:INFO:Defining folds
2024-07-24 16:45:33,498:INFO:Declaring metric variables
2024-07-24 16:45:33,498:INFO:Importing untrained model
2024-07-24 16:45:33,498:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 16:45:33,515:INFO:Starting cross validation
2024-07-24 16:45:33,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:33,682:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,692:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,698:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,703:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,703:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,713:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,731:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,733:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,733:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,747:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,753:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,756:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,833:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,841:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,847:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,871:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,873:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,883:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,883:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,883:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,891:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,932:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,934:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,934:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,984:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,984:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:33,984:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,004:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,004:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,012:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,022:INFO:Calculating mean and std
2024-07-24 16:45:34,022:INFO:Creating metrics dataframe
2024-07-24 16:45:34,024:INFO:Uploading results into container
2024-07-24 16:45:34,024:INFO:Uploading model into container now
2024-07-24 16:45:34,024:INFO:_master_model_container: 13
2024-07-24 16:45:34,024:INFO:_display_container: 2
2024-07-24 16:45:34,024:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-24 16:45:34,024:INFO:create_model() successfully completed......................................
2024-07-24 16:45:34,113:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:34,113:INFO:Creating metrics dataframe
2024-07-24 16:45:34,115:INFO:Initializing Dummy Classifier
2024-07-24 16:45:34,115:INFO:Total runtime is 0.23004500865936278 minutes
2024-07-24 16:45:34,115:INFO:SubProcess create_model() called ==================================
2024-07-24 16:45:34,115:INFO:Initializing create_model()
2024-07-24 16:45:34,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFA32D87F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:34,115:INFO:Checking exceptions
2024-07-24 16:45:34,115:INFO:Importing libraries
2024-07-24 16:45:34,115:INFO:Copying training dataset
2024-07-24 16:45:34,132:INFO:Defining folds
2024-07-24 16:45:34,132:INFO:Declaring metric variables
2024-07-24 16:45:34,132:INFO:Importing untrained model
2024-07-24 16:45:34,132:INFO:Dummy Classifier Imported successfully
2024-07-24 16:45:34,155:INFO:Starting cross validation
2024-07-24 16:45:34,158:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 16:45:34,206:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,208:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,212:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,214:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,215:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,216:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,217:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,217:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,218:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,219:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,219:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,219:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,231:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,234:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,235:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,235:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,288:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,297:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,299:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,299:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,299:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,299:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,299:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,299:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,299:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,299:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-24 16:45:34,313:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,313:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-24 16:45:34,330:INFO:Calculating mean and std
2024-07-24 16:45:34,331:INFO:Creating metrics dataframe
2024-07-24 16:45:34,331:INFO:Uploading results into container
2024-07-24 16:45:34,331:INFO:Uploading model into container now
2024-07-24 16:45:34,331:INFO:_master_model_container: 14
2024-07-24 16:45:34,331:INFO:_display_container: 2
2024-07-24 16:45:34,331:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-24 16:45:34,331:INFO:create_model() successfully completed......................................
2024-07-24 16:45:34,414:INFO:SubProcess create_model() end ==================================
2024-07-24 16:45:34,414:INFO:Creating metrics dataframe
2024-07-24 16:45:34,419:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-24 16:45:34,435:INFO:Initializing create_model()
2024-07-24 16:45:34,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA26931F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 16:45:34,435:INFO:Checking exceptions
2024-07-24 16:45:34,442:INFO:Importing libraries
2024-07-24 16:45:34,442:INFO:Copying training dataset
2024-07-24 16:45:34,448:INFO:Defining folds
2024-07-24 16:45:34,448:INFO:Declaring metric variables
2024-07-24 16:45:34,448:INFO:Importing untrained model
2024-07-24 16:45:34,448:INFO:Declaring custom model
2024-07-24 16:45:34,448:INFO:Logistic Regression Imported successfully
2024-07-24 16:45:34,449:INFO:Cross validation set to False
2024-07-24 16:45:34,450:INFO:Fitting Model
2024-07-24 16:45:34,465:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-24 16:45:34,465:INFO:create_model() successfully completed......................................
2024-07-24 16:45:34,607:INFO:_master_model_container: 14
2024-07-24 16:45:34,607:INFO:_display_container: 2
2024-07-24 16:45:34,607:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-24 16:45:34,607:INFO:compare_models() successfully completed......................................
2024-07-24 16:49:31,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:49:31,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:49:31,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:49:31,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:49:31,864:INFO:PyCaret ClusteringExperiment
2024-07-24 16:49:31,865:INFO:Logging name: cluster-default-name
2024-07-24 16:49:31,865:INFO:ML Usecase: MLUsecase.CLUSTERING
2024-07-24 16:49:31,865:INFO:version 3.3.2
2024-07-24 16:49:31,865:INFO:Initializing setup()
2024-07-24 16:49:31,865:INFO:self.USI: cf2b
2024-07-24 16:49:31,865:INFO:self._variable_keys: {'idx', 'logging_param', 'data', 'USI', 'pipeline', 'exp_id', 'exp_name_log', 'seed', 'gpu_n_jobs_param', 'log_plots_param', 'X', '_ml_usecase', '_available_plots', 'gpu_param', 'n_jobs_param', 'memory', 'html_param'}
2024-07-24 16:49:31,865:INFO:Checking environment
2024-07-24 16:49:31,865:INFO:python_version: 3.9.19
2024-07-24 16:49:31,865:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:49:31,865:INFO:machine: AMD64
2024-07-24 16:49:31,865:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:49:31,865:INFO:Memory: svmem(total=8387862528, available=711315456, percent=91.5, used=7676547072, free=711315456)
2024-07-24 16:49:31,865:INFO:Physical Core: 2
2024-07-24 16:49:31,866:INFO:Logical Core: 4
2024-07-24 16:49:31,866:INFO:Checking libraries
2024-07-24 16:49:31,866:INFO:System:
2024-07-24 16:49:31,866:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:49:31,866:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:49:31,866:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:49:31,866:INFO:PyCaret required dependencies:
2024-07-24 16:49:31,903:INFO:                 pip: 24.0
2024-07-24 16:49:31,903:INFO:          setuptools: 69.5.1
2024-07-24 16:49:31,903:INFO:             pycaret: 3.3.2
2024-07-24 16:49:31,903:INFO:             IPython: 8.18.1
2024-07-24 16:49:31,903:INFO:          ipywidgets: 8.1.3
2024-07-24 16:49:31,903:INFO:                tqdm: 4.66.4
2024-07-24 16:49:31,903:INFO:               numpy: 1.26.4
2024-07-24 16:49:31,903:INFO:              pandas: 2.1.4
2024-07-24 16:49:31,903:INFO:              jinja2: 3.1.4
2024-07-24 16:49:31,903:INFO:               scipy: 1.11.4
2024-07-24 16:49:31,903:INFO:              joblib: 1.3.2
2024-07-24 16:49:31,903:INFO:             sklearn: 1.4.2
2024-07-24 16:49:31,903:INFO:                pyod: 2.0.1
2024-07-24 16:49:31,903:INFO:            imblearn: 0.12.3
2024-07-24 16:49:31,904:INFO:   category_encoders: 2.6.3
2024-07-24 16:49:31,904:INFO:            lightgbm: 4.4.0
2024-07-24 16:49:31,904:INFO:               numba: 0.60.0
2024-07-24 16:49:31,904:INFO:            requests: 2.32.3
2024-07-24 16:49:31,904:INFO:          matplotlib: 3.7.5
2024-07-24 16:49:31,904:INFO:          scikitplot: 0.3.7
2024-07-24 16:49:31,904:INFO:         yellowbrick: 1.5
2024-07-24 16:49:31,904:INFO:              plotly: 5.23.0
2024-07-24 16:49:31,904:INFO:    plotly-resampler: Not installed
2024-07-24 16:49:31,904:INFO:             kaleido: 0.2.1
2024-07-24 16:49:31,904:INFO:           schemdraw: 0.15
2024-07-24 16:49:31,904:INFO:         statsmodels: 0.14.2
2024-07-24 16:49:31,904:INFO:              sktime: 0.26.0
2024-07-24 16:49:31,904:INFO:               tbats: 1.1.3
2024-07-24 16:49:31,904:INFO:            pmdarima: 2.0.4
2024-07-24 16:49:31,904:INFO:              psutil: 6.0.0
2024-07-24 16:49:31,904:INFO:          markupsafe: 2.1.5
2024-07-24 16:49:31,904:INFO:             pickle5: Not installed
2024-07-24 16:49:31,904:INFO:         cloudpickle: 3.0.0
2024-07-24 16:49:31,904:INFO:         deprecation: 2.1.0
2024-07-24 16:49:31,904:INFO:              xxhash: 3.4.1
2024-07-24 16:49:31,904:INFO:           wurlitzer: Not installed
2024-07-24 16:49:31,904:INFO:PyCaret optional dependencies:
2024-07-24 16:49:31,936:INFO:                shap: Not installed
2024-07-24 16:49:31,936:INFO:           interpret: Not installed
2024-07-24 16:49:31,936:INFO:                umap: Not installed
2024-07-24 16:49:31,936:INFO:     ydata_profiling: Not installed
2024-07-24 16:49:31,936:INFO:  explainerdashboard: Not installed
2024-07-24 16:49:31,936:INFO:             autoviz: Not installed
2024-07-24 16:49:31,936:INFO:           fairlearn: Not installed
2024-07-24 16:49:31,936:INFO:          deepchecks: Not installed
2024-07-24 16:49:31,936:INFO:             xgboost: Not installed
2024-07-24 16:49:31,936:INFO:            catboost: Not installed
2024-07-24 16:49:31,936:INFO:              kmodes: Not installed
2024-07-24 16:49:31,936:INFO:             mlxtend: Not installed
2024-07-24 16:49:31,937:INFO:       statsforecast: Not installed
2024-07-24 16:49:31,937:INFO:        tune_sklearn: Not installed
2024-07-24 16:49:31,937:INFO:                 ray: Not installed
2024-07-24 16:49:31,937:INFO:            hyperopt: Not installed
2024-07-24 16:49:31,937:INFO:              optuna: Not installed
2024-07-24 16:49:31,937:INFO:               skopt: Not installed
2024-07-24 16:49:31,937:INFO:              mlflow: Not installed
2024-07-24 16:49:31,937:INFO:              gradio: Not installed
2024-07-24 16:49:31,937:INFO:             fastapi: Not installed
2024-07-24 16:49:31,937:INFO:             uvicorn: Not installed
2024-07-24 16:49:31,937:INFO:              m2cgen: Not installed
2024-07-24 16:49:31,937:INFO:           evidently: Not installed
2024-07-24 16:49:31,937:INFO:               fugue: Not installed
2024-07-24 16:49:31,937:INFO:           streamlit: Not installed
2024-07-24 16:49:31,937:INFO:             prophet: Not installed
2024-07-24 16:49:31,937:INFO:None
2024-07-24 16:49:31,937:INFO:Set up data.
2024-07-24 16:49:31,941:INFO:Set up index.
2024-07-24 16:49:31,941:INFO:Assigning column types.
2024-07-24 16:49:31,942:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2024-07-24 16:49:31,945:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-07-24 16:49:31,945:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:49:31,945:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2024-07-24 16:49:31,946:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:49:31,946:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2024-07-24 16:49:31,946:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:49:31,947:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:49:31,950:INFO:Preparing preprocessing pipeline...
2024-07-24 16:49:31,950:INFO:Set up simple imputation.
2024-07-24 16:49:31,962:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:49:31,962:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-07-24 16:49:31,962:INFO:Creating final display dataframe.
2024-07-24 16:49:31,985:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape              (150, 5)
2   Transformed data shape              (150, 4)
3          Ignore features                     1
4         Numeric features                     4
5               Preprocess                  True
6          Imputation type                simple
7       Numeric imputation                  mean
8   Categorical imputation                  mode
9                 CPU Jobs                    -1
10                 Use GPU                 False
11          Log Experiment                 False
12         Experiment Name  cluster-default-name
13                     USI                  cf2b
2024-07-24 16:49:31,999:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:49:32,000:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:49:32,000:INFO:setup() successfully completed in 0.15s...............
2024-07-24 16:49:32,078:INFO:gpu_param set to False
2024-07-24 16:49:32,078:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:49:32,079:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:49:32,130:INFO:Initializing create_model()
2024-07-24 16:49:32,130:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2024-07-24 16:49:32,130:INFO:Checking exceptions
2024-07-24 16:49:32,197:INFO:Importing untrained model
2024-07-24 16:49:32,207:INFO:K-Means Clustering Imported successfully
2024-07-24 16:49:32,216:INFO:Fitting Model
2024-07-24 16:49:32,251:INFO:KMeans(n_clusters=4, random_state=123)
2024-07-24 16:49:32,251:INFO:create_models() successfully completed......................................
2024-07-24 16:49:32,257:INFO:Uploading results into container
2024-07-24 16:49:32,259:INFO:Uploading model into container now
2024-07-24 16:49:32,264:INFO:_master_model_container: 1
2024-07-24 16:49:32,264:INFO:_display_container: 2
2024-07-24 16:49:32,264:INFO:KMeans(n_clusters=4, random_state=123)
2024-07-24 16:49:32,264:INFO:create_model() successfully completed......................................
2024-07-24 16:49:32,415:INFO:Initializing assign_model()
2024-07-24 16:49:32,415:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2024-07-24 16:49:32,415:INFO:Checking exceptions
2024-07-24 16:49:32,415:INFO:Determining Trained Model
2024-07-24 16:49:32,415:INFO:Trained Model : K-Means Clustering
2024-07-24 16:49:32,415:INFO:Copying data
2024-07-24 16:49:32,415:INFO:(150, 5)
2024-07-24 16:49:32,415:INFO:assign_model() successfully completed......................................
2024-07-24 16:49:32,698:INFO:Initializing plot_model()
2024-07-24 16:49:32,698:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:49:32,698:INFO:Checking exceptions
2024-07-24 16:49:32,703:INFO:Preloading libraries
2024-07-24 16:49:32,703:INFO:Copying training dataset
2024-07-24 16:49:32,703:INFO:Plot type: cluster
2024-07-24 16:49:32,703:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:49:32,703:INFO:Initializing assign_model()
2024-07-24 16:49:32,703:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=True, verbose=False)
2024-07-24 16:49:32,703:INFO:Checking exceptions
2024-07-24 16:49:32,703:INFO:Determining Trained Model
2024-07-24 16:49:32,703:INFO:Trained Model : K-Means Clustering
2024-07-24 16:49:32,703:INFO:Copying data
2024-07-24 16:49:32,713:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-07-24 16:49:32,713:INFO:(150, 5)
2024-07-24 16:49:32,727:INFO:assign_model() successfully completed......................................
2024-07-24 16:49:32,727:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:49:32,728:INFO:Fitting PCA()
2024-07-24 16:49:32,728:INFO:Sorting dataframe
2024-07-24 16:49:32,728:INFO:Rendering Visual
2024-07-24 16:49:35,262:INFO:Visual Rendered Successfully
2024-07-24 16:49:35,389:INFO:plot_model() successfully completed......................................
2024-07-24 16:49:35,530:INFO:Initializing plot_model()
2024-07-24 16:49:35,530:INFO:plot_model(plot=tsne, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:49:35,530:INFO:Checking exceptions
2024-07-24 16:49:35,530:INFO:Preloading libraries
2024-07-24 16:49:35,530:INFO:Copying training dataset
2024-07-24 16:49:35,530:INFO:Plot type: tsne
2024-07-24 16:49:35,530:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:49:35,530:INFO:Initializing assign_model()
2024-07-24 16:49:35,530:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=False, verbose=False)
2024-07-24 16:49:35,530:INFO:Checking exceptions
2024-07-24 16:49:35,530:INFO:Determining Trained Model
2024-07-24 16:49:35,530:INFO:Trained Model : K-Means Clustering
2024-07-24 16:49:35,530:INFO:Copying data
2024-07-24 16:49:35,560:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-07-24 16:49:35,562:INFO:(150, 5)
2024-07-24 16:49:35,562:INFO:assign_model() successfully completed......................................
2024-07-24 16:49:35,562:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:49:35,563:INFO:Fitting TSNE()
2024-07-24 16:49:36,842:INFO:Sorting dataframe
2024-07-24 16:49:36,842:INFO:Rendering Visual
2024-07-24 16:49:36,978:INFO:Visual Rendered Successfully
2024-07-24 16:49:37,057:INFO:plot_model() successfully completed......................................
2024-07-24 16:49:37,109:INFO:Initializing plot_model()
2024-07-24 16:49:37,109:INFO:plot_model(plot=elbow, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:49:37,110:INFO:Checking exceptions
2024-07-24 16:49:37,114:INFO:Preloading libraries
2024-07-24 16:49:37,115:INFO:Copying training dataset
2024-07-24 16:49:37,116:INFO:Plot type: elbow
2024-07-24 16:49:37,261:INFO:Fitting Model
2024-07-24 16:49:37,741:INFO:Visual Rendered Successfully
2024-07-24 16:49:37,829:INFO:plot_model() successfully completed......................................
2024-07-24 16:49:37,864:INFO:Initializing plot_model()
2024-07-24 16:49:37,864:INFO:plot_model(plot=silhouette, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:49:37,864:INFO:Checking exceptions
2024-07-24 16:49:37,864:INFO:Preloading libraries
2024-07-24 16:49:37,864:INFO:Copying training dataset
2024-07-24 16:49:37,864:INFO:Plot type: silhouette
2024-07-24 16:49:37,891:INFO:Fitting Model
2024-07-24 16:49:37,891:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2024-07-24 16:49:38,102:INFO:Visual Rendered Successfully
2024-07-24 16:49:38,262:INFO:plot_model() successfully completed......................................
2024-07-24 16:49:38,292:INFO:Initializing plot_model()
2024-07-24 16:49:38,292:INFO:plot_model(plot=distance, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:49:38,292:INFO:Checking exceptions
2024-07-24 16:49:38,292:INFO:Preloading libraries
2024-07-24 16:49:38,303:INFO:Copying training dataset
2024-07-24 16:49:38,303:INFO:Plot type: distance
2024-07-24 16:49:38,357:INFO:Fitting Model
2024-07-24 16:49:38,357:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2024-07-24 16:49:38,357:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\manifold\_mds.py:626: UserWarning:

The MDS API has changed. ``fit`` now constructs an dissimilarity matrix from data. To use a custom dissimilarity matrix, set ``dissimilarity='precomputed'``.


2024-07-24 16:49:38,592:INFO:Visual Rendered Successfully
2024-07-24 16:49:38,762:INFO:plot_model() successfully completed......................................
2024-07-24 16:49:38,787:INFO:Initializing plot_model()
2024-07-24 16:49:38,792:INFO:plot_model(plot=distribution, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:49:38,792:INFO:Checking exceptions
2024-07-24 16:49:38,792:INFO:Preloading libraries
2024-07-24 16:49:38,792:INFO:Copying training dataset
2024-07-24 16:49:38,792:INFO:Plot type: distribution
2024-07-24 16:49:38,792:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:49:38,792:INFO:Initializing assign_model()
2024-07-24 16:49:38,792:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2024-07-24 16:49:38,792:INFO:Checking exceptions
2024-07-24 16:49:38,792:INFO:Determining Trained Model
2024-07-24 16:49:38,792:INFO:Trained Model : K-Means Clustering
2024-07-24 16:49:38,792:INFO:Copying data
2024-07-24 16:49:38,792:INFO:(150, 5)
2024-07-24 16:49:38,792:INFO:assign_model() successfully completed......................................
2024-07-24 16:49:38,792:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:49:38,792:INFO:Sorting dataframe
2024-07-24 16:49:38,792:INFO:Rendering Visual
2024-07-24 16:49:39,088:INFO:Visual Rendered Successfully
2024-07-24 16:49:39,174:INFO:plot_model() successfully completed......................................
2024-07-24 16:49:39,237:INFO:Initializing evaluate_model()
2024-07-24 16:49:39,238:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, estimator=KMeans(n_clusters=4, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-07-24 16:49:39,255:INFO:Initializing plot_model()
2024-07-24 16:49:39,255:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:49:39,255:INFO:Checking exceptions
2024-07-24 16:49:39,255:INFO:Preloading libraries
2024-07-24 16:49:39,255:INFO:Copying training dataset
2024-07-24 16:49:39,255:INFO:Plot type: pipeline
2024-07-24 16:49:39,574:INFO:Visual Rendered Successfully
2024-07-24 16:49:39,655:INFO:plot_model() successfully completed......................................
2024-07-24 16:51:51,621:INFO:Initializing plot_model()
2024-07-24 16:51:51,621:INFO:plot_model(plot=cluster, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:51:51,622:INFO:Checking exceptions
2024-07-24 16:51:51,623:INFO:Preloading libraries
2024-07-24 16:51:51,624:INFO:Copying training dataset
2024-07-24 16:51:51,624:INFO:Plot type: cluster
2024-07-24 16:51:51,624:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:51:51,625:INFO:Initializing assign_model()
2024-07-24 16:51:51,625:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=True, verbose=False)
2024-07-24 16:51:51,625:INFO:Checking exceptions
2024-07-24 16:51:51,625:INFO:Determining Trained Model
2024-07-24 16:51:51,625:INFO:Trained Model : K-Means Clustering
2024-07-24 16:51:51,625:INFO:Copying data
2024-07-24 16:51:51,645:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-07-24 16:51:51,648:INFO:(150, 5)
2024-07-24 16:51:51,648:INFO:assign_model() successfully completed......................................
2024-07-24 16:51:51,648:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:51:51,649:INFO:Fitting PCA()
2024-07-24 16:51:51,649:INFO:Sorting dataframe
2024-07-24 16:51:51,649:INFO:Rendering Visual
2024-07-24 16:51:51,698:INFO:Visual Rendered Successfully
2024-07-24 16:51:51,781:INFO:plot_model() successfully completed......................................
2024-07-24 16:51:53,865:INFO:Initializing plot_model()
2024-07-24 16:51:53,865:INFO:plot_model(plot=tsne, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:51:53,865:INFO:Checking exceptions
2024-07-24 16:51:53,867:INFO:Preloading libraries
2024-07-24 16:51:53,867:INFO:Copying training dataset
2024-07-24 16:51:53,867:INFO:Plot type: tsne
2024-07-24 16:51:53,868:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:51:53,869:INFO:Initializing assign_model()
2024-07-24 16:51:53,870:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=False, verbose=False)
2024-07-24 16:51:53,870:INFO:Checking exceptions
2024-07-24 16:51:53,870:INFO:Determining Trained Model
2024-07-24 16:51:53,871:INFO:Trained Model : K-Means Clustering
2024-07-24 16:51:53,871:INFO:Copying data
2024-07-24 16:51:53,898:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-07-24 16:51:53,899:INFO:(150, 5)
2024-07-24 16:51:53,899:INFO:assign_model() successfully completed......................................
2024-07-24 16:51:53,899:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:51:53,900:INFO:Fitting TSNE()
2024-07-24 16:51:54,978:INFO:Sorting dataframe
2024-07-24 16:51:54,978:INFO:Rendering Visual
2024-07-24 16:51:55,028:INFO:Visual Rendered Successfully
2024-07-24 16:51:55,113:INFO:plot_model() successfully completed......................................
2024-07-24 16:51:56,800:INFO:Initializing plot_model()
2024-07-24 16:51:56,800:INFO:plot_model(plot=cluster, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:51:56,801:INFO:Checking exceptions
2024-07-24 16:51:56,803:INFO:Preloading libraries
2024-07-24 16:51:56,804:INFO:Copying training dataset
2024-07-24 16:51:56,804:INFO:Plot type: cluster
2024-07-24 16:51:56,805:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:51:56,806:INFO:Initializing assign_model()
2024-07-24 16:51:56,806:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=True, verbose=False)
2024-07-24 16:51:56,806:INFO:Checking exceptions
2024-07-24 16:51:56,807:INFO:Determining Trained Model
2024-07-24 16:51:56,807:INFO:Trained Model : K-Means Clustering
2024-07-24 16:51:56,807:INFO:Copying data
2024-07-24 16:51:56,828:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-07-24 16:51:56,828:INFO:(150, 5)
2024-07-24 16:51:56,828:INFO:assign_model() successfully completed......................................
2024-07-24 16:51:56,828:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:51:56,828:INFO:Fitting PCA()
2024-07-24 16:51:56,828:INFO:Sorting dataframe
2024-07-24 16:51:56,828:INFO:Rendering Visual
2024-07-24 16:51:56,876:INFO:Visual Rendered Successfully
2024-07-24 16:51:56,963:INFO:plot_model() successfully completed......................................
2024-07-24 16:51:57,567:INFO:Initializing plot_model()
2024-07-24 16:51:57,567:INFO:plot_model(plot=tsne, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:51:57,567:INFO:Checking exceptions
2024-07-24 16:51:57,569:INFO:Preloading libraries
2024-07-24 16:51:57,570:INFO:Copying training dataset
2024-07-24 16:51:57,570:INFO:Plot type: tsne
2024-07-24 16:51:57,571:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:51:57,572:INFO:Initializing assign_model()
2024-07-24 16:51:57,572:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=False, verbose=False)
2024-07-24 16:51:57,573:INFO:Checking exceptions
2024-07-24 16:51:57,573:INFO:Determining Trained Model
2024-07-24 16:51:57,574:INFO:Trained Model : K-Means Clustering
2024-07-24 16:51:57,574:INFO:Copying data
2024-07-24 16:51:57,600:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-07-24 16:51:57,600:INFO:(150, 5)
2024-07-24 16:51:57,602:INFO:assign_model() successfully completed......................................
2024-07-24 16:51:57,602:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:51:57,602:INFO:Fitting TSNE()
2024-07-24 16:51:58,707:INFO:Sorting dataframe
2024-07-24 16:51:58,707:INFO:Rendering Visual
2024-07-24 16:51:58,775:INFO:Visual Rendered Successfully
2024-07-24 16:51:58,857:INFO:plot_model() successfully completed......................................
2024-07-24 16:51:59,456:INFO:Initializing plot_model()
2024-07-24 16:51:59,458:INFO:plot_model(plot=cluster, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:51:59,458:INFO:Checking exceptions
2024-07-24 16:51:59,458:INFO:Preloading libraries
2024-07-24 16:51:59,458:INFO:Copying training dataset
2024-07-24 16:51:59,458:INFO:Plot type: cluster
2024-07-24 16:51:59,458:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:51:59,458:INFO:Initializing assign_model()
2024-07-24 16:51:59,458:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=True, verbose=False)
2024-07-24 16:51:59,458:INFO:Checking exceptions
2024-07-24 16:51:59,458:INFO:Determining Trained Model
2024-07-24 16:51:59,458:INFO:Trained Model : K-Means Clustering
2024-07-24 16:51:59,458:INFO:Copying data
2024-07-24 16:51:59,473:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-07-24 16:51:59,473:INFO:(150, 5)
2024-07-24 16:51:59,473:INFO:assign_model() successfully completed......................................
2024-07-24 16:51:59,473:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:51:59,473:INFO:Fitting PCA()
2024-07-24 16:51:59,473:INFO:Sorting dataframe
2024-07-24 16:51:59,473:INFO:Rendering Visual
2024-07-24 16:51:59,643:INFO:Visual Rendered Successfully
2024-07-24 16:51:59,723:INFO:plot_model() successfully completed......................................
2024-07-24 16:51:59,977:INFO:Initializing plot_model()
2024-07-24 16:51:59,977:INFO:plot_model(plot=tsne, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:51:59,977:INFO:Checking exceptions
2024-07-24 16:51:59,979:INFO:Preloading libraries
2024-07-24 16:51:59,980:INFO:Copying training dataset
2024-07-24 16:51:59,980:INFO:Plot type: tsne
2024-07-24 16:51:59,980:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:51:59,981:INFO:Initializing assign_model()
2024-07-24 16:51:59,982:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=False, verbose=False)
2024-07-24 16:51:59,982:INFO:Checking exceptions
2024-07-24 16:51:59,982:INFO:Determining Trained Model
2024-07-24 16:51:59,982:INFO:Trained Model : K-Means Clustering
2024-07-24 16:51:59,982:INFO:Copying data
2024-07-24 16:52:00,006:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2024-07-24 16:52:00,006:INFO:(150, 5)
2024-07-24 16:52:00,006:INFO:assign_model() successfully completed......................................
2024-07-24 16:52:00,006:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:52:00,006:INFO:Fitting TSNE()
2024-07-24 16:52:01,304:INFO:Sorting dataframe
2024-07-24 16:52:01,304:INFO:Rendering Visual
2024-07-24 16:52:01,383:INFO:Visual Rendered Successfully
2024-07-24 16:52:01,458:INFO:plot_model() successfully completed......................................
2024-07-24 16:52:02,090:INFO:Initializing plot_model()
2024-07-24 16:52:02,090:INFO:plot_model(plot=elbow, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:52:02,090:INFO:Checking exceptions
2024-07-24 16:52:02,092:INFO:Preloading libraries
2024-07-24 16:52:02,092:INFO:Copying training dataset
2024-07-24 16:52:02,093:INFO:Plot type: elbow
2024-07-24 16:52:02,118:INFO:Fitting Model
2024-07-24 16:52:02,664:INFO:Visual Rendered Successfully
2024-07-24 16:52:02,738:INFO:plot_model() successfully completed......................................
2024-07-24 16:52:03,945:INFO:Initializing plot_model()
2024-07-24 16:52:03,945:INFO:plot_model(plot=silhouette, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:52:03,945:INFO:Checking exceptions
2024-07-24 16:52:03,947:INFO:Preloading libraries
2024-07-24 16:52:03,948:INFO:Copying training dataset
2024-07-24 16:52:03,948:INFO:Plot type: silhouette
2024-07-24 16:52:03,973:INFO:Fitting Model
2024-07-24 16:52:03,973:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2024-07-24 16:52:04,136:INFO:Visual Rendered Successfully
2024-07-24 16:52:04,219:INFO:plot_model() successfully completed......................................
2024-07-24 16:52:05,328:INFO:Initializing plot_model()
2024-07-24 16:52:05,328:INFO:plot_model(plot=distance, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:52:05,328:INFO:Checking exceptions
2024-07-24 16:52:05,330:INFO:Preloading libraries
2024-07-24 16:52:05,331:INFO:Copying training dataset
2024-07-24 16:52:05,332:INFO:Plot type: distance
2024-07-24 16:52:05,392:INFO:Fitting Model
2024-07-24 16:52:05,392:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2024-07-24 16:52:05,393:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\manifold\_mds.py:626: UserWarning:

The MDS API has changed. ``fit`` now constructs an dissimilarity matrix from data. To use a custom dissimilarity matrix, set ``dissimilarity='precomputed'``.


2024-07-24 16:52:05,634:INFO:Visual Rendered Successfully
2024-07-24 16:52:05,743:INFO:plot_model() successfully completed......................................
2024-07-24 16:52:08,625:INFO:Initializing plot_model()
2024-07-24 16:52:08,625:INFO:plot_model(plot=distribution, fold=None, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, system=True)
2024-07-24 16:52:08,625:INFO:Checking exceptions
2024-07-24 16:52:08,627:INFO:Preloading libraries
2024-07-24 16:52:08,627:INFO:Copying training dataset
2024-07-24 16:52:08,627:INFO:Plot type: distribution
2024-07-24 16:52:08,628:INFO:SubProcess assign_model() called ==================================
2024-07-24 16:52:08,629:INFO:Initializing assign_model()
2024-07-24 16:52:08,629:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000201B2C2EBE0>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2024-07-24 16:52:08,630:INFO:Checking exceptions
2024-07-24 16:52:08,630:INFO:Determining Trained Model
2024-07-24 16:52:08,630:INFO:Trained Model : K-Means Clustering
2024-07-24 16:52:08,630:INFO:Copying data
2024-07-24 16:52:08,633:INFO:(150, 5)
2024-07-24 16:52:08,633:INFO:assign_model() successfully completed......................................
2024-07-24 16:52:08,633:INFO:SubProcess assign_model() end ==================================
2024-07-24 16:52:08,634:INFO:Sorting dataframe
2024-07-24 16:52:08,637:INFO:Rendering Visual
2024-07-24 16:52:08,770:INFO:Visual Rendered Successfully
2024-07-24 16:52:08,847:INFO:plot_model() successfully completed......................................
2024-07-24 16:53:05,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:53:05,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:53:05,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:53:05,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 16:53:06,611:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:06,611:INFO:Logging name: clf-default-name
2024-07-24 16:53:06,611:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:06,611:INFO:version 3.3.2
2024-07-24 16:53:06,611:INFO:Initializing setup()
2024-07-24 16:53:06,611:INFO:self.USI: 1a5a
2024-07-24 16:53:06,611:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:06,611:INFO:Checking environment
2024-07-24 16:53:06,611:INFO:python_version: 3.9.19
2024-07-24 16:53:06,611:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:06,611:INFO:machine: AMD64
2024-07-24 16:53:06,611:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:06,611:INFO:Memory: svmem(total=8387862528, available=520105984, percent=93.8, used=7867756544, free=520105984)
2024-07-24 16:53:06,611:INFO:Physical Core: 2
2024-07-24 16:53:06,611:INFO:Logical Core: 4
2024-07-24 16:53:06,612:INFO:Checking libraries
2024-07-24 16:53:06,612:INFO:System:
2024-07-24 16:53:06,612:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:06,612:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:06,612:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:06,612:INFO:PyCaret required dependencies:
2024-07-24 16:53:06,638:INFO:                 pip: 24.0
2024-07-24 16:53:06,638:INFO:          setuptools: 69.5.1
2024-07-24 16:53:06,638:INFO:             pycaret: 3.3.2
2024-07-24 16:53:06,638:INFO:             IPython: 8.18.1
2024-07-24 16:53:06,638:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:06,638:INFO:                tqdm: 4.66.4
2024-07-24 16:53:06,638:INFO:               numpy: 1.26.4
2024-07-24 16:53:06,638:INFO:              pandas: 2.1.4
2024-07-24 16:53:06,638:INFO:              jinja2: 3.1.4
2024-07-24 16:53:06,638:INFO:               scipy: 1.11.4
2024-07-24 16:53:06,638:INFO:              joblib: 1.3.2
2024-07-24 16:53:06,638:INFO:             sklearn: 1.4.2
2024-07-24 16:53:06,638:INFO:                pyod: 2.0.1
2024-07-24 16:53:06,638:INFO:            imblearn: 0.12.3
2024-07-24 16:53:06,638:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:06,638:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:06,638:INFO:               numba: 0.60.0
2024-07-24 16:53:06,638:INFO:            requests: 2.32.3
2024-07-24 16:53:06,638:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:06,638:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:06,638:INFO:         yellowbrick: 1.5
2024-07-24 16:53:06,638:INFO:              plotly: 5.23.0
2024-07-24 16:53:06,638:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:06,638:INFO:             kaleido: 0.2.1
2024-07-24 16:53:06,638:INFO:           schemdraw: 0.15
2024-07-24 16:53:06,638:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:06,638:INFO:              sktime: 0.26.0
2024-07-24 16:53:06,638:INFO:               tbats: 1.1.3
2024-07-24 16:53:06,638:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:06,638:INFO:              psutil: 6.0.0
2024-07-24 16:53:06,638:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:06,638:INFO:             pickle5: Not installed
2024-07-24 16:53:06,638:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:06,638:INFO:         deprecation: 2.1.0
2024-07-24 16:53:06,638:INFO:              xxhash: 3.4.1
2024-07-24 16:53:06,638:INFO:           wurlitzer: Not installed
2024-07-24 16:53:06,638:INFO:PyCaret optional dependencies:
2024-07-24 16:53:06,657:INFO:                shap: Not installed
2024-07-24 16:53:06,657:INFO:           interpret: Not installed
2024-07-24 16:53:06,657:INFO:                umap: Not installed
2024-07-24 16:53:06,657:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:06,657:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:06,657:INFO:             autoviz: Not installed
2024-07-24 16:53:06,657:INFO:           fairlearn: Not installed
2024-07-24 16:53:06,657:INFO:          deepchecks: Not installed
2024-07-24 16:53:06,658:INFO:             xgboost: Not installed
2024-07-24 16:53:06,658:INFO:            catboost: Not installed
2024-07-24 16:53:06,658:INFO:              kmodes: Not installed
2024-07-24 16:53:06,658:INFO:             mlxtend: Not installed
2024-07-24 16:53:06,658:INFO:       statsforecast: Not installed
2024-07-24 16:53:06,658:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:06,658:INFO:                 ray: Not installed
2024-07-24 16:53:06,658:INFO:            hyperopt: Not installed
2024-07-24 16:53:06,658:INFO:              optuna: Not installed
2024-07-24 16:53:06,658:INFO:               skopt: Not installed
2024-07-24 16:53:06,658:INFO:              mlflow: Not installed
2024-07-24 16:53:06,658:INFO:              gradio: Not installed
2024-07-24 16:53:06,658:INFO:             fastapi: Not installed
2024-07-24 16:53:06,658:INFO:             uvicorn: Not installed
2024-07-24 16:53:06,658:INFO:              m2cgen: Not installed
2024-07-24 16:53:06,658:INFO:           evidently: Not installed
2024-07-24 16:53:06,658:INFO:               fugue: Not installed
2024-07-24 16:53:06,658:INFO:           streamlit: Not installed
2024-07-24 16:53:06,658:INFO:             prophet: Not installed
2024-07-24 16:53:06,658:INFO:None
2024-07-24 16:53:06,658:INFO:Set up data.
2024-07-24 16:53:06,658:INFO:Set up folding strategy.
2024-07-24 16:53:06,658:INFO:Set up train/test split.
2024-07-24 16:53:06,671:INFO:Set up index.
2024-07-24 16:53:06,671:INFO:Assigning column types.
2024-07-24 16:53:06,688:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:06,725:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:06,738:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:06,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:06,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:06,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:06,918:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:06,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:06,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:06,976:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:07,053:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:07,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:07,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:07,195:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:07,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:07,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:07,256:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:07,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:07,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:07,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:07,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:07,545:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:07,545:INFO:Set up simple imputation.
2024-07-24 16:53:07,562:INFO:Set up encoding of categorical features.
2024-07-24 16:53:07,645:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:07,646:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['department', 'salary'],
                                    transformer=OneHotEncoder(cols=['department',
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-07-24 16:53:07,646:INFO:Creating final display dataframe.
2024-07-24 16:53:08,088:INFO:Setup _display_container:                     Description             Value
0                    Session id              7240
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (14999, 21)
5   Transformed train set shape       (10499, 21)
6    Transformed test set shape        (4500, 21)
7              Numeric features                 7
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              1a5a
2024-07-24 16:53:08,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:08,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:08,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:08,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:08,426:INFO:setup() successfully completed in 1.82s...............
2024-07-24 16:53:09,427:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:09,427:INFO:Logging name: clf-default-name
2024-07-24 16:53:09,427:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:09,427:INFO:version 3.3.2
2024-07-24 16:53:09,428:INFO:Initializing setup()
2024-07-24 16:53:09,428:INFO:self.USI: bd78
2024-07-24 16:53:09,428:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:09,428:INFO:Checking environment
2024-07-24 16:53:09,428:INFO:python_version: 3.9.19
2024-07-24 16:53:09,428:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:09,428:INFO:machine: AMD64
2024-07-24 16:53:09,428:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:09,428:INFO:Memory: svmem(total=8387862528, available=574840832, percent=93.1, used=7813021696, free=574840832)
2024-07-24 16:53:09,428:INFO:Physical Core: 2
2024-07-24 16:53:09,428:INFO:Logical Core: 4
2024-07-24 16:53:09,428:INFO:Checking libraries
2024-07-24 16:53:09,429:INFO:System:
2024-07-24 16:53:09,429:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:09,429:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:09,429:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:09,429:INFO:PyCaret required dependencies:
2024-07-24 16:53:09,429:INFO:                 pip: 24.0
2024-07-24 16:53:09,429:INFO:          setuptools: 69.5.1
2024-07-24 16:53:09,429:INFO:             pycaret: 3.3.2
2024-07-24 16:53:09,429:INFO:             IPython: 8.18.1
2024-07-24 16:53:09,429:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:09,429:INFO:                tqdm: 4.66.4
2024-07-24 16:53:09,429:INFO:               numpy: 1.26.4
2024-07-24 16:53:09,430:INFO:              pandas: 2.1.4
2024-07-24 16:53:09,430:INFO:              jinja2: 3.1.4
2024-07-24 16:53:09,430:INFO:               scipy: 1.11.4
2024-07-24 16:53:09,430:INFO:              joblib: 1.3.2
2024-07-24 16:53:09,430:INFO:             sklearn: 1.4.2
2024-07-24 16:53:09,430:INFO:                pyod: 2.0.1
2024-07-24 16:53:09,430:INFO:            imblearn: 0.12.3
2024-07-24 16:53:09,430:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:09,430:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:09,430:INFO:               numba: 0.60.0
2024-07-24 16:53:09,430:INFO:            requests: 2.32.3
2024-07-24 16:53:09,430:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:09,430:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:09,431:INFO:         yellowbrick: 1.5
2024-07-24 16:53:09,431:INFO:              plotly: 5.23.0
2024-07-24 16:53:09,431:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:09,431:INFO:             kaleido: 0.2.1
2024-07-24 16:53:09,431:INFO:           schemdraw: 0.15
2024-07-24 16:53:09,431:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:09,431:INFO:              sktime: 0.26.0
2024-07-24 16:53:09,431:INFO:               tbats: 1.1.3
2024-07-24 16:53:09,431:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:09,431:INFO:              psutil: 6.0.0
2024-07-24 16:53:09,431:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:09,431:INFO:             pickle5: Not installed
2024-07-24 16:53:09,431:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:09,431:INFO:         deprecation: 2.1.0
2024-07-24 16:53:09,431:INFO:              xxhash: 3.4.1
2024-07-24 16:53:09,431:INFO:           wurlitzer: Not installed
2024-07-24 16:53:09,432:INFO:PyCaret optional dependencies:
2024-07-24 16:53:09,432:INFO:                shap: Not installed
2024-07-24 16:53:09,432:INFO:           interpret: Not installed
2024-07-24 16:53:09,432:INFO:                umap: Not installed
2024-07-24 16:53:09,432:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:09,432:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:09,433:INFO:             autoviz: Not installed
2024-07-24 16:53:09,433:INFO:           fairlearn: Not installed
2024-07-24 16:53:09,438:INFO:          deepchecks: Not installed
2024-07-24 16:53:09,438:INFO:             xgboost: Not installed
2024-07-24 16:53:09,438:INFO:            catboost: Not installed
2024-07-24 16:53:09,438:INFO:              kmodes: Not installed
2024-07-24 16:53:09,439:INFO:             mlxtend: Not installed
2024-07-24 16:53:09,439:INFO:       statsforecast: Not installed
2024-07-24 16:53:09,439:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:09,439:INFO:                 ray: Not installed
2024-07-24 16:53:09,440:INFO:            hyperopt: Not installed
2024-07-24 16:53:09,441:INFO:              optuna: Not installed
2024-07-24 16:53:09,441:INFO:               skopt: Not installed
2024-07-24 16:53:09,442:INFO:              mlflow: Not installed
2024-07-24 16:53:09,442:INFO:              gradio: Not installed
2024-07-24 16:53:09,442:INFO:             fastapi: Not installed
2024-07-24 16:53:09,443:INFO:             uvicorn: Not installed
2024-07-24 16:53:09,443:INFO:              m2cgen: Not installed
2024-07-24 16:53:09,443:INFO:           evidently: Not installed
2024-07-24 16:53:09,443:INFO:               fugue: Not installed
2024-07-24 16:53:09,443:INFO:           streamlit: Not installed
2024-07-24 16:53:09,443:INFO:             prophet: Not installed
2024-07-24 16:53:09,443:INFO:None
2024-07-24 16:53:09,444:INFO:Set up data.
2024-07-24 16:53:09,462:INFO:Set up folding strategy.
2024-07-24 16:53:09,462:INFO:Set up train/test split.
2024-07-24 16:53:09,490:INFO:Set up index.
2024-07-24 16:53:09,491:INFO:Assigning column types.
2024-07-24 16:53:09,509:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:09,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:09,655:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:09,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:09,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:09,884:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:09,886:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:09,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:09,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:09,990:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:10,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:10,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:10,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:10,447:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:10,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:10,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:10,496:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:10,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:10,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:10,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:10,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:10,652:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:10,653:INFO:Set up simple imputation.
2024-07-24 16:53:10,658:INFO:Set up encoding of ordinal features.
2024-07-24 16:53:10,659:INFO:Set up encoding of categorical features.
2024-07-24 16:53:10,738:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:10,758:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': low       0
medium    1
high      2
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['department'],
                                    transformer=OneHotEncoder(cols=['department'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-07-24 16:53:10,758:INFO:Creating final display dataframe.
2024-07-24 16:53:11,014:INFO:Setup _display_container:                     Description             Value
0                    Session id               758
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (14999, 19)
5   Transformed train set shape       (10499, 19)
6    Transformed test set shape        (4500, 19)
7              Ordinal features                 1
8              Numeric features                 7
9          Categorical features                 1
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              bd78
2024-07-24 16:53:11,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,182:INFO:setup() successfully completed in 1.77s...............
2024-07-24 16:53:11,469:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:11,469:INFO:Logging name: clf-default-name
2024-07-24 16:53:11,470:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:11,470:INFO:version 3.3.2
2024-07-24 16:53:11,470:INFO:Initializing setup()
2024-07-24 16:53:11,470:INFO:self.USI: c11e
2024-07-24 16:53:11,470:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:11,470:INFO:Checking environment
2024-07-24 16:53:11,470:INFO:python_version: 3.9.19
2024-07-24 16:53:11,470:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:11,470:INFO:machine: AMD64
2024-07-24 16:53:11,470:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:11,470:INFO:Memory: svmem(total=8387862528, available=552259584, percent=93.4, used=7835602944, free=552259584)
2024-07-24 16:53:11,470:INFO:Physical Core: 2
2024-07-24 16:53:11,471:INFO:Logical Core: 4
2024-07-24 16:53:11,471:INFO:Checking libraries
2024-07-24 16:53:11,471:INFO:System:
2024-07-24 16:53:11,471:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:11,471:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:11,471:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:11,471:INFO:PyCaret required dependencies:
2024-07-24 16:53:11,471:INFO:                 pip: 24.0
2024-07-24 16:53:11,471:INFO:          setuptools: 69.5.1
2024-07-24 16:53:11,471:INFO:             pycaret: 3.3.2
2024-07-24 16:53:11,471:INFO:             IPython: 8.18.1
2024-07-24 16:53:11,471:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:11,472:INFO:                tqdm: 4.66.4
2024-07-24 16:53:11,472:INFO:               numpy: 1.26.4
2024-07-24 16:53:11,472:INFO:              pandas: 2.1.4
2024-07-24 16:53:11,472:INFO:              jinja2: 3.1.4
2024-07-24 16:53:11,472:INFO:               scipy: 1.11.4
2024-07-24 16:53:11,472:INFO:              joblib: 1.3.2
2024-07-24 16:53:11,472:INFO:             sklearn: 1.4.2
2024-07-24 16:53:11,472:INFO:                pyod: 2.0.1
2024-07-24 16:53:11,472:INFO:            imblearn: 0.12.3
2024-07-24 16:53:11,473:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:11,473:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:11,473:INFO:               numba: 0.60.0
2024-07-24 16:53:11,473:INFO:            requests: 2.32.3
2024-07-24 16:53:11,473:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:11,473:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:11,473:INFO:         yellowbrick: 1.5
2024-07-24 16:53:11,473:INFO:              plotly: 5.23.0
2024-07-24 16:53:11,473:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:11,474:INFO:             kaleido: 0.2.1
2024-07-24 16:53:11,474:INFO:           schemdraw: 0.15
2024-07-24 16:53:11,474:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:11,474:INFO:              sktime: 0.26.0
2024-07-24 16:53:11,474:INFO:               tbats: 1.1.3
2024-07-24 16:53:11,474:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:11,474:INFO:              psutil: 6.0.0
2024-07-24 16:53:11,474:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:11,474:INFO:             pickle5: Not installed
2024-07-24 16:53:11,474:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:11,474:INFO:         deprecation: 2.1.0
2024-07-24 16:53:11,474:INFO:              xxhash: 3.4.1
2024-07-24 16:53:11,474:INFO:           wurlitzer: Not installed
2024-07-24 16:53:11,475:INFO:PyCaret optional dependencies:
2024-07-24 16:53:11,475:INFO:                shap: Not installed
2024-07-24 16:53:11,475:INFO:           interpret: Not installed
2024-07-24 16:53:11,475:INFO:                umap: Not installed
2024-07-24 16:53:11,475:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:11,475:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:11,475:INFO:             autoviz: Not installed
2024-07-24 16:53:11,475:INFO:           fairlearn: Not installed
2024-07-24 16:53:11,475:INFO:          deepchecks: Not installed
2024-07-24 16:53:11,475:INFO:             xgboost: Not installed
2024-07-24 16:53:11,475:INFO:            catboost: Not installed
2024-07-24 16:53:11,475:INFO:              kmodes: Not installed
2024-07-24 16:53:11,475:INFO:             mlxtend: Not installed
2024-07-24 16:53:11,475:INFO:       statsforecast: Not installed
2024-07-24 16:53:11,476:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:11,476:INFO:                 ray: Not installed
2024-07-24 16:53:11,476:INFO:            hyperopt: Not installed
2024-07-24 16:53:11,476:INFO:              optuna: Not installed
2024-07-24 16:53:11,476:INFO:               skopt: Not installed
2024-07-24 16:53:11,476:INFO:              mlflow: Not installed
2024-07-24 16:53:11,476:INFO:              gradio: Not installed
2024-07-24 16:53:11,476:INFO:             fastapi: Not installed
2024-07-24 16:53:11,476:INFO:             uvicorn: Not installed
2024-07-24 16:53:11,476:INFO:              m2cgen: Not installed
2024-07-24 16:53:11,476:INFO:           evidently: Not installed
2024-07-24 16:53:11,476:INFO:               fugue: Not installed
2024-07-24 16:53:11,476:INFO:           streamlit: Not installed
2024-07-24 16:53:11,476:INFO:             prophet: Not installed
2024-07-24 16:53:11,477:INFO:None
2024-07-24 16:53:11,477:INFO:Set up data.
2024-07-24 16:53:11,484:INFO:Set up folding strategy.
2024-07-24 16:53:11,484:INFO:Set up train/test split.
2024-07-24 16:53:11,536:INFO:Set up index.
2024-07-24 16:53:11,536:INFO:Assigning column types.
2024-07-24 16:53:11,583:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:11,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:11,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:11,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:11,756:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:11,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,786:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:11,868:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:11,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:11,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:11,987:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:12,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:12,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:12,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:12,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:12,152:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:12,156:INFO:Set up simple imputation.
2024-07-24 16:53:12,156:INFO:Set up encoding of categorical features.
2024-07-24 16:53:12,269:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:12,283:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['department'],
                                    transformer=TargetEncoder(cols=['department'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-07-24 16:53:12,283:INFO:Creating final display dataframe.
2024-07-24 16:53:12,570:INFO:Setup _display_container:                     Description             Value
0                    Session id              3108
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (14999, 12)
5   Transformed train set shape       (10499, 12)
6    Transformed test set shape        (4500, 12)
7              Numeric features                 7
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                 3
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              c11e
2024-07-24 16:53:12,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:12,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:12,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:12,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:12,748:INFO:setup() successfully completed in 1.29s...............
2024-07-24 16:53:13,396:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:13,396:INFO:Logging name: clf-default-name
2024-07-24 16:53:13,396:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:13,396:INFO:version 3.3.2
2024-07-24 16:53:13,396:INFO:Initializing setup()
2024-07-24 16:53:13,396:INFO:self.USI: 2031
2024-07-24 16:53:13,396:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:13,396:INFO:Checking environment
2024-07-24 16:53:13,396:INFO:python_version: 3.9.19
2024-07-24 16:53:13,396:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:13,396:INFO:machine: AMD64
2024-07-24 16:53:13,396:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:13,396:INFO:Memory: svmem(total=8387862528, available=510685184, percent=93.9, used=7877177344, free=510685184)
2024-07-24 16:53:13,396:INFO:Physical Core: 2
2024-07-24 16:53:13,396:INFO:Logical Core: 4
2024-07-24 16:53:13,396:INFO:Checking libraries
2024-07-24 16:53:13,396:INFO:System:
2024-07-24 16:53:13,396:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:13,396:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:13,396:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:13,396:INFO:PyCaret required dependencies:
2024-07-24 16:53:13,396:INFO:                 pip: 24.0
2024-07-24 16:53:13,396:INFO:          setuptools: 69.5.1
2024-07-24 16:53:13,396:INFO:             pycaret: 3.3.2
2024-07-24 16:53:13,396:INFO:             IPython: 8.18.1
2024-07-24 16:53:13,396:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:13,396:INFO:                tqdm: 4.66.4
2024-07-24 16:53:13,396:INFO:               numpy: 1.26.4
2024-07-24 16:53:13,396:INFO:              pandas: 2.1.4
2024-07-24 16:53:13,396:INFO:              jinja2: 3.1.4
2024-07-24 16:53:13,396:INFO:               scipy: 1.11.4
2024-07-24 16:53:13,396:INFO:              joblib: 1.3.2
2024-07-24 16:53:13,396:INFO:             sklearn: 1.4.2
2024-07-24 16:53:13,396:INFO:                pyod: 2.0.1
2024-07-24 16:53:13,396:INFO:            imblearn: 0.12.3
2024-07-24 16:53:13,396:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:13,396:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:13,396:INFO:               numba: 0.60.0
2024-07-24 16:53:13,396:INFO:            requests: 2.32.3
2024-07-24 16:53:13,396:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:13,396:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:13,396:INFO:         yellowbrick: 1.5
2024-07-24 16:53:13,396:INFO:              plotly: 5.23.0
2024-07-24 16:53:13,396:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:13,396:INFO:             kaleido: 0.2.1
2024-07-24 16:53:13,396:INFO:           schemdraw: 0.15
2024-07-24 16:53:13,396:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:13,396:INFO:              sktime: 0.26.0
2024-07-24 16:53:13,396:INFO:               tbats: 1.1.3
2024-07-24 16:53:13,396:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:13,396:INFO:              psutil: 6.0.0
2024-07-24 16:53:13,396:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:13,396:INFO:             pickle5: Not installed
2024-07-24 16:53:13,396:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:13,396:INFO:         deprecation: 2.1.0
2024-07-24 16:53:13,396:INFO:              xxhash: 3.4.1
2024-07-24 16:53:13,396:INFO:           wurlitzer: Not installed
2024-07-24 16:53:13,396:INFO:PyCaret optional dependencies:
2024-07-24 16:53:13,396:INFO:                shap: Not installed
2024-07-24 16:53:13,396:INFO:           interpret: Not installed
2024-07-24 16:53:13,396:INFO:                umap: Not installed
2024-07-24 16:53:13,396:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:13,396:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:13,396:INFO:             autoviz: Not installed
2024-07-24 16:53:13,396:INFO:           fairlearn: Not installed
2024-07-24 16:53:13,396:INFO:          deepchecks: Not installed
2024-07-24 16:53:13,396:INFO:             xgboost: Not installed
2024-07-24 16:53:13,396:INFO:            catboost: Not installed
2024-07-24 16:53:13,396:INFO:              kmodes: Not installed
2024-07-24 16:53:13,396:INFO:             mlxtend: Not installed
2024-07-24 16:53:13,396:INFO:       statsforecast: Not installed
2024-07-24 16:53:13,396:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:13,396:INFO:                 ray: Not installed
2024-07-24 16:53:13,396:INFO:            hyperopt: Not installed
2024-07-24 16:53:13,396:INFO:              optuna: Not installed
2024-07-24 16:53:13,396:INFO:               skopt: Not installed
2024-07-24 16:53:13,396:INFO:              mlflow: Not installed
2024-07-24 16:53:13,396:INFO:              gradio: Not installed
2024-07-24 16:53:13,396:INFO:             fastapi: Not installed
2024-07-24 16:53:13,396:INFO:             uvicorn: Not installed
2024-07-24 16:53:13,396:INFO:              m2cgen: Not installed
2024-07-24 16:53:13,396:INFO:           evidently: Not installed
2024-07-24 16:53:13,396:INFO:               fugue: Not installed
2024-07-24 16:53:13,396:INFO:           streamlit: Not installed
2024-07-24 16:53:13,396:INFO:             prophet: Not installed
2024-07-24 16:53:13,396:INFO:None
2024-07-24 16:53:13,396:INFO:Set up data.
2024-07-24 16:53:13,413:INFO:Set up folding strategy.
2024-07-24 16:53:13,413:INFO:Set up train/test split.
2024-07-24 16:53:13,429:INFO:Set up index.
2024-07-24 16:53:13,429:INFO:Assigning column types.
2024-07-24 16:53:13,434:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:13,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:13,496:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:13,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,579:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:13,579:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:13,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,612:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:13,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:13,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:13,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,814:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:13,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:13,981:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:13,981:INFO:Set up simple imputation.
2024-07-24 16:53:13,981:INFO:Set up encoding of categorical features.
2024-07-24 16:53:14,030:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:14,047:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['time_spend_company'],
                                    transformer=OneHotEncoder(cols=['time_spend_company'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-07-24 16:53:14,047:INFO:Creating final display dataframe.
2024-07-24 16:53:14,312:INFO:Setup _display_container:                     Description             Value
0                    Session id              5678
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (14999, 17)
5   Transformed train set shape       (10499, 17)
6    Transformed test set shape        (4500, 17)
7              Numeric features                 6
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              2031
2024-07-24 16:53:14,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:14,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:14,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:14,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:14,479:INFO:setup() successfully completed in 1.08s...............
2024-07-24 16:53:14,924:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:14,924:INFO:Logging name: clf-default-name
2024-07-24 16:53:14,924:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:14,924:INFO:version 3.3.2
2024-07-24 16:53:14,925:INFO:Initializing setup()
2024-07-24 16:53:14,925:INFO:self.USI: e33a
2024-07-24 16:53:14,925:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:14,925:INFO:Checking environment
2024-07-24 16:53:14,925:INFO:python_version: 3.9.19
2024-07-24 16:53:14,925:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:14,925:INFO:machine: AMD64
2024-07-24 16:53:14,925:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:14,925:INFO:Memory: svmem(total=8387862528, available=594161664, percent=92.9, used=7793700864, free=594161664)
2024-07-24 16:53:14,925:INFO:Physical Core: 2
2024-07-24 16:53:14,925:INFO:Logical Core: 4
2024-07-24 16:53:14,925:INFO:Checking libraries
2024-07-24 16:53:14,926:INFO:System:
2024-07-24 16:53:14,926:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:14,926:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:14,926:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:14,926:INFO:PyCaret required dependencies:
2024-07-24 16:53:14,926:INFO:                 pip: 24.0
2024-07-24 16:53:14,926:INFO:          setuptools: 69.5.1
2024-07-24 16:53:14,927:INFO:             pycaret: 3.3.2
2024-07-24 16:53:14,927:INFO:             IPython: 8.18.1
2024-07-24 16:53:14,927:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:14,927:INFO:                tqdm: 4.66.4
2024-07-24 16:53:14,927:INFO:               numpy: 1.26.4
2024-07-24 16:53:14,927:INFO:              pandas: 2.1.4
2024-07-24 16:53:14,927:INFO:              jinja2: 3.1.4
2024-07-24 16:53:14,927:INFO:               scipy: 1.11.4
2024-07-24 16:53:14,927:INFO:              joblib: 1.3.2
2024-07-24 16:53:14,927:INFO:             sklearn: 1.4.2
2024-07-24 16:53:14,927:INFO:                pyod: 2.0.1
2024-07-24 16:53:14,927:INFO:            imblearn: 0.12.3
2024-07-24 16:53:14,927:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:14,927:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:14,927:INFO:               numba: 0.60.0
2024-07-24 16:53:14,927:INFO:            requests: 2.32.3
2024-07-24 16:53:14,927:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:14,927:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:14,927:INFO:         yellowbrick: 1.5
2024-07-24 16:53:14,927:INFO:              plotly: 5.23.0
2024-07-24 16:53:14,927:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:14,928:INFO:             kaleido: 0.2.1
2024-07-24 16:53:14,928:INFO:           schemdraw: 0.15
2024-07-24 16:53:14,928:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:14,928:INFO:              sktime: 0.26.0
2024-07-24 16:53:14,928:INFO:               tbats: 1.1.3
2024-07-24 16:53:14,928:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:14,928:INFO:              psutil: 6.0.0
2024-07-24 16:53:14,928:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:14,928:INFO:             pickle5: Not installed
2024-07-24 16:53:14,928:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:14,928:INFO:         deprecation: 2.1.0
2024-07-24 16:53:14,928:INFO:              xxhash: 3.4.1
2024-07-24 16:53:14,928:INFO:           wurlitzer: Not installed
2024-07-24 16:53:14,928:INFO:PyCaret optional dependencies:
2024-07-24 16:53:14,929:INFO:                shap: Not installed
2024-07-24 16:53:14,929:INFO:           interpret: Not installed
2024-07-24 16:53:14,929:INFO:                umap: Not installed
2024-07-24 16:53:14,929:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:14,929:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:14,929:INFO:             autoviz: Not installed
2024-07-24 16:53:14,929:INFO:           fairlearn: Not installed
2024-07-24 16:53:14,929:INFO:          deepchecks: Not installed
2024-07-24 16:53:14,929:INFO:             xgboost: Not installed
2024-07-24 16:53:14,929:INFO:            catboost: Not installed
2024-07-24 16:53:14,929:INFO:              kmodes: Not installed
2024-07-24 16:53:14,929:INFO:             mlxtend: Not installed
2024-07-24 16:53:14,929:INFO:       statsforecast: Not installed
2024-07-24 16:53:14,929:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:14,929:INFO:                 ray: Not installed
2024-07-24 16:53:14,930:INFO:            hyperopt: Not installed
2024-07-24 16:53:14,930:INFO:              optuna: Not installed
2024-07-24 16:53:14,930:INFO:               skopt: Not installed
2024-07-24 16:53:14,930:INFO:              mlflow: Not installed
2024-07-24 16:53:14,930:INFO:              gradio: Not installed
2024-07-24 16:53:14,930:INFO:             fastapi: Not installed
2024-07-24 16:53:14,930:INFO:             uvicorn: Not installed
2024-07-24 16:53:14,930:INFO:              m2cgen: Not installed
2024-07-24 16:53:14,930:INFO:           evidently: Not installed
2024-07-24 16:53:14,930:INFO:               fugue: Not installed
2024-07-24 16:53:14,930:INFO:           streamlit: Not installed
2024-07-24 16:53:14,930:INFO:             prophet: Not installed
2024-07-24 16:53:14,930:INFO:None
2024-07-24 16:53:14,930:INFO:Set up data.
2024-07-24 16:53:14,945:INFO:Set up folding strategy.
2024-07-24 16:53:14,946:INFO:Set up train/test split.
2024-07-24 16:53:14,961:INFO:Set up index.
2024-07-24 16:53:14,962:INFO:Assigning column types.
2024-07-24 16:53:14,965:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:15,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:15,112:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:15,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,196:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:15,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:15,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,235:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:15,282:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:15,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,380:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:15,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,412:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:15,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:15,582:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:15,582:INFO:Set up simple imputation.
2024-07-24 16:53:15,644:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:15,645:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-07-24 16:53:15,645:INFO:Creating final display dataframe.
2024-07-24 16:53:16,061:INFO:Setup _display_container:                     Description             Value
0                    Session id              7384
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape        (14999, 8)
5   Transformed train set shape        (10499, 8)
6    Transformed test set shape         (4500, 8)
7               Ignore features                 2
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              e33a
2024-07-24 16:53:16,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:16,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:16,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:16,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:16,381:INFO:setup() successfully completed in 1.48s...............
2024-07-24 16:53:17,178:WARNING:C:\Users\shuho.hidaka\AppData\Local\Temp\ipykernel_1264\244560041.py:7: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  employee['satisfaction_level'][1] = np.nan  # 欠損値の代入

2024-07-24 16:53:17,178:WARNING:C:\Users\shuho.hidaka\AppData\Local\Temp\ipykernel_1264\244560041.py:8: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  employee['satisfaction_level'][3] = np.nan  # 欠損値の代入

2024-07-24 16:53:17,358:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:17,358:INFO:Logging name: clf-default-name
2024-07-24 16:53:17,358:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:17,358:INFO:version 3.3.2
2024-07-24 16:53:17,358:INFO:Initializing setup()
2024-07-24 16:53:17,363:INFO:self.USI: f147
2024-07-24 16:53:17,363:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:17,363:INFO:Checking environment
2024-07-24 16:53:17,363:INFO:python_version: 3.9.19
2024-07-24 16:53:17,363:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:17,363:INFO:machine: AMD64
2024-07-24 16:53:17,363:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:17,363:INFO:Memory: svmem(total=8387862528, available=572899328, percent=93.2, used=7814963200, free=572899328)
2024-07-24 16:53:17,363:INFO:Physical Core: 2
2024-07-24 16:53:17,363:INFO:Logical Core: 4
2024-07-24 16:53:17,363:INFO:Checking libraries
2024-07-24 16:53:17,363:INFO:System:
2024-07-24 16:53:17,363:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:17,363:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:17,363:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:17,363:INFO:PyCaret required dependencies:
2024-07-24 16:53:17,363:INFO:                 pip: 24.0
2024-07-24 16:53:17,363:INFO:          setuptools: 69.5.1
2024-07-24 16:53:17,363:INFO:             pycaret: 3.3.2
2024-07-24 16:53:17,363:INFO:             IPython: 8.18.1
2024-07-24 16:53:17,363:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:17,363:INFO:                tqdm: 4.66.4
2024-07-24 16:53:17,363:INFO:               numpy: 1.26.4
2024-07-24 16:53:17,363:INFO:              pandas: 2.1.4
2024-07-24 16:53:17,363:INFO:              jinja2: 3.1.4
2024-07-24 16:53:17,363:INFO:               scipy: 1.11.4
2024-07-24 16:53:17,363:INFO:              joblib: 1.3.2
2024-07-24 16:53:17,363:INFO:             sklearn: 1.4.2
2024-07-24 16:53:17,363:INFO:                pyod: 2.0.1
2024-07-24 16:53:17,363:INFO:            imblearn: 0.12.3
2024-07-24 16:53:17,365:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:17,365:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:17,365:INFO:               numba: 0.60.0
2024-07-24 16:53:17,365:INFO:            requests: 2.32.3
2024-07-24 16:53:17,365:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:17,365:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:17,365:INFO:         yellowbrick: 1.5
2024-07-24 16:53:17,365:INFO:              plotly: 5.23.0
2024-07-24 16:53:17,365:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:17,365:INFO:             kaleido: 0.2.1
2024-07-24 16:53:17,365:INFO:           schemdraw: 0.15
2024-07-24 16:53:17,365:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:17,365:INFO:              sktime: 0.26.0
2024-07-24 16:53:17,365:INFO:               tbats: 1.1.3
2024-07-24 16:53:17,365:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:17,365:INFO:              psutil: 6.0.0
2024-07-24 16:53:17,365:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:17,365:INFO:             pickle5: Not installed
2024-07-24 16:53:17,365:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:17,365:INFO:         deprecation: 2.1.0
2024-07-24 16:53:17,365:INFO:              xxhash: 3.4.1
2024-07-24 16:53:17,365:INFO:           wurlitzer: Not installed
2024-07-24 16:53:17,365:INFO:PyCaret optional dependencies:
2024-07-24 16:53:17,365:INFO:                shap: Not installed
2024-07-24 16:53:17,365:INFO:           interpret: Not installed
2024-07-24 16:53:17,365:INFO:                umap: Not installed
2024-07-24 16:53:17,365:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:17,365:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:17,365:INFO:             autoviz: Not installed
2024-07-24 16:53:17,365:INFO:           fairlearn: Not installed
2024-07-24 16:53:17,365:INFO:          deepchecks: Not installed
2024-07-24 16:53:17,365:INFO:             xgboost: Not installed
2024-07-24 16:53:17,365:INFO:            catboost: Not installed
2024-07-24 16:53:17,365:INFO:              kmodes: Not installed
2024-07-24 16:53:17,365:INFO:             mlxtend: Not installed
2024-07-24 16:53:17,365:INFO:       statsforecast: Not installed
2024-07-24 16:53:17,365:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:17,365:INFO:                 ray: Not installed
2024-07-24 16:53:17,365:INFO:            hyperopt: Not installed
2024-07-24 16:53:17,365:INFO:              optuna: Not installed
2024-07-24 16:53:17,365:INFO:               skopt: Not installed
2024-07-24 16:53:17,365:INFO:              mlflow: Not installed
2024-07-24 16:53:17,365:INFO:              gradio: Not installed
2024-07-24 16:53:17,365:INFO:             fastapi: Not installed
2024-07-24 16:53:17,365:INFO:             uvicorn: Not installed
2024-07-24 16:53:17,365:INFO:              m2cgen: Not installed
2024-07-24 16:53:17,365:INFO:           evidently: Not installed
2024-07-24 16:53:17,365:INFO:               fugue: Not installed
2024-07-24 16:53:17,365:INFO:           streamlit: Not installed
2024-07-24 16:53:17,365:INFO:             prophet: Not installed
2024-07-24 16:53:17,365:INFO:None
2024-07-24 16:53:17,365:INFO:Set up data.
2024-07-24 16:53:17,376:INFO:Set up folding strategy.
2024-07-24 16:53:17,376:INFO:Set up train/test split.
2024-07-24 16:53:17,396:INFO:Set up index.
2024-07-24 16:53:17,396:INFO:Assigning column types.
2024-07-24 16:53:17,409:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:17,537:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:17,537:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:17,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:17,719:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:17,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,751:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:17,793:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:17,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,877:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:17,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,910:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:17,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:17,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:18,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:18,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:18,059:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:18,059:INFO:Set up simple imputation.
2024-07-24 16:53:18,059:INFO:Set up encoding of categorical features.
2024-07-24 16:53:18,209:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:18,225:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['department', 'salary'],
                                    transformer=OneHotEncoder(cols=['department',
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-07-24 16:53:18,225:INFO:Creating final display dataframe.
2024-07-24 16:53:18,475:INFO:Setup _display_container:                     Description             Value
0                    Session id              7401
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (14999, 21)
5   Transformed train set shape       (10499, 21)
6    Transformed test set shape        (4500, 21)
7              Numeric features                 7
8          Categorical features                 2
9      Rows with missing values              0.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              f147
2024-07-24 16:53:18,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:18,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:18,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:18,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:18,645:INFO:setup() successfully completed in 1.3s...............
2024-07-24 16:53:18,989:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:18,989:INFO:Logging name: clf-default-name
2024-07-24 16:53:18,989:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:18,989:INFO:version 3.3.2
2024-07-24 16:53:18,989:INFO:Initializing setup()
2024-07-24 16:53:18,989:INFO:self.USI: dd72
2024-07-24 16:53:18,989:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:18,989:INFO:Checking environment
2024-07-24 16:53:18,989:INFO:python_version: 3.9.19
2024-07-24 16:53:18,989:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:18,989:INFO:machine: AMD64
2024-07-24 16:53:18,989:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:18,989:INFO:Memory: svmem(total=8387862528, available=573988864, percent=93.2, used=7813873664, free=573988864)
2024-07-24 16:53:18,989:INFO:Physical Core: 2
2024-07-24 16:53:18,989:INFO:Logical Core: 4
2024-07-24 16:53:18,989:INFO:Checking libraries
2024-07-24 16:53:18,989:INFO:System:
2024-07-24 16:53:18,989:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:18,989:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:18,989:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:18,989:INFO:PyCaret required dependencies:
2024-07-24 16:53:18,989:INFO:                 pip: 24.0
2024-07-24 16:53:18,989:INFO:          setuptools: 69.5.1
2024-07-24 16:53:18,989:INFO:             pycaret: 3.3.2
2024-07-24 16:53:18,989:INFO:             IPython: 8.18.1
2024-07-24 16:53:18,989:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:18,989:INFO:                tqdm: 4.66.4
2024-07-24 16:53:18,989:INFO:               numpy: 1.26.4
2024-07-24 16:53:18,989:INFO:              pandas: 2.1.4
2024-07-24 16:53:18,989:INFO:              jinja2: 3.1.4
2024-07-24 16:53:18,989:INFO:               scipy: 1.11.4
2024-07-24 16:53:18,989:INFO:              joblib: 1.3.2
2024-07-24 16:53:18,989:INFO:             sklearn: 1.4.2
2024-07-24 16:53:18,989:INFO:                pyod: 2.0.1
2024-07-24 16:53:18,989:INFO:            imblearn: 0.12.3
2024-07-24 16:53:18,989:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:18,989:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:18,989:INFO:               numba: 0.60.0
2024-07-24 16:53:18,989:INFO:            requests: 2.32.3
2024-07-24 16:53:18,989:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:18,989:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:18,989:INFO:         yellowbrick: 1.5
2024-07-24 16:53:18,989:INFO:              plotly: 5.23.0
2024-07-24 16:53:18,989:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:18,989:INFO:             kaleido: 0.2.1
2024-07-24 16:53:18,989:INFO:           schemdraw: 0.15
2024-07-24 16:53:18,989:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:18,989:INFO:              sktime: 0.26.0
2024-07-24 16:53:18,989:INFO:               tbats: 1.1.3
2024-07-24 16:53:18,989:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:18,989:INFO:              psutil: 6.0.0
2024-07-24 16:53:18,989:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:18,989:INFO:             pickle5: Not installed
2024-07-24 16:53:18,989:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:18,989:INFO:         deprecation: 2.1.0
2024-07-24 16:53:18,989:INFO:              xxhash: 3.4.1
2024-07-24 16:53:18,989:INFO:           wurlitzer: Not installed
2024-07-24 16:53:18,989:INFO:PyCaret optional dependencies:
2024-07-24 16:53:18,989:INFO:                shap: Not installed
2024-07-24 16:53:18,989:INFO:           interpret: Not installed
2024-07-24 16:53:18,989:INFO:                umap: Not installed
2024-07-24 16:53:18,989:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:18,989:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:18,989:INFO:             autoviz: Not installed
2024-07-24 16:53:18,989:INFO:           fairlearn: Not installed
2024-07-24 16:53:18,989:INFO:          deepchecks: Not installed
2024-07-24 16:53:18,989:INFO:             xgboost: Not installed
2024-07-24 16:53:18,989:INFO:            catboost: Not installed
2024-07-24 16:53:18,989:INFO:              kmodes: Not installed
2024-07-24 16:53:18,989:INFO:             mlxtend: Not installed
2024-07-24 16:53:18,989:INFO:       statsforecast: Not installed
2024-07-24 16:53:18,989:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:18,989:INFO:                 ray: Not installed
2024-07-24 16:53:18,989:INFO:            hyperopt: Not installed
2024-07-24 16:53:18,989:INFO:              optuna: Not installed
2024-07-24 16:53:18,989:INFO:               skopt: Not installed
2024-07-24 16:53:18,989:INFO:              mlflow: Not installed
2024-07-24 16:53:18,989:INFO:              gradio: Not installed
2024-07-24 16:53:18,989:INFO:             fastapi: Not installed
2024-07-24 16:53:18,989:INFO:             uvicorn: Not installed
2024-07-24 16:53:18,989:INFO:              m2cgen: Not installed
2024-07-24 16:53:18,989:INFO:           evidently: Not installed
2024-07-24 16:53:18,989:INFO:               fugue: Not installed
2024-07-24 16:53:18,989:INFO:           streamlit: Not installed
2024-07-24 16:53:18,989:INFO:             prophet: Not installed
2024-07-24 16:53:18,989:INFO:None
2024-07-24 16:53:18,989:INFO:Set up data.
2024-07-24 16:53:19,008:INFO:Set up folding strategy.
2024-07-24 16:53:19,008:INFO:Set up train/test split.
2024-07-24 16:53:19,025:INFO:Set up index.
2024-07-24 16:53:19,025:INFO:Assigning column types.
2024-07-24 16:53:19,058:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:19,179:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:19,179:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:19,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:19,259:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:19,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,296:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:19,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:19,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,410:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:19,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,440:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:19,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:19,592:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:19,592:INFO:Set up simple imputation.
2024-07-24 16:53:19,592:INFO:Set up encoding of categorical features.
2024-07-24 16:53:19,679:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:19,679:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['department', 'salary'],
                                    transformer=OneHotEncoder(cols=['department',
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-07-24 16:53:19,679:INFO:Creating final display dataframe.
2024-07-24 16:53:19,924:INFO:Setup _display_container:                     Description             Value
0                    Session id              2358
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (14999, 21)
5   Transformed train set shape       (10499, 21)
6    Transformed test set shape        (4500, 21)
7              Numeric features                 7
8          Categorical features                 2
9      Rows with missing values              0.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation            median
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              dd72
2024-07-24 16:53:20,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:20,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:20,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:20,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:20,092:INFO:setup() successfully completed in 1.14s...............
2024-07-24 16:53:21,138:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:21,138:INFO:Logging name: clf-default-name
2024-07-24 16:53:21,138:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:21,138:INFO:version 3.3.2
2024-07-24 16:53:21,138:INFO:Initializing setup()
2024-07-24 16:53:21,138:INFO:self.USI: 3927
2024-07-24 16:53:21,138:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:21,138:INFO:Checking environment
2024-07-24 16:53:21,138:INFO:python_version: 3.9.19
2024-07-24 16:53:21,138:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:21,138:INFO:machine: AMD64
2024-07-24 16:53:21,138:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:21,138:INFO:Memory: svmem(total=8387862528, available=635781120, percent=92.4, used=7752081408, free=635781120)
2024-07-24 16:53:21,138:INFO:Physical Core: 2
2024-07-24 16:53:21,138:INFO:Logical Core: 4
2024-07-24 16:53:21,138:INFO:Checking libraries
2024-07-24 16:53:21,138:INFO:System:
2024-07-24 16:53:21,138:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:21,138:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:21,138:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:21,138:INFO:PyCaret required dependencies:
2024-07-24 16:53:21,138:INFO:                 pip: 24.0
2024-07-24 16:53:21,138:INFO:          setuptools: 69.5.1
2024-07-24 16:53:21,138:INFO:             pycaret: 3.3.2
2024-07-24 16:53:21,138:INFO:             IPython: 8.18.1
2024-07-24 16:53:21,138:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:21,138:INFO:                tqdm: 4.66.4
2024-07-24 16:53:21,138:INFO:               numpy: 1.26.4
2024-07-24 16:53:21,138:INFO:              pandas: 2.1.4
2024-07-24 16:53:21,138:INFO:              jinja2: 3.1.4
2024-07-24 16:53:21,138:INFO:               scipy: 1.11.4
2024-07-24 16:53:21,138:INFO:              joblib: 1.3.2
2024-07-24 16:53:21,138:INFO:             sklearn: 1.4.2
2024-07-24 16:53:21,138:INFO:                pyod: 2.0.1
2024-07-24 16:53:21,138:INFO:            imblearn: 0.12.3
2024-07-24 16:53:21,138:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:21,138:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:21,138:INFO:               numba: 0.60.0
2024-07-24 16:53:21,138:INFO:            requests: 2.32.3
2024-07-24 16:53:21,138:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:21,138:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:21,138:INFO:         yellowbrick: 1.5
2024-07-24 16:53:21,138:INFO:              plotly: 5.23.0
2024-07-24 16:53:21,138:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:21,138:INFO:             kaleido: 0.2.1
2024-07-24 16:53:21,138:INFO:           schemdraw: 0.15
2024-07-24 16:53:21,138:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:21,138:INFO:              sktime: 0.26.0
2024-07-24 16:53:21,138:INFO:               tbats: 1.1.3
2024-07-24 16:53:21,138:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:21,138:INFO:              psutil: 6.0.0
2024-07-24 16:53:21,138:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:21,138:INFO:             pickle5: Not installed
2024-07-24 16:53:21,138:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:21,138:INFO:         deprecation: 2.1.0
2024-07-24 16:53:21,138:INFO:              xxhash: 3.4.1
2024-07-24 16:53:21,138:INFO:           wurlitzer: Not installed
2024-07-24 16:53:21,138:INFO:PyCaret optional dependencies:
2024-07-24 16:53:21,138:INFO:                shap: Not installed
2024-07-24 16:53:21,138:INFO:           interpret: Not installed
2024-07-24 16:53:21,138:INFO:                umap: Not installed
2024-07-24 16:53:21,138:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:21,138:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:21,138:INFO:             autoviz: Not installed
2024-07-24 16:53:21,138:INFO:           fairlearn: Not installed
2024-07-24 16:53:21,138:INFO:          deepchecks: Not installed
2024-07-24 16:53:21,138:INFO:             xgboost: Not installed
2024-07-24 16:53:21,138:INFO:            catboost: Not installed
2024-07-24 16:53:21,138:INFO:              kmodes: Not installed
2024-07-24 16:53:21,138:INFO:             mlxtend: Not installed
2024-07-24 16:53:21,138:INFO:       statsforecast: Not installed
2024-07-24 16:53:21,138:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:21,138:INFO:                 ray: Not installed
2024-07-24 16:53:21,138:INFO:            hyperopt: Not installed
2024-07-24 16:53:21,138:INFO:              optuna: Not installed
2024-07-24 16:53:21,138:INFO:               skopt: Not installed
2024-07-24 16:53:21,138:INFO:              mlflow: Not installed
2024-07-24 16:53:21,138:INFO:              gradio: Not installed
2024-07-24 16:53:21,138:INFO:             fastapi: Not installed
2024-07-24 16:53:21,138:INFO:             uvicorn: Not installed
2024-07-24 16:53:21,138:INFO:              m2cgen: Not installed
2024-07-24 16:53:21,138:INFO:           evidently: Not installed
2024-07-24 16:53:21,138:INFO:               fugue: Not installed
2024-07-24 16:53:21,138:INFO:           streamlit: Not installed
2024-07-24 16:53:21,138:INFO:             prophet: Not installed
2024-07-24 16:53:21,138:INFO:None
2024-07-24 16:53:21,138:INFO:Set up data.
2024-07-24 16:53:21,155:INFO:Set up folding strategy.
2024-07-24 16:53:21,155:INFO:Set up train/test split.
2024-07-24 16:53:21,164:INFO:Set up index.
2024-07-24 16:53:21,164:INFO:Assigning column types.
2024-07-24 16:53:21,173:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:21,221:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:21,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:21,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:21,291:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:21,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,321:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:21,371:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:21,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:21,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,471:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:21,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:21,604:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:21,620:INFO:Set up simple imputation.
2024-07-24 16:53:21,624:INFO:Set up encoding of categorical features.
2024-07-24 16:53:21,624:INFO:Set up imbalanced handling.
2024-07-24 16:53:21,794:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:21,803:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                    transformer=OneHotEncoder(cols=['department',
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-07-24 16:53:21,804:INFO:Creating final display dataframe.
2024-07-24 16:53:22,391:INFO:Setup _display_container:                     Description             Value
0                    Session id              7245
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (20498, 21)
5   Transformed train set shape       (15998, 21)
6    Transformed test set shape        (4500, 21)
7              Numeric features                 7
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              3927
2024-07-24 16:53:22,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:22,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:22,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:22,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:22,554:INFO:setup() successfully completed in 1.42s...............
2024-07-24 16:53:23,743:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:23,743:INFO:Logging name: clf-default-name
2024-07-24 16:53:23,743:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:23,743:INFO:version 3.3.2
2024-07-24 16:53:23,743:INFO:Initializing setup()
2024-07-24 16:53:23,743:INFO:self.USI: 05dc
2024-07-24 16:53:23,743:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:23,743:INFO:Checking environment
2024-07-24 16:53:23,743:INFO:python_version: 3.9.19
2024-07-24 16:53:23,743:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:23,743:INFO:machine: AMD64
2024-07-24 16:53:23,743:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:23,743:INFO:Memory: svmem(total=8387862528, available=592121856, percent=92.9, used=7795740672, free=592121856)
2024-07-24 16:53:23,744:INFO:Physical Core: 2
2024-07-24 16:53:23,744:INFO:Logical Core: 4
2024-07-24 16:53:23,744:INFO:Checking libraries
2024-07-24 16:53:23,744:INFO:System:
2024-07-24 16:53:23,744:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:23,744:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:23,744:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:23,744:INFO:PyCaret required dependencies:
2024-07-24 16:53:23,744:INFO:                 pip: 24.0
2024-07-24 16:53:23,744:INFO:          setuptools: 69.5.1
2024-07-24 16:53:23,744:INFO:             pycaret: 3.3.2
2024-07-24 16:53:23,744:INFO:             IPython: 8.18.1
2024-07-24 16:53:23,744:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:23,744:INFO:                tqdm: 4.66.4
2024-07-24 16:53:23,744:INFO:               numpy: 1.26.4
2024-07-24 16:53:23,744:INFO:              pandas: 2.1.4
2024-07-24 16:53:23,744:INFO:              jinja2: 3.1.4
2024-07-24 16:53:23,744:INFO:               scipy: 1.11.4
2024-07-24 16:53:23,744:INFO:              joblib: 1.3.2
2024-07-24 16:53:23,744:INFO:             sklearn: 1.4.2
2024-07-24 16:53:23,744:INFO:                pyod: 2.0.1
2024-07-24 16:53:23,744:INFO:            imblearn: 0.12.3
2024-07-24 16:53:23,744:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:23,744:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:23,745:INFO:               numba: 0.60.0
2024-07-24 16:53:23,745:INFO:            requests: 2.32.3
2024-07-24 16:53:23,745:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:23,745:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:23,745:INFO:         yellowbrick: 1.5
2024-07-24 16:53:23,745:INFO:              plotly: 5.23.0
2024-07-24 16:53:23,745:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:23,745:INFO:             kaleido: 0.2.1
2024-07-24 16:53:23,746:INFO:           schemdraw: 0.15
2024-07-24 16:53:23,746:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:23,746:INFO:              sktime: 0.26.0
2024-07-24 16:53:23,746:INFO:               tbats: 1.1.3
2024-07-24 16:53:23,746:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:23,746:INFO:              psutil: 6.0.0
2024-07-24 16:53:23,746:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:23,746:INFO:             pickle5: Not installed
2024-07-24 16:53:23,746:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:23,746:INFO:         deprecation: 2.1.0
2024-07-24 16:53:23,746:INFO:              xxhash: 3.4.1
2024-07-24 16:53:23,746:INFO:           wurlitzer: Not installed
2024-07-24 16:53:23,746:INFO:PyCaret optional dependencies:
2024-07-24 16:53:23,746:INFO:                shap: Not installed
2024-07-24 16:53:23,746:INFO:           interpret: Not installed
2024-07-24 16:53:23,746:INFO:                umap: Not installed
2024-07-24 16:53:23,746:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:23,746:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:23,746:INFO:             autoviz: Not installed
2024-07-24 16:53:23,746:INFO:           fairlearn: Not installed
2024-07-24 16:53:23,746:INFO:          deepchecks: Not installed
2024-07-24 16:53:23,746:INFO:             xgboost: Not installed
2024-07-24 16:53:23,746:INFO:            catboost: Not installed
2024-07-24 16:53:23,746:INFO:              kmodes: Not installed
2024-07-24 16:53:23,746:INFO:             mlxtend: Not installed
2024-07-24 16:53:23,746:INFO:       statsforecast: Not installed
2024-07-24 16:53:23,746:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:23,746:INFO:                 ray: Not installed
2024-07-24 16:53:23,746:INFO:            hyperopt: Not installed
2024-07-24 16:53:23,746:INFO:              optuna: Not installed
2024-07-24 16:53:23,746:INFO:               skopt: Not installed
2024-07-24 16:53:23,747:INFO:              mlflow: Not installed
2024-07-24 16:53:23,747:INFO:              gradio: Not installed
2024-07-24 16:53:23,747:INFO:             fastapi: Not installed
2024-07-24 16:53:23,747:INFO:             uvicorn: Not installed
2024-07-24 16:53:23,747:INFO:              m2cgen: Not installed
2024-07-24 16:53:23,747:INFO:           evidently: Not installed
2024-07-24 16:53:23,747:INFO:               fugue: Not installed
2024-07-24 16:53:23,747:INFO:           streamlit: Not installed
2024-07-24 16:53:23,747:INFO:             prophet: Not installed
2024-07-24 16:53:23,747:INFO:None
2024-07-24 16:53:23,747:INFO:Set up data.
2024-07-24 16:53:23,756:INFO:Set up folding strategy.
2024-07-24 16:53:23,756:INFO:Set up train/test split.
2024-07-24 16:53:23,767:INFO:Set up index.
2024-07-24 16:53:23,767:INFO:Assigning column types.
2024-07-24 16:53:23,767:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:23,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:23,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:23,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:23,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:23,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:23,911:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:23,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:23,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:23,940:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:23,984:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:24,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,064:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:24,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,092:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:24,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,237:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:24,238:INFO:Set up simple imputation.
2024-07-24 16:53:24,241:INFO:Set up encoding of categorical features.
2024-07-24 16:53:24,242:INFO:Set up feature normalization.
2024-07-24 16:53:24,352:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:24,357:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                 TransformerWrapper(exclude=None,
                                    include=['department', 'salary'],
                                    transformer=OneHotEncoder(cols=['department',
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-24 16:53:24,358:INFO:Creating final display dataframe.
2024-07-24 16:53:24,618:INFO:Setup _display_container:                     Description             Value
0                    Session id              8836
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (14999, 21)
5   Transformed train set shape       (10499, 21)
6    Transformed test set shape        (4500, 21)
7              Numeric features                 7
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              05dc
2024-07-24 16:53:24,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:24,785:INFO:setup() successfully completed in 1.05s...............
2024-07-24 16:53:26,185:INFO:PyCaret RegressionExperiment
2024-07-24 16:53:26,185:INFO:Logging name: reg-default-name
2024-07-24 16:53:26,185:INFO:ML Usecase: MLUsecase.REGRESSION
2024-07-24 16:53:26,185:INFO:version 3.3.2
2024-07-24 16:53:26,185:INFO:Initializing setup()
2024-07-24 16:53:26,185:INFO:self.USI: 88e2
2024-07-24 16:53:26,185:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'transform_target_param', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:26,185:INFO:Checking environment
2024-07-24 16:53:26,185:INFO:python_version: 3.9.19
2024-07-24 16:53:26,185:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:26,185:INFO:machine: AMD64
2024-07-24 16:53:26,185:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:26,185:INFO:Memory: svmem(total=8387862528, available=596525056, percent=92.9, used=7791337472, free=596525056)
2024-07-24 16:53:26,185:INFO:Physical Core: 2
2024-07-24 16:53:26,185:INFO:Logical Core: 4
2024-07-24 16:53:26,185:INFO:Checking libraries
2024-07-24 16:53:26,185:INFO:System:
2024-07-24 16:53:26,185:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:26,185:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:26,185:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:26,185:INFO:PyCaret required dependencies:
2024-07-24 16:53:26,185:INFO:                 pip: 24.0
2024-07-24 16:53:26,185:INFO:          setuptools: 69.5.1
2024-07-24 16:53:26,185:INFO:             pycaret: 3.3.2
2024-07-24 16:53:26,185:INFO:             IPython: 8.18.1
2024-07-24 16:53:26,198:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:26,198:INFO:                tqdm: 4.66.4
2024-07-24 16:53:26,198:INFO:               numpy: 1.26.4
2024-07-24 16:53:26,198:INFO:              pandas: 2.1.4
2024-07-24 16:53:26,199:INFO:              jinja2: 3.1.4
2024-07-24 16:53:26,199:INFO:               scipy: 1.11.4
2024-07-24 16:53:26,199:INFO:              joblib: 1.3.2
2024-07-24 16:53:26,199:INFO:             sklearn: 1.4.2
2024-07-24 16:53:26,199:INFO:                pyod: 2.0.1
2024-07-24 16:53:26,199:INFO:            imblearn: 0.12.3
2024-07-24 16:53:26,199:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:26,199:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:26,199:INFO:               numba: 0.60.0
2024-07-24 16:53:26,199:INFO:            requests: 2.32.3
2024-07-24 16:53:26,199:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:26,199:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:26,199:INFO:         yellowbrick: 1.5
2024-07-24 16:53:26,199:INFO:              plotly: 5.23.0
2024-07-24 16:53:26,199:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:26,199:INFO:             kaleido: 0.2.1
2024-07-24 16:53:26,199:INFO:           schemdraw: 0.15
2024-07-24 16:53:26,199:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:26,199:INFO:              sktime: 0.26.0
2024-07-24 16:53:26,199:INFO:               tbats: 1.1.3
2024-07-24 16:53:26,199:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:26,199:INFO:              psutil: 6.0.0
2024-07-24 16:53:26,199:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:26,199:INFO:             pickle5: Not installed
2024-07-24 16:53:26,199:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:26,199:INFO:         deprecation: 2.1.0
2024-07-24 16:53:26,199:INFO:              xxhash: 3.4.1
2024-07-24 16:53:26,199:INFO:           wurlitzer: Not installed
2024-07-24 16:53:26,199:INFO:PyCaret optional dependencies:
2024-07-24 16:53:26,199:INFO:                shap: Not installed
2024-07-24 16:53:26,199:INFO:           interpret: Not installed
2024-07-24 16:53:26,199:INFO:                umap: Not installed
2024-07-24 16:53:26,199:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:26,199:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:26,199:INFO:             autoviz: Not installed
2024-07-24 16:53:26,199:INFO:           fairlearn: Not installed
2024-07-24 16:53:26,199:INFO:          deepchecks: Not installed
2024-07-24 16:53:26,199:INFO:             xgboost: Not installed
2024-07-24 16:53:26,199:INFO:            catboost: Not installed
2024-07-24 16:53:26,199:INFO:              kmodes: Not installed
2024-07-24 16:53:26,199:INFO:             mlxtend: Not installed
2024-07-24 16:53:26,199:INFO:       statsforecast: Not installed
2024-07-24 16:53:26,199:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:26,199:INFO:                 ray: Not installed
2024-07-24 16:53:26,199:INFO:            hyperopt: Not installed
2024-07-24 16:53:26,199:INFO:              optuna: Not installed
2024-07-24 16:53:26,199:INFO:               skopt: Not installed
2024-07-24 16:53:26,199:INFO:              mlflow: Not installed
2024-07-24 16:53:26,199:INFO:              gradio: Not installed
2024-07-24 16:53:26,199:INFO:             fastapi: Not installed
2024-07-24 16:53:26,199:INFO:             uvicorn: Not installed
2024-07-24 16:53:26,199:INFO:              m2cgen: Not installed
2024-07-24 16:53:26,199:INFO:           evidently: Not installed
2024-07-24 16:53:26,199:INFO:               fugue: Not installed
2024-07-24 16:53:26,199:INFO:           streamlit: Not installed
2024-07-24 16:53:26,199:INFO:             prophet: Not installed
2024-07-24 16:53:26,199:INFO:None
2024-07-24 16:53:26,199:INFO:Set up data.
2024-07-24 16:53:26,199:INFO:Set up folding strategy.
2024-07-24 16:53:26,199:INFO:Set up train/test split.
2024-07-24 16:53:26,199:INFO:Set up index.
2024-07-24 16:53:26,199:INFO:Assigning column types.
2024-07-24 16:53:26,217:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:26,217:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,217:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,217:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,285:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,332:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,332:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,332:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,332:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,432:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-07-24 16:53:26,449:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,449:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,550:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,569:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,569:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,635:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,686:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-07-24 16:53:26,699:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,764:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,799:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,815:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,887:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,935:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:26,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:26,936:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-07-24 16:53:27,015:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:27,072:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:27,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,148:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:27,200:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:27,200:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,200:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:27,283:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:27,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 16:53:27,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,448:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-07-24 16:53:27,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:27,697:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:27,697:INFO:Set up target transformation.
2024-07-24 16:53:27,697:INFO:Set up simple imputation.
2024-07-24 16:53:27,697:INFO:Set up encoding of categorical features.
2024-07-24 16:53:27,799:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:27,799:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=TargetTransformer(enforce_2d=True,
                                                                             estimator=PowerTransformer(copy=True,
                                                                                                        method='yeo-johnson',
                                                                                                        standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['department', 'salary'],
                                    transformer=OneHotEncoder(cols=['department',
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-07-24 16:53:27,799:INFO:Creating final display dataframe.
2024-07-24 16:53:28,064:INFO:Setup _display_container:                     Description                 Value
0                    Session id                  1831
1                        Target  average_montly_hours
2                   Target type            Regression
3           Original data shape           (14999, 10)
4        Transformed data shape           (14999, 21)
5   Transformed train set shape           (10499, 21)
6    Transformed test set shape            (4500, 21)
7              Numeric features                     7
8          Categorical features                     2
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13     Maximum one-hot encoding                    25
14              Encoding method                  None
15             Transform target                  True
16      Transform target method           yeo-johnson
17               Fold Generator                 KFold
18                  Fold Number                    10
19                     CPU Jobs                    -1
20                      Use GPU                 False
21               Log Experiment                 False
22              Experiment Name      reg-default-name
23                          USI                  88e2
2024-07-24 16:53:28,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:28,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:28,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:28,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:28,297:INFO:setup() successfully completed in 2.11s...............
2024-07-24 16:53:30,014:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:30,014:INFO:Logging name: clf-default-name
2024-07-24 16:53:30,014:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:30,014:INFO:version 3.3.2
2024-07-24 16:53:30,027:INFO:Initializing setup()
2024-07-24 16:53:30,027:INFO:self.USI: d277
2024-07-24 16:53:30,027:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:30,027:INFO:Checking environment
2024-07-24 16:53:30,027:INFO:python_version: 3.9.19
2024-07-24 16:53:30,027:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:30,027:INFO:machine: AMD64
2024-07-24 16:53:30,028:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:30,028:INFO:Memory: svmem(total=8387862528, available=577298432, percent=93.1, used=7810564096, free=577298432)
2024-07-24 16:53:30,028:INFO:Physical Core: 2
2024-07-24 16:53:30,028:INFO:Logical Core: 4
2024-07-24 16:53:30,028:INFO:Checking libraries
2024-07-24 16:53:30,028:INFO:System:
2024-07-24 16:53:30,028:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:30,028:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:30,028:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:30,028:INFO:PyCaret required dependencies:
2024-07-24 16:53:30,028:INFO:                 pip: 24.0
2024-07-24 16:53:30,028:INFO:          setuptools: 69.5.1
2024-07-24 16:53:30,028:INFO:             pycaret: 3.3.2
2024-07-24 16:53:30,028:INFO:             IPython: 8.18.1
2024-07-24 16:53:30,028:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:30,028:INFO:                tqdm: 4.66.4
2024-07-24 16:53:30,028:INFO:               numpy: 1.26.4
2024-07-24 16:53:30,028:INFO:              pandas: 2.1.4
2024-07-24 16:53:30,028:INFO:              jinja2: 3.1.4
2024-07-24 16:53:30,028:INFO:               scipy: 1.11.4
2024-07-24 16:53:30,028:INFO:              joblib: 1.3.2
2024-07-24 16:53:30,028:INFO:             sklearn: 1.4.2
2024-07-24 16:53:30,028:INFO:                pyod: 2.0.1
2024-07-24 16:53:30,028:INFO:            imblearn: 0.12.3
2024-07-24 16:53:30,028:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:30,028:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:30,028:INFO:               numba: 0.60.0
2024-07-24 16:53:30,028:INFO:            requests: 2.32.3
2024-07-24 16:53:30,028:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:30,028:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:30,028:INFO:         yellowbrick: 1.5
2024-07-24 16:53:30,028:INFO:              plotly: 5.23.0
2024-07-24 16:53:30,028:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:30,028:INFO:             kaleido: 0.2.1
2024-07-24 16:53:30,028:INFO:           schemdraw: 0.15
2024-07-24 16:53:30,028:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:30,028:INFO:              sktime: 0.26.0
2024-07-24 16:53:30,028:INFO:               tbats: 1.1.3
2024-07-24 16:53:30,028:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:30,028:INFO:              psutil: 6.0.0
2024-07-24 16:53:30,028:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:30,028:INFO:             pickle5: Not installed
2024-07-24 16:53:30,028:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:30,028:INFO:         deprecation: 2.1.0
2024-07-24 16:53:30,028:INFO:              xxhash: 3.4.1
2024-07-24 16:53:30,028:INFO:           wurlitzer: Not installed
2024-07-24 16:53:30,028:INFO:PyCaret optional dependencies:
2024-07-24 16:53:30,028:INFO:                shap: Not installed
2024-07-24 16:53:30,028:INFO:           interpret: Not installed
2024-07-24 16:53:30,028:INFO:                umap: Not installed
2024-07-24 16:53:30,028:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:30,028:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:30,028:INFO:             autoviz: Not installed
2024-07-24 16:53:30,028:INFO:           fairlearn: Not installed
2024-07-24 16:53:30,028:INFO:          deepchecks: Not installed
2024-07-24 16:53:30,028:INFO:             xgboost: Not installed
2024-07-24 16:53:30,028:INFO:            catboost: Not installed
2024-07-24 16:53:30,028:INFO:              kmodes: Not installed
2024-07-24 16:53:30,028:INFO:             mlxtend: Not installed
2024-07-24 16:53:30,028:INFO:       statsforecast: Not installed
2024-07-24 16:53:30,028:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:30,028:INFO:                 ray: Not installed
2024-07-24 16:53:30,028:INFO:            hyperopt: Not installed
2024-07-24 16:53:30,028:INFO:              optuna: Not installed
2024-07-24 16:53:30,028:INFO:               skopt: Not installed
2024-07-24 16:53:30,028:INFO:              mlflow: Not installed
2024-07-24 16:53:30,028:INFO:              gradio: Not installed
2024-07-24 16:53:30,028:INFO:             fastapi: Not installed
2024-07-24 16:53:30,028:INFO:             uvicorn: Not installed
2024-07-24 16:53:30,028:INFO:              m2cgen: Not installed
2024-07-24 16:53:30,028:INFO:           evidently: Not installed
2024-07-24 16:53:30,028:INFO:               fugue: Not installed
2024-07-24 16:53:30,028:INFO:           streamlit: Not installed
2024-07-24 16:53:30,028:INFO:             prophet: Not installed
2024-07-24 16:53:30,028:INFO:None
2024-07-24 16:53:30,028:INFO:Set up data.
2024-07-24 16:53:30,028:INFO:Set up folding strategy.
2024-07-24 16:53:30,028:INFO:Set up train/test split.
2024-07-24 16:53:30,046:INFO:Set up index.
2024-07-24 16:53:30,046:INFO:Assigning column types.
2024-07-24 16:53:30,046:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:30,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:30,095:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:30,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,163:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:30,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:30,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,195:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:30,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:30,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,314:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:30,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,345:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:30,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:30,478:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:30,495:INFO:Set up simple imputation.
2024-07-24 16:53:30,498:INFO:Set up encoding of categorical features.
2024-07-24 16:53:30,498:INFO:Set up polynomial features.
2024-07-24 16:53:30,615:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:30,629:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                    transformer=OneHotEncoder(cols=['department',
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('polynomial_features',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PolynomialFeatures(degree=2,
                                                                   include_bias=False,
                                                                   interaction_only=False,
                                                                   order='C')))],
         verbose=False)
2024-07-24 16:53:30,629:INFO:Creating final display dataframe.
2024-07-24 16:53:31,044:INFO:Setup _display_container:                     Description             Value
0                    Session id              3240
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape      (14999, 231)
5   Transformed train set shape      (10499, 231)
6    Transformed test set shape       (4500, 231)
7              Numeric features                 7
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              d277
2024-07-24 16:53:31,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:31,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:31,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:31,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:31,194:INFO:setup() successfully completed in 1.18s...............
2024-07-24 16:53:32,178:INFO:PyCaret ClassificationExperiment
2024-07-24 16:53:32,178:INFO:Logging name: clf-default-name
2024-07-24 16:53:32,178:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:53:32,178:INFO:version 3.3.2
2024-07-24 16:53:32,178:INFO:Initializing setup()
2024-07-24 16:53:32,178:INFO:self.USI: 9480
2024-07-24 16:53:32,178:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:53:32,178:INFO:Checking environment
2024-07-24 16:53:32,179:INFO:python_version: 3.9.19
2024-07-24 16:53:32,179:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:53:32,179:INFO:machine: AMD64
2024-07-24 16:53:32,179:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:53:32,179:INFO:Memory: svmem(total=8387862528, available=538390528, percent=93.6, used=7849472000, free=538390528)
2024-07-24 16:53:32,179:INFO:Physical Core: 2
2024-07-24 16:53:32,179:INFO:Logical Core: 4
2024-07-24 16:53:32,179:INFO:Checking libraries
2024-07-24 16:53:32,179:INFO:System:
2024-07-24 16:53:32,179:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:53:32,179:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:53:32,179:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:53:32,179:INFO:PyCaret required dependencies:
2024-07-24 16:53:32,180:INFO:                 pip: 24.0
2024-07-24 16:53:32,180:INFO:          setuptools: 69.5.1
2024-07-24 16:53:32,180:INFO:             pycaret: 3.3.2
2024-07-24 16:53:32,180:INFO:             IPython: 8.18.1
2024-07-24 16:53:32,180:INFO:          ipywidgets: 8.1.3
2024-07-24 16:53:32,180:INFO:                tqdm: 4.66.4
2024-07-24 16:53:32,180:INFO:               numpy: 1.26.4
2024-07-24 16:53:32,180:INFO:              pandas: 2.1.4
2024-07-24 16:53:32,180:INFO:              jinja2: 3.1.4
2024-07-24 16:53:32,180:INFO:               scipy: 1.11.4
2024-07-24 16:53:32,180:INFO:              joblib: 1.3.2
2024-07-24 16:53:32,180:INFO:             sklearn: 1.4.2
2024-07-24 16:53:32,180:INFO:                pyod: 2.0.1
2024-07-24 16:53:32,180:INFO:            imblearn: 0.12.3
2024-07-24 16:53:32,181:INFO:   category_encoders: 2.6.3
2024-07-24 16:53:32,181:INFO:            lightgbm: 4.4.0
2024-07-24 16:53:32,181:INFO:               numba: 0.60.0
2024-07-24 16:53:32,181:INFO:            requests: 2.32.3
2024-07-24 16:53:32,181:INFO:          matplotlib: 3.7.5
2024-07-24 16:53:32,181:INFO:          scikitplot: 0.3.7
2024-07-24 16:53:32,181:INFO:         yellowbrick: 1.5
2024-07-24 16:53:32,181:INFO:              plotly: 5.23.0
2024-07-24 16:53:32,181:INFO:    plotly-resampler: Not installed
2024-07-24 16:53:32,181:INFO:             kaleido: 0.2.1
2024-07-24 16:53:32,181:INFO:           schemdraw: 0.15
2024-07-24 16:53:32,181:INFO:         statsmodels: 0.14.2
2024-07-24 16:53:32,181:INFO:              sktime: 0.26.0
2024-07-24 16:53:32,181:INFO:               tbats: 1.1.3
2024-07-24 16:53:32,181:INFO:            pmdarima: 2.0.4
2024-07-24 16:53:32,182:INFO:              psutil: 6.0.0
2024-07-24 16:53:32,182:INFO:          markupsafe: 2.1.5
2024-07-24 16:53:32,182:INFO:             pickle5: Not installed
2024-07-24 16:53:32,182:INFO:         cloudpickle: 3.0.0
2024-07-24 16:53:32,182:INFO:         deprecation: 2.1.0
2024-07-24 16:53:32,182:INFO:              xxhash: 3.4.1
2024-07-24 16:53:32,182:INFO:           wurlitzer: Not installed
2024-07-24 16:53:32,182:INFO:PyCaret optional dependencies:
2024-07-24 16:53:32,182:INFO:                shap: Not installed
2024-07-24 16:53:32,182:INFO:           interpret: Not installed
2024-07-24 16:53:32,182:INFO:                umap: Not installed
2024-07-24 16:53:32,182:INFO:     ydata_profiling: Not installed
2024-07-24 16:53:32,182:INFO:  explainerdashboard: Not installed
2024-07-24 16:53:32,182:INFO:             autoviz: Not installed
2024-07-24 16:53:32,182:INFO:           fairlearn: Not installed
2024-07-24 16:53:32,183:INFO:          deepchecks: Not installed
2024-07-24 16:53:32,183:INFO:             xgboost: Not installed
2024-07-24 16:53:32,183:INFO:            catboost: Not installed
2024-07-24 16:53:32,183:INFO:              kmodes: Not installed
2024-07-24 16:53:32,183:INFO:             mlxtend: Not installed
2024-07-24 16:53:32,183:INFO:       statsforecast: Not installed
2024-07-24 16:53:32,183:INFO:        tune_sklearn: Not installed
2024-07-24 16:53:32,183:INFO:                 ray: Not installed
2024-07-24 16:53:32,183:INFO:            hyperopt: Not installed
2024-07-24 16:53:32,183:INFO:              optuna: Not installed
2024-07-24 16:53:32,183:INFO:               skopt: Not installed
2024-07-24 16:53:32,183:INFO:              mlflow: Not installed
2024-07-24 16:53:32,183:INFO:              gradio: Not installed
2024-07-24 16:53:32,183:INFO:             fastapi: Not installed
2024-07-24 16:53:32,183:INFO:             uvicorn: Not installed
2024-07-24 16:53:32,183:INFO:              m2cgen: Not installed
2024-07-24 16:53:32,184:INFO:           evidently: Not installed
2024-07-24 16:53:32,184:INFO:               fugue: Not installed
2024-07-24 16:53:32,184:INFO:           streamlit: Not installed
2024-07-24 16:53:32,184:INFO:             prophet: Not installed
2024-07-24 16:53:32,184:INFO:None
2024-07-24 16:53:32,184:INFO:Set up data.
2024-07-24 16:53:32,196:INFO:Set up folding strategy.
2024-07-24 16:53:32,197:INFO:Set up train/test split.
2024-07-24 16:53:32,208:INFO:Set up index.
2024-07-24 16:53:32,208:INFO:Assigning column types.
2024-07-24 16:53:32,208:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:53:32,308:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:32,308:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:32,347:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,395:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:53:32,396:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:32,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,424:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:53:32,458:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:32,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,546:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:53:32,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,558:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:53:32,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:53:32,724:INFO:Preparing preprocessing pipeline...
2024-07-24 16:53:32,725:INFO:Set up simple imputation.
2024-07-24 16:53:32,731:INFO:Set up encoding of categorical features.
2024-07-24 16:53:32,731:INFO:Set up feature grouping.
2024-07-24 16:53:32,838:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:53:32,845:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                    transformer=OneHotEncoder(cols=['department',
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('group_features',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=GroupFeatures(drop_groups=False,
                                                              group_features=['satisfaction_level',
                                                                              'last_evaluation'])))],
         verbose=False)
2024-07-24 16:53:32,845:INFO:Creating final display dataframe.
2024-07-24 16:58:45,515:INFO:PyCaret ClassificationExperiment
2024-07-24 16:58:45,515:INFO:Logging name: clf-default-name
2024-07-24 16:58:45,516:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-24 16:58:45,516:INFO:version 3.3.2
2024-07-24 16:58:45,516:INFO:Initializing setup()
2024-07-24 16:58:45,516:INFO:self.USI: 324e
2024-07-24 16:58:45,516:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_n_jobs_param', 'data', 'X_test', 'memory', 'html_param', '_ml_usecase', 'log_plots_param', 'y_train', 'is_multiclass', 'X_train', '_available_plots', 'y', 'exp_id', 'exp_name_log', 'USI', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'target_param', 'y_test', 'seed', 'fold_groups_param', 'fold_generator', 'pipeline'}
2024-07-24 16:58:45,516:INFO:Checking environment
2024-07-24 16:58:45,516:INFO:python_version: 3.9.19
2024-07-24 16:58:45,516:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-24 16:58:45,516:INFO:machine: AMD64
2024-07-24 16:58:45,516:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-24 16:58:45,516:INFO:Memory: svmem(total=8387862528, available=1202966528, percent=85.7, used=7184896000, free=1202966528)
2024-07-24 16:58:45,517:INFO:Physical Core: 2
2024-07-24 16:58:45,517:INFO:Logical Core: 4
2024-07-24 16:58:45,517:INFO:Checking libraries
2024-07-24 16:58:45,517:INFO:System:
2024-07-24 16:58:45,517:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-24 16:58:45,517:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-24 16:58:45,517:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-24 16:58:45,517:INFO:PyCaret required dependencies:
2024-07-24 16:58:45,517:INFO:                 pip: 24.0
2024-07-24 16:58:45,517:INFO:          setuptools: 69.5.1
2024-07-24 16:58:45,517:INFO:             pycaret: 3.3.2
2024-07-24 16:58:45,517:INFO:             IPython: 8.18.1
2024-07-24 16:58:45,517:INFO:          ipywidgets: 8.1.3
2024-07-24 16:58:45,518:INFO:                tqdm: 4.66.4
2024-07-24 16:58:45,518:INFO:               numpy: 1.26.4
2024-07-24 16:58:45,518:INFO:              pandas: 2.1.4
2024-07-24 16:58:45,518:INFO:              jinja2: 3.1.4
2024-07-24 16:58:45,518:INFO:               scipy: 1.11.4
2024-07-24 16:58:45,518:INFO:              joblib: 1.3.2
2024-07-24 16:58:45,518:INFO:             sklearn: 1.4.2
2024-07-24 16:58:45,518:INFO:                pyod: 2.0.1
2024-07-24 16:58:45,518:INFO:            imblearn: 0.12.3
2024-07-24 16:58:45,518:INFO:   category_encoders: 2.6.3
2024-07-24 16:58:45,518:INFO:            lightgbm: 4.4.0
2024-07-24 16:58:45,518:INFO:               numba: 0.60.0
2024-07-24 16:58:45,518:INFO:            requests: 2.32.3
2024-07-24 16:58:45,518:INFO:          matplotlib: 3.7.5
2024-07-24 16:58:45,519:INFO:          scikitplot: 0.3.7
2024-07-24 16:58:45,519:INFO:         yellowbrick: 1.5
2024-07-24 16:58:45,519:INFO:              plotly: 5.23.0
2024-07-24 16:58:45,519:INFO:    plotly-resampler: Not installed
2024-07-24 16:58:45,519:INFO:             kaleido: 0.2.1
2024-07-24 16:58:45,519:INFO:           schemdraw: 0.15
2024-07-24 16:58:45,519:INFO:         statsmodels: 0.14.2
2024-07-24 16:58:45,519:INFO:              sktime: 0.26.0
2024-07-24 16:58:45,519:INFO:               tbats: 1.1.3
2024-07-24 16:58:45,519:INFO:            pmdarima: 2.0.4
2024-07-24 16:58:45,519:INFO:              psutil: 6.0.0
2024-07-24 16:58:45,519:INFO:          markupsafe: 2.1.5
2024-07-24 16:58:45,519:INFO:             pickle5: Not installed
2024-07-24 16:58:45,519:INFO:         cloudpickle: 3.0.0
2024-07-24 16:58:45,519:INFO:         deprecation: 2.1.0
2024-07-24 16:58:45,519:INFO:              xxhash: 3.4.1
2024-07-24 16:58:45,519:INFO:           wurlitzer: Not installed
2024-07-24 16:58:45,519:INFO:PyCaret optional dependencies:
2024-07-24 16:58:45,519:INFO:                shap: Not installed
2024-07-24 16:58:45,519:INFO:           interpret: Not installed
2024-07-24 16:58:45,519:INFO:                umap: Not installed
2024-07-24 16:58:45,519:INFO:     ydata_profiling: Not installed
2024-07-24 16:58:45,519:INFO:  explainerdashboard: Not installed
2024-07-24 16:58:45,519:INFO:             autoviz: Not installed
2024-07-24 16:58:45,519:INFO:           fairlearn: Not installed
2024-07-24 16:58:45,519:INFO:          deepchecks: Not installed
2024-07-24 16:58:45,519:INFO:             xgboost: Not installed
2024-07-24 16:58:45,519:INFO:            catboost: Not installed
2024-07-24 16:58:45,519:INFO:              kmodes: Not installed
2024-07-24 16:58:45,519:INFO:             mlxtend: Not installed
2024-07-24 16:58:45,522:INFO:       statsforecast: Not installed
2024-07-24 16:58:45,522:INFO:        tune_sklearn: Not installed
2024-07-24 16:58:45,522:INFO:                 ray: Not installed
2024-07-24 16:58:45,522:INFO:            hyperopt: Not installed
2024-07-24 16:58:45,522:INFO:              optuna: Not installed
2024-07-24 16:58:45,522:INFO:               skopt: Not installed
2024-07-24 16:58:45,522:INFO:              mlflow: Not installed
2024-07-24 16:58:45,522:INFO:              gradio: Not installed
2024-07-24 16:58:45,522:INFO:             fastapi: Not installed
2024-07-24 16:58:45,522:INFO:             uvicorn: Not installed
2024-07-24 16:58:45,522:INFO:              m2cgen: Not installed
2024-07-24 16:58:45,522:INFO:           evidently: Not installed
2024-07-24 16:58:45,522:INFO:               fugue: Not installed
2024-07-24 16:58:45,522:INFO:           streamlit: Not installed
2024-07-24 16:58:45,522:INFO:             prophet: Not installed
2024-07-24 16:58:45,522:INFO:None
2024-07-24 16:58:45,522:INFO:Set up data.
2024-07-24 16:58:45,537:INFO:Set up folding strategy.
2024-07-24 16:58:45,538:INFO:Set up train/test split.
2024-07-24 16:58:45,564:INFO:Set up index.
2024-07-24 16:58:45,564:INFO:Assigning column types.
2024-07-24 16:58:45,621:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 16:58:45,731:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:58:45,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:58:45,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:45,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,032:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 16:58:46,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:58:46,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,136:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 16:58:46,215:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:58:46,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,302:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-24 16:58:46,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,332:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-24 16:58:46,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,417:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:46,498:INFO:Preparing preprocessing pipeline...
2024-07-24 16:58:46,499:INFO:Set up simple imputation.
2024-07-24 16:58:46,502:INFO:Set up encoding of categorical features.
2024-07-24 16:58:46,502:INFO:Set up binning of numerical features.
2024-07-24 16:58:46,682:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2024-07-24 16:58:46,685:INFO:Finished creating preprocessing pipeline.
2024-07-24 16:58:46,701:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['satisfaction_level',
                                             'last_evaluation',
                                             'number_project',
                                             'average_montly_hours',
                                             'time_spend_company',
                                             'Work_accident',
                                             'promotion_last_5years'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                                                    'salary'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('bin_numeric_features',
                 TransformerWrapper(exclude=None,
                                    include=['average_montly_hours'],
                                    transformer=KBinsDiscretizer(dtype=None,
                                                                 encode='ordinal',
                                                                 n_bins=5,
                                                                 random_state=None,
                                                                 strategy='kmeans',
                                                                 subsample='warn')))],
         verbose=False)
2024-07-24 16:58:46,701:INFO:Creating final display dataframe.
2024-07-24 16:58:47,030:INFO:Setup _display_container:                     Description             Value
0                    Session id               741
1                        Target              left
2                   Target type            Binary
3           Original data shape       (14999, 10)
4        Transformed data shape       (14999, 21)
5   Transformed train set shape       (10499, 21)
6    Transformed test set shape        (4500, 21)
7              Numeric features                 7
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              324e
2024-07-24 16:58:47,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:47,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:47,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:47,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 16:58:47,283:INFO:setup() successfully completed in 1.79s...............
2024-07-25 15:49:15,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 15:49:15,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 15:49:15,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 15:49:15,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 15:49:18,150:INFO:PyCaret ClassificationExperiment
2024-07-25 15:49:18,151:INFO:Logging name: clf-default-name
2024-07-25 15:49:18,151:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:49:18,151:INFO:version 3.3.2
2024-07-25 15:49:18,151:INFO:Initializing setup()
2024-07-25 15:49:18,151:INFO:self.USI: 9df4
2024-07-25 15:49:18,151:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:49:18,151:INFO:Checking environment
2024-07-25 15:49:18,151:INFO:python_version: 3.9.19
2024-07-25 15:49:18,151:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:49:18,151:INFO:machine: AMD64
2024-07-25 15:49:18,151:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:49:18,151:INFO:Memory: svmem(total=8387862528, available=957603840, percent=88.6, used=7430258688, free=957603840)
2024-07-25 15:49:18,151:INFO:Physical Core: 2
2024-07-25 15:49:18,151:INFO:Logical Core: 4
2024-07-25 15:49:18,151:INFO:Checking libraries
2024-07-25 15:49:18,151:INFO:System:
2024-07-25 15:49:18,151:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:49:18,151:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:49:18,151:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:49:18,151:INFO:PyCaret required dependencies:
2024-07-25 15:49:18,267:INFO:                 pip: 24.0
2024-07-25 15:49:18,283:INFO:          setuptools: 69.5.1
2024-07-25 15:49:18,283:INFO:             pycaret: 3.3.2
2024-07-25 15:49:18,283:INFO:             IPython: 8.18.1
2024-07-25 15:49:18,283:INFO:          ipywidgets: 8.1.3
2024-07-25 15:49:18,283:INFO:                tqdm: 4.66.4
2024-07-25 15:49:18,283:INFO:               numpy: 1.26.4
2024-07-25 15:49:18,283:INFO:              pandas: 2.1.4
2024-07-25 15:49:18,283:INFO:              jinja2: 3.1.4
2024-07-25 15:49:18,283:INFO:               scipy: 1.11.4
2024-07-25 15:49:18,283:INFO:              joblib: 1.3.2
2024-07-25 15:49:18,283:INFO:             sklearn: 1.4.2
2024-07-25 15:49:18,283:INFO:                pyod: 2.0.1
2024-07-25 15:49:18,283:INFO:            imblearn: 0.12.3
2024-07-25 15:49:18,283:INFO:   category_encoders: 2.6.3
2024-07-25 15:49:18,283:INFO:            lightgbm: 4.4.0
2024-07-25 15:49:18,283:INFO:               numba: 0.60.0
2024-07-25 15:49:18,283:INFO:            requests: 2.32.3
2024-07-25 15:49:18,283:INFO:          matplotlib: 3.7.5
2024-07-25 15:49:18,283:INFO:          scikitplot: 0.3.7
2024-07-25 15:49:18,283:INFO:         yellowbrick: 1.5
2024-07-25 15:49:18,283:INFO:              plotly: 5.23.0
2024-07-25 15:49:18,283:INFO:    plotly-resampler: Not installed
2024-07-25 15:49:18,283:INFO:             kaleido: 0.2.1
2024-07-25 15:49:18,283:INFO:           schemdraw: 0.15
2024-07-25 15:49:18,283:INFO:         statsmodels: 0.14.2
2024-07-25 15:49:18,283:INFO:              sktime: 0.26.0
2024-07-25 15:49:18,283:INFO:               tbats: 1.1.3
2024-07-25 15:49:18,283:INFO:            pmdarima: 2.0.4
2024-07-25 15:49:18,283:INFO:              psutil: 6.0.0
2024-07-25 15:49:18,283:INFO:          markupsafe: 2.1.5
2024-07-25 15:49:18,283:INFO:             pickle5: Not installed
2024-07-25 15:49:18,283:INFO:         cloudpickle: 3.0.0
2024-07-25 15:49:18,283:INFO:         deprecation: 2.1.0
2024-07-25 15:49:18,283:INFO:              xxhash: 3.4.1
2024-07-25 15:49:18,283:INFO:           wurlitzer: Not installed
2024-07-25 15:49:18,283:INFO:PyCaret optional dependencies:
2024-07-25 15:49:18,314:INFO:                shap: Not installed
2024-07-25 15:49:18,314:INFO:           interpret: Not installed
2024-07-25 15:49:18,314:INFO:                umap: Not installed
2024-07-25 15:49:18,314:INFO:     ydata_profiling: Not installed
2024-07-25 15:49:18,314:INFO:  explainerdashboard: Not installed
2024-07-25 15:49:18,314:INFO:             autoviz: Not installed
2024-07-25 15:49:18,314:INFO:           fairlearn: Not installed
2024-07-25 15:49:18,314:INFO:          deepchecks: Not installed
2024-07-25 15:49:18,314:INFO:             xgboost: Not installed
2024-07-25 15:49:18,314:INFO:            catboost: Not installed
2024-07-25 15:49:18,314:INFO:              kmodes: Not installed
2024-07-25 15:49:18,314:INFO:             mlxtend: Not installed
2024-07-25 15:49:18,314:INFO:       statsforecast: Not installed
2024-07-25 15:49:18,314:INFO:        tune_sklearn: Not installed
2024-07-25 15:49:18,314:INFO:                 ray: Not installed
2024-07-25 15:49:18,314:INFO:            hyperopt: Not installed
2024-07-25 15:49:18,314:INFO:              optuna: Not installed
2024-07-25 15:49:18,314:INFO:               skopt: Not installed
2024-07-25 15:49:18,314:INFO:              mlflow: Not installed
2024-07-25 15:49:18,314:INFO:              gradio: Not installed
2024-07-25 15:49:18,314:INFO:             fastapi: Not installed
2024-07-25 15:49:18,314:INFO:             uvicorn: Not installed
2024-07-25 15:49:18,314:INFO:              m2cgen: Not installed
2024-07-25 15:49:18,314:INFO:           evidently: Not installed
2024-07-25 15:49:18,314:INFO:               fugue: Not installed
2024-07-25 15:49:18,314:INFO:           streamlit: Not installed
2024-07-25 15:49:18,314:INFO:             prophet: Not installed
2024-07-25 15:49:18,314:INFO:None
2024-07-25 15:49:18,314:INFO:Set up data.
2024-07-25 15:49:18,332:INFO:Set up folding strategy.
2024-07-25 15:49:18,332:INFO:Set up train/test split.
2024-07-25 15:49:18,347:INFO:Set up index.
2024-07-25 15:49:18,347:INFO:Assigning column types.
2024-07-25 15:49:18,363:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:49:18,476:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:49:18,492:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:49:18,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:49:18,598:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:49:18,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,629:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:49:18,683:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:49:18,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,783:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:49:18,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,814:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:49:18,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:18,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:19,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:19,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:19,015:INFO:Preparing preprocessing pipeline...
2024-07-25 15:49:19,029:INFO:Set up simple imputation.
2024-07-25 15:49:19,029:INFO:Set up column name cleaning.
2024-07-25 15:49:19,100:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:49:19,116:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:49:19,116:INFO:Creating final display dataframe.
2024-07-25 15:49:19,332:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              9df4
2024-07-25 15:49:19,498:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:19,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:19,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:19,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:49:19,592:INFO:setup() successfully completed in 1.6s...............
2024-07-25 15:49:19,592:INFO:Initializing compare_models()
2024-07-25 15:49:19,592:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 15:49:19,592:INFO:Checking exceptions
2024-07-25 15:49:19,611:INFO:Preparing display monitor
2024-07-25 15:49:19,705:INFO:Initializing Logistic Regression
2024-07-25 15:49:19,705:INFO:Total runtime is 0.0 minutes
2024-07-25 15:49:19,721:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:19,723:INFO:Initializing create_model()
2024-07-25 15:49:19,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:19,724:INFO:Checking exceptions
2024-07-25 15:49:19,724:INFO:Importing libraries
2024-07-25 15:49:19,724:INFO:Copying training dataset
2024-07-25 15:49:19,742:INFO:Defining folds
2024-07-25 15:49:19,742:INFO:Declaring metric variables
2024-07-25 15:49:19,749:INFO:Importing untrained model
2024-07-25 15:49:19,772:INFO:Logistic Regression Imported successfully
2024-07-25 15:49:19,826:INFO:Starting cross validation
2024-07-25 15:49:19,829:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:29,111:INFO:Calculating mean and std
2024-07-25 15:49:29,111:INFO:Creating metrics dataframe
2024-07-25 15:49:29,111:INFO:Uploading results into container
2024-07-25 15:49:29,111:INFO:Uploading model into container now
2024-07-25 15:49:29,111:INFO:_master_model_container: 1
2024-07-25 15:49:29,111:INFO:_display_container: 2
2024-07-25 15:49:29,127:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:49:29,127:INFO:create_model() successfully completed......................................
2024-07-25 15:49:29,213:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:29,213:INFO:Creating metrics dataframe
2024-07-25 15:49:29,229:INFO:Initializing K Neighbors Classifier
2024-07-25 15:49:29,229:INFO:Total runtime is 0.15872138738632202 minutes
2024-07-25 15:49:29,244:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:29,244:INFO:Initializing create_model()
2024-07-25 15:49:29,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:29,244:INFO:Checking exceptions
2024-07-25 15:49:29,244:INFO:Importing libraries
2024-07-25 15:49:29,244:INFO:Copying training dataset
2024-07-25 15:49:29,269:INFO:Defining folds
2024-07-25 15:49:29,270:INFO:Declaring metric variables
2024-07-25 15:49:29,286:INFO:Importing untrained model
2024-07-25 15:49:29,300:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:49:29,316:INFO:Starting cross validation
2024-07-25 15:49:29,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:30,086:INFO:Calculating mean and std
2024-07-25 15:49:30,086:INFO:Creating metrics dataframe
2024-07-25 15:49:30,086:INFO:Uploading results into container
2024-07-25 15:49:30,086:INFO:Uploading model into container now
2024-07-25 15:49:30,086:INFO:_master_model_container: 2
2024-07-25 15:49:30,099:INFO:_display_container: 2
2024-07-25 15:49:30,101:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:49:30,101:INFO:create_model() successfully completed......................................
2024-07-25 15:49:30,162:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:30,162:INFO:Creating metrics dataframe
2024-07-25 15:49:30,183:INFO:Initializing Naive Bayes
2024-07-25 15:49:30,199:INFO:Total runtime is 0.17489121754964193 minutes
2024-07-25 15:49:30,205:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:30,205:INFO:Initializing create_model()
2024-07-25 15:49:30,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:30,214:INFO:Checking exceptions
2024-07-25 15:49:30,215:INFO:Importing libraries
2024-07-25 15:49:30,215:INFO:Copying training dataset
2024-07-25 15:49:30,226:INFO:Defining folds
2024-07-25 15:49:30,226:INFO:Declaring metric variables
2024-07-25 15:49:30,239:INFO:Importing untrained model
2024-07-25 15:49:30,255:INFO:Naive Bayes Imported successfully
2024-07-25 15:49:30,285:INFO:Starting cross validation
2024-07-25 15:49:30,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:30,712:INFO:Calculating mean and std
2024-07-25 15:49:30,712:INFO:Creating metrics dataframe
2024-07-25 15:49:30,712:INFO:Uploading results into container
2024-07-25 15:49:30,712:INFO:Uploading model into container now
2024-07-25 15:49:30,712:INFO:_master_model_container: 3
2024-07-25 15:49:30,712:INFO:_display_container: 2
2024-07-25 15:49:30,728:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 15:49:30,731:INFO:create_model() successfully completed......................................
2024-07-25 15:49:30,795:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:30,795:INFO:Creating metrics dataframe
2024-07-25 15:49:30,826:INFO:Initializing Decision Tree Classifier
2024-07-25 15:49:30,826:INFO:Total runtime is 0.18534579674402873 minutes
2024-07-25 15:49:30,826:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:30,842:INFO:Initializing create_model()
2024-07-25 15:49:30,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:30,842:INFO:Checking exceptions
2024-07-25 15:49:30,842:INFO:Importing libraries
2024-07-25 15:49:30,842:INFO:Copying training dataset
2024-07-25 15:49:30,864:INFO:Defining folds
2024-07-25 15:49:30,865:INFO:Declaring metric variables
2024-07-25 15:49:30,883:INFO:Importing untrained model
2024-07-25 15:49:30,897:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:49:30,918:INFO:Starting cross validation
2024-07-25 15:49:30,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:31,386:INFO:Calculating mean and std
2024-07-25 15:49:31,386:INFO:Creating metrics dataframe
2024-07-25 15:49:31,386:INFO:Uploading results into container
2024-07-25 15:49:31,402:INFO:Uploading model into container now
2024-07-25 15:49:31,405:INFO:_master_model_container: 4
2024-07-25 15:49:31,406:INFO:_display_container: 2
2024-07-25 15:49:31,406:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:49:31,406:INFO:create_model() successfully completed......................................
2024-07-25 15:49:31,485:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:31,485:INFO:Creating metrics dataframe
2024-07-25 15:49:31,500:INFO:Initializing SVM - Linear Kernel
2024-07-25 15:49:31,500:INFO:Total runtime is 0.19658503532409669 minutes
2024-07-25 15:49:31,516:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:31,516:INFO:Initializing create_model()
2024-07-25 15:49:31,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:31,516:INFO:Checking exceptions
2024-07-25 15:49:31,516:INFO:Importing libraries
2024-07-25 15:49:31,516:INFO:Copying training dataset
2024-07-25 15:49:31,536:INFO:Defining folds
2024-07-25 15:49:31,536:INFO:Declaring metric variables
2024-07-25 15:49:31,549:INFO:Importing untrained model
2024-07-25 15:49:31,563:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 15:49:31,587:INFO:Starting cross validation
2024-07-25 15:49:31,596:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:32,053:INFO:Calculating mean and std
2024-07-25 15:49:32,053:INFO:Creating metrics dataframe
2024-07-25 15:49:32,053:INFO:Uploading results into container
2024-07-25 15:49:32,053:INFO:Uploading model into container now
2024-07-25 15:49:32,066:INFO:_master_model_container: 5
2024-07-25 15:49:32,066:INFO:_display_container: 2
2024-07-25 15:49:32,066:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1234, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 15:49:32,066:INFO:create_model() successfully completed......................................
2024-07-25 15:49:32,135:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:32,135:INFO:Creating metrics dataframe
2024-07-25 15:49:32,167:INFO:Initializing Ridge Classifier
2024-07-25 15:49:32,167:INFO:Total runtime is 0.2076858401298523 minutes
2024-07-25 15:49:32,182:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:32,182:INFO:Initializing create_model()
2024-07-25 15:49:32,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:32,182:INFO:Checking exceptions
2024-07-25 15:49:32,182:INFO:Importing libraries
2024-07-25 15:49:32,182:INFO:Copying training dataset
2024-07-25 15:49:32,204:INFO:Defining folds
2024-07-25 15:49:32,205:INFO:Declaring metric variables
2024-07-25 15:49:32,223:INFO:Importing untrained model
2024-07-25 15:49:32,237:INFO:Ridge Classifier Imported successfully
2024-07-25 15:49:32,262:INFO:Starting cross validation
2024-07-25 15:49:32,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:32,732:INFO:Calculating mean and std
2024-07-25 15:49:32,732:INFO:Creating metrics dataframe
2024-07-25 15:49:32,732:INFO:Uploading results into container
2024-07-25 15:49:32,732:INFO:Uploading model into container now
2024-07-25 15:49:32,732:INFO:_master_model_container: 6
2024-07-25 15:49:32,732:INFO:_display_container: 2
2024-07-25 15:49:32,745:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:49:32,745:INFO:create_model() successfully completed......................................
2024-07-25 15:49:32,809:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:32,809:INFO:Creating metrics dataframe
2024-07-25 15:49:32,834:INFO:Initializing Random Forest Classifier
2024-07-25 15:49:32,834:INFO:Total runtime is 0.21880811055501304 minutes
2024-07-25 15:49:32,850:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:32,850:INFO:Initializing create_model()
2024-07-25 15:49:32,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:32,850:INFO:Checking exceptions
2024-07-25 15:49:32,850:INFO:Importing libraries
2024-07-25 15:49:32,850:INFO:Copying training dataset
2024-07-25 15:49:32,884:INFO:Defining folds
2024-07-25 15:49:32,885:INFO:Declaring metric variables
2024-07-25 15:49:32,898:INFO:Importing untrained model
2024-07-25 15:49:32,912:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:49:32,998:INFO:Starting cross validation
2024-07-25 15:49:33,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:36,191:INFO:Calculating mean and std
2024-07-25 15:49:36,191:INFO:Creating metrics dataframe
2024-07-25 15:49:36,191:INFO:Uploading results into container
2024-07-25 15:49:36,191:INFO:Uploading model into container now
2024-07-25 15:49:36,191:INFO:_master_model_container: 7
2024-07-25 15:49:36,191:INFO:_display_container: 2
2024-07-25 15:49:36,204:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:49:36,204:INFO:create_model() successfully completed......................................
2024-07-25 15:49:36,275:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:36,275:INFO:Creating metrics dataframe
2024-07-25 15:49:36,309:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 15:49:36,310:INFO:Total runtime is 0.27675029436747234 minutes
2024-07-25 15:49:36,319:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:36,320:INFO:Initializing create_model()
2024-07-25 15:49:36,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:36,321:INFO:Checking exceptions
2024-07-25 15:49:36,321:INFO:Importing libraries
2024-07-25 15:49:36,322:INFO:Copying training dataset
2024-07-25 15:49:36,338:INFO:Defining folds
2024-07-25 15:49:36,339:INFO:Declaring metric variables
2024-07-25 15:49:36,342:INFO:Importing untrained model
2024-07-25 15:49:36,367:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 15:49:36,389:INFO:Starting cross validation
2024-07-25 15:49:36,395:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:36,807:INFO:Calculating mean and std
2024-07-25 15:49:36,810:INFO:Creating metrics dataframe
2024-07-25 15:49:36,816:INFO:Uploading results into container
2024-07-25 15:49:36,817:INFO:Uploading model into container now
2024-07-25 15:49:36,818:INFO:_master_model_container: 8
2024-07-25 15:49:36,818:INFO:_display_container: 2
2024-07-25 15:49:36,820:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 15:49:36,820:INFO:create_model() successfully completed......................................
2024-07-25 15:49:36,894:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:36,894:INFO:Creating metrics dataframe
2024-07-25 15:49:36,924:INFO:Initializing Ada Boost Classifier
2024-07-25 15:49:36,924:INFO:Total runtime is 0.2869738578796387 minutes
2024-07-25 15:49:36,924:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:36,924:INFO:Initializing create_model()
2024-07-25 15:49:36,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:36,924:INFO:Checking exceptions
2024-07-25 15:49:36,939:INFO:Importing libraries
2024-07-25 15:49:36,939:INFO:Copying training dataset
2024-07-25 15:49:36,940:INFO:Defining folds
2024-07-25 15:49:36,940:INFO:Declaring metric variables
2024-07-25 15:49:36,964:INFO:Importing untrained model
2024-07-25 15:49:36,979:INFO:Ada Boost Classifier Imported successfully
2024-07-25 15:49:37,007:INFO:Starting cross validation
2024-07-25 15:49:37,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:37,096:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:37,096:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:37,096:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:37,110:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:37,706:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:37,730:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:37,740:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:37,756:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:38,390:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:38,406:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:49:38,805:INFO:Calculating mean and std
2024-07-25 15:49:38,805:INFO:Creating metrics dataframe
2024-07-25 15:49:38,805:INFO:Uploading results into container
2024-07-25 15:49:38,805:INFO:Uploading model into container now
2024-07-25 15:49:38,805:INFO:_master_model_container: 9
2024-07-25 15:49:38,805:INFO:_display_container: 2
2024-07-25 15:49:38,817:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1234)
2024-07-25 15:49:38,817:INFO:create_model() successfully completed......................................
2024-07-25 15:49:38,895:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:38,896:INFO:Creating metrics dataframe
2024-07-25 15:49:38,922:INFO:Initializing Gradient Boosting Classifier
2024-07-25 15:49:38,922:INFO:Total runtime is 0.3202820142110189 minutes
2024-07-25 15:49:38,938:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:38,938:INFO:Initializing create_model()
2024-07-25 15:49:38,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:38,938:INFO:Checking exceptions
2024-07-25 15:49:38,938:INFO:Importing libraries
2024-07-25 15:49:38,938:INFO:Copying training dataset
2024-07-25 15:49:38,960:INFO:Defining folds
2024-07-25 15:49:38,961:INFO:Declaring metric variables
2024-07-25 15:49:38,972:INFO:Importing untrained model
2024-07-25 15:49:38,990:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 15:49:39,014:INFO:Starting cross validation
2024-07-25 15:49:39,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:41,053:INFO:Calculating mean and std
2024-07-25 15:49:41,053:INFO:Creating metrics dataframe
2024-07-25 15:49:41,053:INFO:Uploading results into container
2024-07-25 15:49:41,053:INFO:Uploading model into container now
2024-07-25 15:49:41,053:INFO:_master_model_container: 10
2024-07-25 15:49:41,053:INFO:_display_container: 2
2024-07-25 15:49:41,069:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1234, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 15:49:41,070:INFO:create_model() successfully completed......................................
2024-07-25 15:49:41,140:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:41,140:INFO:Creating metrics dataframe
2024-07-25 15:49:41,173:INFO:Initializing Linear Discriminant Analysis
2024-07-25 15:49:41,173:INFO:Total runtime is 0.35780005852381386 minutes
2024-07-25 15:49:41,186:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:41,186:INFO:Initializing create_model()
2024-07-25 15:49:41,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:41,186:INFO:Checking exceptions
2024-07-25 15:49:41,186:INFO:Importing libraries
2024-07-25 15:49:41,186:INFO:Copying training dataset
2024-07-25 15:49:41,203:INFO:Defining folds
2024-07-25 15:49:41,203:INFO:Declaring metric variables
2024-07-25 15:49:41,218:INFO:Importing untrained model
2024-07-25 15:49:41,222:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:49:41,262:INFO:Starting cross validation
2024-07-25 15:49:41,265:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:41,686:INFO:Calculating mean and std
2024-07-25 15:49:41,691:INFO:Creating metrics dataframe
2024-07-25 15:49:41,702:INFO:Uploading results into container
2024-07-25 15:49:41,703:INFO:Uploading model into container now
2024-07-25 15:49:41,703:INFO:_master_model_container: 11
2024-07-25 15:49:41,703:INFO:_display_container: 2
2024-07-25 15:49:41,703:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 15:49:41,703:INFO:create_model() successfully completed......................................
2024-07-25 15:49:41,781:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:41,781:INFO:Creating metrics dataframe
2024-07-25 15:49:41,823:INFO:Initializing Extra Trees Classifier
2024-07-25 15:49:41,823:INFO:Total runtime is 0.36862786213556925 minutes
2024-07-25 15:49:41,823:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:41,839:INFO:Initializing create_model()
2024-07-25 15:49:41,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:41,839:INFO:Checking exceptions
2024-07-25 15:49:41,839:INFO:Importing libraries
2024-07-25 15:49:41,839:INFO:Copying training dataset
2024-07-25 15:49:41,839:INFO:Defining folds
2024-07-25 15:49:41,839:INFO:Declaring metric variables
2024-07-25 15:49:41,865:INFO:Importing untrained model
2024-07-25 15:49:41,882:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:49:41,909:INFO:Starting cross validation
2024-07-25 15:49:41,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:44,749:INFO:Calculating mean and std
2024-07-25 15:49:44,754:INFO:Creating metrics dataframe
2024-07-25 15:49:44,754:INFO:Uploading results into container
2024-07-25 15:49:44,754:INFO:Uploading model into container now
2024-07-25 15:49:44,754:INFO:_master_model_container: 12
2024-07-25 15:49:44,754:INFO:_display_container: 2
2024-07-25 15:49:44,767:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-07-25 15:49:44,767:INFO:create_model() successfully completed......................................
2024-07-25 15:49:44,849:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:44,849:INFO:Creating metrics dataframe
2024-07-25 15:49:44,884:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 15:49:44,884:INFO:Total runtime is 0.4196352601051331 minutes
2024-07-25 15:49:44,901:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:44,903:INFO:Initializing create_model()
2024-07-25 15:49:44,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:44,903:INFO:Checking exceptions
2024-07-25 15:49:44,903:INFO:Importing libraries
2024-07-25 15:49:44,903:INFO:Copying training dataset
2024-07-25 15:49:44,922:INFO:Defining folds
2024-07-25 15:49:44,923:INFO:Declaring metric variables
2024-07-25 15:49:44,943:INFO:Importing untrained model
2024-07-25 15:49:44,958:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 15:49:45,023:INFO:Starting cross validation
2024-07-25 15:49:45,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:46,320:INFO:Calculating mean and std
2024-07-25 15:49:46,320:INFO:Creating metrics dataframe
2024-07-25 15:49:46,320:INFO:Uploading results into container
2024-07-25 15:49:46,320:INFO:Uploading model into container now
2024-07-25 15:49:46,320:INFO:_master_model_container: 13
2024-07-25 15:49:46,320:INFO:_display_container: 2
2024-07-25 15:49:46,337:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1234, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 15:49:46,337:INFO:create_model() successfully completed......................................
2024-07-25 15:49:46,415:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:46,415:INFO:Creating metrics dataframe
2024-07-25 15:49:46,464:INFO:Initializing Dummy Classifier
2024-07-25 15:49:46,464:INFO:Total runtime is 0.44596870740254724 minutes
2024-07-25 15:49:46,480:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:46,480:INFO:Initializing create_model()
2024-07-25 15:49:46,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:46,480:INFO:Checking exceptions
2024-07-25 15:49:46,480:INFO:Importing libraries
2024-07-25 15:49:46,480:INFO:Copying training dataset
2024-07-25 15:49:46,503:INFO:Defining folds
2024-07-25 15:49:46,503:INFO:Declaring metric variables
2024-07-25 15:49:46,518:INFO:Importing untrained model
2024-07-25 15:49:46,533:INFO:Dummy Classifier Imported successfully
2024-07-25 15:49:46,564:INFO:Starting cross validation
2024-07-25 15:49:46,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:46,741:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:49:46,741:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:49:46,896:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:49:46,912:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:49:46,912:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:49:46,912:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:49:47,016:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:49:47,016:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:49:47,053:INFO:Calculating mean and std
2024-07-25 15:49:47,053:INFO:Creating metrics dataframe
2024-07-25 15:49:47,064:INFO:Uploading results into container
2024-07-25 15:49:47,065:INFO:Uploading model into container now
2024-07-25 15:49:47,067:INFO:_master_model_container: 14
2024-07-25 15:49:47,067:INFO:_display_container: 2
2024-07-25 15:49:47,068:INFO:DummyClassifier(constant=None, random_state=1234, strategy='prior')
2024-07-25 15:49:47,068:INFO:create_model() successfully completed......................................
2024-07-25 15:49:47,145:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:47,145:INFO:Creating metrics dataframe
2024-07-25 15:49:47,209:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 15:49:47,230:INFO:Initializing create_model()
2024-07-25 15:49:47,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:47,230:INFO:Checking exceptions
2024-07-25 15:49:47,230:INFO:Importing libraries
2024-07-25 15:49:47,230:INFO:Copying training dataset
2024-07-25 15:49:47,259:INFO:Defining folds
2024-07-25 15:49:47,259:INFO:Declaring metric variables
2024-07-25 15:49:47,259:INFO:Importing untrained model
2024-07-25 15:49:47,262:INFO:Declaring custom model
2024-07-25 15:49:47,264:INFO:Ridge Classifier Imported successfully
2024-07-25 15:49:47,270:INFO:Cross validation set to False
2024-07-25 15:49:47,271:INFO:Fitting Model
2024-07-25 15:49:47,296:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:49:47,296:INFO:create_model() successfully completed......................................
2024-07-25 15:49:47,497:INFO:_master_model_container: 14
2024-07-25 15:49:47,497:INFO:_display_container: 2
2024-07-25 15:49:47,499:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:49:47,499:INFO:compare_models() successfully completed......................................
2024-07-25 15:49:52,778:INFO:Initializing compare_models()
2024-07-25 15:49:52,778:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 15:49:52,778:INFO:Checking exceptions
2024-07-25 15:49:52,782:INFO:Preparing display monitor
2024-07-25 15:49:52,907:INFO:Initializing Logistic Regression
2024-07-25 15:49:52,907:INFO:Total runtime is 0.0 minutes
2024-07-25 15:49:52,927:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:52,944:INFO:Initializing create_model()
2024-07-25 15:49:52,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:52,944:INFO:Checking exceptions
2024-07-25 15:49:52,945:INFO:Importing libraries
2024-07-25 15:49:52,945:INFO:Copying training dataset
2024-07-25 15:49:52,957:INFO:Defining folds
2024-07-25 15:49:52,957:INFO:Declaring metric variables
2024-07-25 15:49:52,974:INFO:Importing untrained model
2024-07-25 15:49:53,003:INFO:Logistic Regression Imported successfully
2024-07-25 15:49:53,028:INFO:Starting cross validation
2024-07-25 15:49:53,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:53,973:INFO:Calculating mean and std
2024-07-25 15:49:53,973:INFO:Creating metrics dataframe
2024-07-25 15:49:53,973:INFO:Uploading results into container
2024-07-25 15:49:53,973:INFO:Uploading model into container now
2024-07-25 15:49:53,973:INFO:_master_model_container: 15
2024-07-25 15:49:53,973:INFO:_display_container: 3
2024-07-25 15:49:53,984:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:49:53,984:INFO:create_model() successfully completed......................................
2024-07-25 15:49:54,072:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:54,072:INFO:Creating metrics dataframe
2024-07-25 15:49:54,089:INFO:Initializing K Neighbors Classifier
2024-07-25 15:49:54,089:INFO:Total runtime is 0.019706443945566813 minutes
2024-07-25 15:49:54,106:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:54,106:INFO:Initializing create_model()
2024-07-25 15:49:54,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:54,106:INFO:Checking exceptions
2024-07-25 15:49:54,106:INFO:Importing libraries
2024-07-25 15:49:54,106:INFO:Copying training dataset
2024-07-25 15:49:54,129:INFO:Defining folds
2024-07-25 15:49:54,131:INFO:Declaring metric variables
2024-07-25 15:49:54,161:INFO:Importing untrained model
2024-07-25 15:49:54,172:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:49:54,196:INFO:Starting cross validation
2024-07-25 15:49:54,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:54,821:INFO:Calculating mean and std
2024-07-25 15:49:54,821:INFO:Creating metrics dataframe
2024-07-25 15:49:54,836:INFO:Uploading results into container
2024-07-25 15:49:54,836:INFO:Uploading model into container now
2024-07-25 15:49:54,836:INFO:_master_model_container: 16
2024-07-25 15:49:54,836:INFO:_display_container: 3
2024-07-25 15:49:54,836:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:49:54,836:INFO:create_model() successfully completed......................................
2024-07-25 15:49:54,904:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:54,904:INFO:Creating metrics dataframe
2024-07-25 15:49:54,938:INFO:Initializing Naive Bayes
2024-07-25 15:49:54,938:INFO:Total runtime is 0.03384600877761841 minutes
2024-07-25 15:49:54,938:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:54,938:INFO:Initializing create_model()
2024-07-25 15:49:54,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:54,938:INFO:Checking exceptions
2024-07-25 15:49:54,938:INFO:Importing libraries
2024-07-25 15:49:54,938:INFO:Copying training dataset
2024-07-25 15:49:54,953:INFO:Defining folds
2024-07-25 15:49:54,953:INFO:Declaring metric variables
2024-07-25 15:49:54,966:INFO:Importing untrained model
2024-07-25 15:49:54,984:INFO:Naive Bayes Imported successfully
2024-07-25 15:49:55,010:INFO:Starting cross validation
2024-07-25 15:49:55,010:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:55,340:INFO:Calculating mean and std
2024-07-25 15:49:55,340:INFO:Creating metrics dataframe
2024-07-25 15:49:55,340:INFO:Uploading results into container
2024-07-25 15:49:55,340:INFO:Uploading model into container now
2024-07-25 15:49:55,340:INFO:_master_model_container: 17
2024-07-25 15:49:55,340:INFO:_display_container: 3
2024-07-25 15:49:55,340:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 15:49:55,340:INFO:create_model() successfully completed......................................
2024-07-25 15:49:55,439:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:55,439:INFO:Creating metrics dataframe
2024-07-25 15:49:55,454:INFO:Initializing Decision Tree Classifier
2024-07-25 15:49:55,454:INFO:Total runtime is 0.04245477120081584 minutes
2024-07-25 15:49:55,454:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:55,454:INFO:Initializing create_model()
2024-07-25 15:49:55,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:55,454:INFO:Checking exceptions
2024-07-25 15:49:55,454:INFO:Importing libraries
2024-07-25 15:49:55,454:INFO:Copying training dataset
2024-07-25 15:49:55,470:INFO:Defining folds
2024-07-25 15:49:55,470:INFO:Declaring metric variables
2024-07-25 15:49:55,485:INFO:Importing untrained model
2024-07-25 15:49:55,497:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:49:55,524:INFO:Starting cross validation
2024-07-25 15:49:55,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:55,873:INFO:Calculating mean and std
2024-07-25 15:49:55,873:INFO:Creating metrics dataframe
2024-07-25 15:49:55,873:INFO:Uploading results into container
2024-07-25 15:49:55,873:INFO:Uploading model into container now
2024-07-25 15:49:55,884:INFO:_master_model_container: 18
2024-07-25 15:49:55,884:INFO:_display_container: 3
2024-07-25 15:49:55,888:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:49:55,889:INFO:create_model() successfully completed......................................
2024-07-25 15:49:55,955:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:55,955:INFO:Creating metrics dataframe
2024-07-25 15:49:55,970:INFO:Initializing SVM - Linear Kernel
2024-07-25 15:49:55,970:INFO:Total runtime is 0.051060156027475996 minutes
2024-07-25 15:49:55,986:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:55,986:INFO:Initializing create_model()
2024-07-25 15:49:55,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:55,986:INFO:Checking exceptions
2024-07-25 15:49:55,986:INFO:Importing libraries
2024-07-25 15:49:55,986:INFO:Copying training dataset
2024-07-25 15:49:56,011:INFO:Defining folds
2024-07-25 15:49:56,011:INFO:Declaring metric variables
2024-07-25 15:49:56,021:INFO:Importing untrained model
2024-07-25 15:49:56,030:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 15:49:56,039:INFO:Starting cross validation
2024-07-25 15:49:56,053:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:56,407:INFO:Calculating mean and std
2024-07-25 15:49:56,407:INFO:Creating metrics dataframe
2024-07-25 15:49:56,407:INFO:Uploading results into container
2024-07-25 15:49:56,407:INFO:Uploading model into container now
2024-07-25 15:49:56,407:INFO:_master_model_container: 19
2024-07-25 15:49:56,407:INFO:_display_container: 3
2024-07-25 15:49:56,420:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1234, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 15:49:56,420:INFO:create_model() successfully completed......................................
2024-07-25 15:49:56,485:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:56,485:INFO:Creating metrics dataframe
2024-07-25 15:49:56,516:INFO:Initializing Ridge Classifier
2024-07-25 15:49:56,516:INFO:Total runtime is 0.060159699122111006 minutes
2024-07-25 15:49:56,516:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:56,516:INFO:Initializing create_model()
2024-07-25 15:49:56,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:56,516:INFO:Checking exceptions
2024-07-25 15:49:56,516:INFO:Importing libraries
2024-07-25 15:49:56,516:INFO:Copying training dataset
2024-07-25 15:49:56,532:INFO:Defining folds
2024-07-25 15:49:56,532:INFO:Declaring metric variables
2024-07-25 15:49:56,551:INFO:Importing untrained model
2024-07-25 15:49:56,607:INFO:Ridge Classifier Imported successfully
2024-07-25 15:49:56,696:INFO:Starting cross validation
2024-07-25 15:49:56,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:49:57,304:INFO:Calculating mean and std
2024-07-25 15:49:57,304:INFO:Creating metrics dataframe
2024-07-25 15:49:57,322:INFO:Uploading results into container
2024-07-25 15:49:57,326:INFO:Uploading model into container now
2024-07-25 15:49:57,329:INFO:_master_model_container: 20
2024-07-25 15:49:57,329:INFO:_display_container: 3
2024-07-25 15:49:57,329:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:49:57,329:INFO:create_model() successfully completed......................................
2024-07-25 15:49:57,404:INFO:SubProcess create_model() end ==================================
2024-07-25 15:49:57,404:INFO:Creating metrics dataframe
2024-07-25 15:49:57,439:INFO:Initializing Random Forest Classifier
2024-07-25 15:49:57,439:INFO:Total runtime is 0.0755337635676066 minutes
2024-07-25 15:49:57,455:INFO:SubProcess create_model() called ==================================
2024-07-25 15:49:57,455:INFO:Initializing create_model()
2024-07-25 15:49:57,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:49:57,455:INFO:Checking exceptions
2024-07-25 15:49:57,455:INFO:Importing libraries
2024-07-25 15:49:57,455:INFO:Copying training dataset
2024-07-25 15:49:57,455:INFO:Defining folds
2024-07-25 15:49:57,455:INFO:Declaring metric variables
2024-07-25 15:49:57,482:INFO:Importing untrained model
2024-07-25 15:49:57,493:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:49:57,527:INFO:Starting cross validation
2024-07-25 15:49:57,527:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:00,716:INFO:Calculating mean and std
2024-07-25 15:50:00,718:INFO:Creating metrics dataframe
2024-07-25 15:50:00,718:INFO:Uploading results into container
2024-07-25 15:50:00,718:INFO:Uploading model into container now
2024-07-25 15:50:00,729:INFO:_master_model_container: 21
2024-07-25 15:50:00,731:INFO:_display_container: 3
2024-07-25 15:50:00,736:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:50:00,736:INFO:create_model() successfully completed......................................
2024-07-25 15:50:00,818:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:00,818:INFO:Creating metrics dataframe
2024-07-25 15:50:00,838:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 15:50:00,838:INFO:Total runtime is 0.13218822081883747 minutes
2024-07-25 15:50:00,854:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:00,854:INFO:Initializing create_model()
2024-07-25 15:50:00,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:00,854:INFO:Checking exceptions
2024-07-25 15:50:00,854:INFO:Importing libraries
2024-07-25 15:50:00,854:INFO:Copying training dataset
2024-07-25 15:50:00,869:INFO:Defining folds
2024-07-25 15:50:00,869:INFO:Declaring metric variables
2024-07-25 15:50:00,886:INFO:Importing untrained model
2024-07-25 15:50:00,901:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 15:50:00,924:INFO:Starting cross validation
2024-07-25 15:50:00,937:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:01,371:INFO:Calculating mean and std
2024-07-25 15:50:01,371:INFO:Creating metrics dataframe
2024-07-25 15:50:01,371:INFO:Uploading results into container
2024-07-25 15:50:01,371:INFO:Uploading model into container now
2024-07-25 15:50:01,371:INFO:_master_model_container: 22
2024-07-25 15:50:01,371:INFO:_display_container: 3
2024-07-25 15:50:01,371:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 15:50:01,371:INFO:create_model() successfully completed......................................
2024-07-25 15:50:01,451:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:01,451:INFO:Creating metrics dataframe
2024-07-25 15:50:01,486:INFO:Initializing Ada Boost Classifier
2024-07-25 15:50:01,486:INFO:Total runtime is 0.1429851690928141 minutes
2024-07-25 15:50:01,502:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:01,502:INFO:Initializing create_model()
2024-07-25 15:50:01,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:01,502:INFO:Checking exceptions
2024-07-25 15:50:01,502:INFO:Importing libraries
2024-07-25 15:50:01,502:INFO:Copying training dataset
2024-07-25 15:50:01,502:INFO:Defining folds
2024-07-25 15:50:01,502:INFO:Declaring metric variables
2024-07-25 15:50:01,533:INFO:Importing untrained model
2024-07-25 15:50:01,540:INFO:Ada Boost Classifier Imported successfully
2024-07-25 15:50:01,572:INFO:Starting cross validation
2024-07-25 15:50:01,572:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:01,648:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:01,648:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:01,648:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:01,684:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:02,259:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:02,259:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:02,326:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:02,341:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:02,950:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:03,001:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:03,657:INFO:Calculating mean and std
2024-07-25 15:50:03,657:INFO:Creating metrics dataframe
2024-07-25 15:50:03,674:INFO:Uploading results into container
2024-07-25 15:50:03,674:INFO:Uploading model into container now
2024-07-25 15:50:03,674:INFO:_master_model_container: 23
2024-07-25 15:50:03,674:INFO:_display_container: 3
2024-07-25 15:50:03,674:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1234)
2024-07-25 15:50:03,674:INFO:create_model() successfully completed......................................
2024-07-25 15:50:03,778:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:03,778:INFO:Creating metrics dataframe
2024-07-25 15:50:03,817:INFO:Initializing Gradient Boosting Classifier
2024-07-25 15:50:03,817:INFO:Total runtime is 0.18183998664220172 minutes
2024-07-25 15:50:03,817:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:03,817:INFO:Initializing create_model()
2024-07-25 15:50:03,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:03,817:INFO:Checking exceptions
2024-07-25 15:50:03,817:INFO:Importing libraries
2024-07-25 15:50:03,817:INFO:Copying training dataset
2024-07-25 15:50:03,833:INFO:Defining folds
2024-07-25 15:50:03,833:INFO:Declaring metric variables
2024-07-25 15:50:03,856:INFO:Importing untrained model
2024-07-25 15:50:03,902:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 15:50:03,977:INFO:Starting cross validation
2024-07-25 15:50:03,977:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:06,086:INFO:Calculating mean and std
2024-07-25 15:50:06,086:INFO:Creating metrics dataframe
2024-07-25 15:50:06,086:INFO:Uploading results into container
2024-07-25 15:50:06,086:INFO:Uploading model into container now
2024-07-25 15:50:06,086:INFO:_master_model_container: 24
2024-07-25 15:50:06,086:INFO:_display_container: 3
2024-07-25 15:50:06,086:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1234, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 15:50:06,086:INFO:create_model() successfully completed......................................
2024-07-25 15:50:06,182:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:06,182:INFO:Creating metrics dataframe
2024-07-25 15:50:06,209:INFO:Initializing Linear Discriminant Analysis
2024-07-25 15:50:06,209:INFO:Total runtime is 0.2217079718907674 minutes
2024-07-25 15:50:06,234:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:06,234:INFO:Initializing create_model()
2024-07-25 15:50:06,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:06,234:INFO:Checking exceptions
2024-07-25 15:50:06,234:INFO:Importing libraries
2024-07-25 15:50:06,234:INFO:Copying training dataset
2024-07-25 15:50:06,243:INFO:Defining folds
2024-07-25 15:50:06,243:INFO:Declaring metric variables
2024-07-25 15:50:06,271:INFO:Importing untrained model
2024-07-25 15:50:06,285:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:50:06,311:INFO:Starting cross validation
2024-07-25 15:50:06,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:06,799:INFO:Calculating mean and std
2024-07-25 15:50:06,799:INFO:Creating metrics dataframe
2024-07-25 15:50:06,799:INFO:Uploading results into container
2024-07-25 15:50:06,815:INFO:Uploading model into container now
2024-07-25 15:50:06,815:INFO:_master_model_container: 25
2024-07-25 15:50:06,815:INFO:_display_container: 3
2024-07-25 15:50:06,815:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 15:50:06,815:INFO:create_model() successfully completed......................................
2024-07-25 15:50:06,892:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:06,892:INFO:Creating metrics dataframe
2024-07-25 15:50:06,925:INFO:Initializing Extra Trees Classifier
2024-07-25 15:50:06,925:INFO:Total runtime is 0.2336394190788269 minutes
2024-07-25 15:50:06,941:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:06,941:INFO:Initializing create_model()
2024-07-25 15:50:06,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:06,941:INFO:Checking exceptions
2024-07-25 15:50:06,941:INFO:Importing libraries
2024-07-25 15:50:06,941:INFO:Copying training dataset
2024-07-25 15:50:06,956:INFO:Defining folds
2024-07-25 15:50:06,956:INFO:Declaring metric variables
2024-07-25 15:50:06,982:INFO:Importing untrained model
2024-07-25 15:50:07,000:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:50:07,029:INFO:Starting cross validation
2024-07-25 15:50:07,029:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:10,145:INFO:Calculating mean and std
2024-07-25 15:50:10,145:INFO:Creating metrics dataframe
2024-07-25 15:50:10,145:INFO:Uploading results into container
2024-07-25 15:50:10,145:INFO:Uploading model into container now
2024-07-25 15:50:10,145:INFO:_master_model_container: 26
2024-07-25 15:50:10,145:INFO:_display_container: 3
2024-07-25 15:50:10,162:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-07-25 15:50:10,163:INFO:create_model() successfully completed......................................
2024-07-25 15:50:10,238:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:10,238:INFO:Creating metrics dataframe
2024-07-25 15:50:10,279:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 15:50:10,279:INFO:Total runtime is 0.2895394921302795 minutes
2024-07-25 15:50:10,295:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:10,295:INFO:Initializing create_model()
2024-07-25 15:50:10,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:10,295:INFO:Checking exceptions
2024-07-25 15:50:10,295:INFO:Importing libraries
2024-07-25 15:50:10,295:INFO:Copying training dataset
2024-07-25 15:50:10,314:INFO:Defining folds
2024-07-25 15:50:10,314:INFO:Declaring metric variables
2024-07-25 15:50:10,325:INFO:Importing untrained model
2024-07-25 15:50:10,340:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 15:50:10,382:INFO:Starting cross validation
2024-07-25 15:50:10,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:11,375:INFO:Calculating mean and std
2024-07-25 15:50:11,375:INFO:Creating metrics dataframe
2024-07-25 15:50:11,375:INFO:Uploading results into container
2024-07-25 15:50:11,375:INFO:Uploading model into container now
2024-07-25 15:50:11,375:INFO:_master_model_container: 27
2024-07-25 15:50:11,375:INFO:_display_container: 3
2024-07-25 15:50:11,392:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1234, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 15:50:11,393:INFO:create_model() successfully completed......................................
2024-07-25 15:50:11,475:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:11,475:INFO:Creating metrics dataframe
2024-07-25 15:50:11,511:INFO:Initializing Dummy Classifier
2024-07-25 15:50:11,511:INFO:Total runtime is 0.3100632826487223 minutes
2024-07-25 15:50:11,526:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:11,526:INFO:Initializing create_model()
2024-07-25 15:50:11,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF0A7070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:11,526:INFO:Checking exceptions
2024-07-25 15:50:11,526:INFO:Importing libraries
2024-07-25 15:50:11,526:INFO:Copying training dataset
2024-07-25 15:50:11,542:INFO:Defining folds
2024-07-25 15:50:11,542:INFO:Declaring metric variables
2024-07-25 15:50:11,557:INFO:Importing untrained model
2024-07-25 15:50:11,573:INFO:Dummy Classifier Imported successfully
2024-07-25 15:50:11,604:INFO:Starting cross validation
2024-07-25 15:50:11,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:11,732:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,732:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,732:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,763:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,858:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,858:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,874:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,914:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,961:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:11,977:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:12,009:INFO:Calculating mean and std
2024-07-25 15:50:12,010:INFO:Creating metrics dataframe
2024-07-25 15:50:12,010:INFO:Uploading results into container
2024-07-25 15:50:12,010:INFO:Uploading model into container now
2024-07-25 15:50:12,010:INFO:_master_model_container: 28
2024-07-25 15:50:12,010:INFO:_display_container: 3
2024-07-25 15:50:12,027:INFO:DummyClassifier(constant=None, random_state=1234, strategy='prior')
2024-07-25 15:50:12,027:INFO:create_model() successfully completed......................................
2024-07-25 15:50:12,107:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:12,107:INFO:Creating metrics dataframe
2024-07-25 15:50:12,142:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 15:50:12,172:INFO:Initializing create_model()
2024-07-25 15:50:12,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D99A7C70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:12,172:INFO:Checking exceptions
2024-07-25 15:50:12,172:INFO:Importing libraries
2024-07-25 15:50:12,172:INFO:Copying training dataset
2024-07-25 15:50:12,207:INFO:Defining folds
2024-07-25 15:50:12,207:INFO:Declaring metric variables
2024-07-25 15:50:12,208:INFO:Importing untrained model
2024-07-25 15:50:12,208:INFO:Declaring custom model
2024-07-25 15:50:12,229:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:50:12,238:INFO:Cross validation set to False
2024-07-25 15:50:12,239:INFO:Fitting Model
2024-07-25 15:50:12,623:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:50:12,623:INFO:create_model() successfully completed......................................
2024-07-25 15:50:12,997:INFO:_master_model_container: 28
2024-07-25 15:50:12,997:INFO:_display_container: 3
2024-07-25 15:50:13,000:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:50:13,000:INFO:compare_models() successfully completed......................................
2024-07-25 15:50:32,984:INFO:PyCaret ClassificationExperiment
2024-07-25 15:50:32,984:INFO:Logging name: clf-default-name
2024-07-25 15:50:32,984:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:50:32,984:INFO:version 3.3.2
2024-07-25 15:50:32,985:INFO:Initializing setup()
2024-07-25 15:50:32,985:INFO:self.USI: ecb3
2024-07-25 15:50:32,985:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:50:32,985:INFO:Checking environment
2024-07-25 15:50:32,985:INFO:python_version: 3.9.19
2024-07-25 15:50:32,985:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:50:32,985:INFO:machine: AMD64
2024-07-25 15:50:32,985:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:50:32,986:INFO:Memory: svmem(total=8387862528, available=640946176, percent=92.4, used=7746916352, free=640946176)
2024-07-25 15:50:32,986:INFO:Physical Core: 2
2024-07-25 15:50:32,986:INFO:Logical Core: 4
2024-07-25 15:50:32,986:INFO:Checking libraries
2024-07-25 15:50:32,986:INFO:System:
2024-07-25 15:50:32,986:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:50:32,986:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:50:32,986:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:50:32,986:INFO:PyCaret required dependencies:
2024-07-25 15:50:32,987:INFO:                 pip: 24.0
2024-07-25 15:50:32,987:INFO:          setuptools: 69.5.1
2024-07-25 15:50:32,987:INFO:             pycaret: 3.3.2
2024-07-25 15:50:32,987:INFO:             IPython: 8.18.1
2024-07-25 15:50:32,987:INFO:          ipywidgets: 8.1.3
2024-07-25 15:50:32,987:INFO:                tqdm: 4.66.4
2024-07-25 15:50:32,987:INFO:               numpy: 1.26.4
2024-07-25 15:50:32,987:INFO:              pandas: 2.1.4
2024-07-25 15:50:32,988:INFO:              jinja2: 3.1.4
2024-07-25 15:50:32,988:INFO:               scipy: 1.11.4
2024-07-25 15:50:32,988:INFO:              joblib: 1.3.2
2024-07-25 15:50:32,988:INFO:             sklearn: 1.4.2
2024-07-25 15:50:32,988:INFO:                pyod: 2.0.1
2024-07-25 15:50:32,988:INFO:            imblearn: 0.12.3
2024-07-25 15:50:32,989:INFO:   category_encoders: 2.6.3
2024-07-25 15:50:32,989:INFO:            lightgbm: 4.4.0
2024-07-25 15:50:32,989:INFO:               numba: 0.60.0
2024-07-25 15:50:32,989:INFO:            requests: 2.32.3
2024-07-25 15:50:32,989:INFO:          matplotlib: 3.7.5
2024-07-25 15:50:32,989:INFO:          scikitplot: 0.3.7
2024-07-25 15:50:32,990:INFO:         yellowbrick: 1.5
2024-07-25 15:50:32,990:INFO:              plotly: 5.23.0
2024-07-25 15:50:32,990:INFO:    plotly-resampler: Not installed
2024-07-25 15:50:32,990:INFO:             kaleido: 0.2.1
2024-07-25 15:50:32,990:INFO:           schemdraw: 0.15
2024-07-25 15:50:32,991:INFO:         statsmodels: 0.14.2
2024-07-25 15:50:32,991:INFO:              sktime: 0.26.0
2024-07-25 15:50:32,991:INFO:               tbats: 1.1.3
2024-07-25 15:50:32,991:INFO:            pmdarima: 2.0.4
2024-07-25 15:50:32,991:INFO:              psutil: 6.0.0
2024-07-25 15:50:32,991:INFO:          markupsafe: 2.1.5
2024-07-25 15:50:32,992:INFO:             pickle5: Not installed
2024-07-25 15:50:32,992:INFO:         cloudpickle: 3.0.0
2024-07-25 15:50:32,992:INFO:         deprecation: 2.1.0
2024-07-25 15:50:32,992:INFO:              xxhash: 3.4.1
2024-07-25 15:50:32,992:INFO:           wurlitzer: Not installed
2024-07-25 15:50:32,992:INFO:PyCaret optional dependencies:
2024-07-25 15:50:32,993:INFO:                shap: Not installed
2024-07-25 15:50:32,993:INFO:           interpret: Not installed
2024-07-25 15:50:32,993:INFO:                umap: Not installed
2024-07-25 15:50:32,993:INFO:     ydata_profiling: Not installed
2024-07-25 15:50:32,994:INFO:  explainerdashboard: Not installed
2024-07-25 15:50:32,994:INFO:             autoviz: Not installed
2024-07-25 15:50:32,995:INFO:           fairlearn: Not installed
2024-07-25 15:50:32,995:INFO:          deepchecks: Not installed
2024-07-25 15:50:32,995:INFO:             xgboost: Not installed
2024-07-25 15:50:32,995:INFO:            catboost: Not installed
2024-07-25 15:50:32,995:INFO:              kmodes: Not installed
2024-07-25 15:50:32,995:INFO:             mlxtend: Not installed
2024-07-25 15:50:32,995:INFO:       statsforecast: Not installed
2024-07-25 15:50:32,995:INFO:        tune_sklearn: Not installed
2024-07-25 15:50:32,996:INFO:                 ray: Not installed
2024-07-25 15:50:32,996:INFO:            hyperopt: Not installed
2024-07-25 15:50:32,996:INFO:              optuna: Not installed
2024-07-25 15:50:32,996:INFO:               skopt: Not installed
2024-07-25 15:50:32,997:INFO:              mlflow: Not installed
2024-07-25 15:50:32,997:INFO:              gradio: Not installed
2024-07-25 15:50:32,997:INFO:             fastapi: Not installed
2024-07-25 15:50:32,997:INFO:             uvicorn: Not installed
2024-07-25 15:50:32,997:INFO:              m2cgen: Not installed
2024-07-25 15:50:32,997:INFO:           evidently: Not installed
2024-07-25 15:50:32,997:INFO:               fugue: Not installed
2024-07-25 15:50:32,998:INFO:           streamlit: Not installed
2024-07-25 15:50:32,998:INFO:             prophet: Not installed
2024-07-25 15:50:32,998:INFO:None
2024-07-25 15:50:32,998:INFO:Set up data.
2024-07-25 15:50:33,016:INFO:Set up folding strategy.
2024-07-25 15:50:33,017:INFO:Set up train/test split.
2024-07-25 15:50:33,025:INFO:Set up index.
2024-07-25 15:50:33,025:INFO:Assigning column types.
2024-07-25 15:50:33,034:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:50:33,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:50:33,097:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:50:33,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:50:33,185:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:50:33,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,215:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:50:33,268:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:50:33,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,365:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:50:33,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,398:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:50:33,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:33,581:INFO:Preparing preprocessing pipeline...
2024-07-25 15:50:33,581:INFO:Set up simple imputation.
2024-07-25 15:50:33,581:INFO:Set up column name cleaning.
2024-07-25 15:50:33,665:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:50:33,665:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:50:33,665:INFO:Creating final display dataframe.
2024-07-25 15:50:33,885:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              ecb3
2024-07-25 15:50:34,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:34,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:34,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:34,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:50:34,117:INFO:setup() successfully completed in 1.16s...............
2024-07-25 15:50:34,133:INFO:Initializing compare_models()
2024-07-25 15:50:34,133:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, include=['lr', 'dt', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, 'include': ['lr', 'dt', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 15:50:34,133:INFO:Checking exceptions
2024-07-25 15:50:34,133:INFO:Preparing display monitor
2024-07-25 15:50:34,245:INFO:Initializing Logistic Regression
2024-07-25 15:50:34,246:INFO:Total runtime is 1.710653305053711e-05 minutes
2024-07-25 15:50:34,302:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:34,302:INFO:Initializing create_model()
2024-07-25 15:50:34,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED5C1D30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:34,302:INFO:Checking exceptions
2024-07-25 15:50:34,302:INFO:Importing libraries
2024-07-25 15:50:34,302:INFO:Copying training dataset
2024-07-25 15:50:34,314:INFO:Defining folds
2024-07-25 15:50:34,314:INFO:Declaring metric variables
2024-07-25 15:50:34,363:INFO:Importing untrained model
2024-07-25 15:50:34,391:INFO:Logistic Regression Imported successfully
2024-07-25 15:50:34,421:INFO:Starting cross validation
2024-07-25 15:50:34,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:34,932:INFO:Calculating mean and std
2024-07-25 15:50:34,935:INFO:Creating metrics dataframe
2024-07-25 15:50:34,935:INFO:Uploading results into container
2024-07-25 15:50:34,935:INFO:Uploading model into container now
2024-07-25 15:50:34,935:INFO:_master_model_container: 1
2024-07-25 15:50:34,935:INFO:_display_container: 2
2024-07-25 15:50:34,935:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:50:34,935:INFO:create_model() successfully completed......................................
2024-07-25 15:50:35,017:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:35,017:INFO:Creating metrics dataframe
2024-07-25 15:50:35,033:INFO:Initializing Decision Tree Classifier
2024-07-25 15:50:35,033:INFO:Total runtime is 0.01313558022181193 minutes
2024-07-25 15:50:35,033:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:35,033:INFO:Initializing create_model()
2024-07-25 15:50:35,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED5C1D30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:35,033:INFO:Checking exceptions
2024-07-25 15:50:35,033:INFO:Importing libraries
2024-07-25 15:50:35,033:INFO:Copying training dataset
2024-07-25 15:50:35,050:INFO:Defining folds
2024-07-25 15:50:35,050:INFO:Declaring metric variables
2024-07-25 15:50:35,050:INFO:Importing untrained model
2024-07-25 15:50:35,075:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:50:35,101:INFO:Starting cross validation
2024-07-25 15:50:35,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:35,449:INFO:Calculating mean and std
2024-07-25 15:50:35,449:INFO:Creating metrics dataframe
2024-07-25 15:50:35,449:INFO:Uploading results into container
2024-07-25 15:50:35,449:INFO:Uploading model into container now
2024-07-25 15:50:35,449:INFO:_master_model_container: 2
2024-07-25 15:50:35,461:INFO:_display_container: 2
2024-07-25 15:50:35,465:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:50:35,466:INFO:create_model() successfully completed......................................
2024-07-25 15:50:35,532:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:35,532:INFO:Creating metrics dataframe
2024-07-25 15:50:35,564:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 15:50:35,564:INFO:Total runtime is 0.021982653935750326 minutes
2024-07-25 15:50:35,564:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:35,564:INFO:Initializing create_model()
2024-07-25 15:50:35,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED5C1D30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:35,564:INFO:Checking exceptions
2024-07-25 15:50:35,564:INFO:Importing libraries
2024-07-25 15:50:35,564:INFO:Copying training dataset
2024-07-25 15:50:35,588:INFO:Defining folds
2024-07-25 15:50:35,589:INFO:Declaring metric variables
2024-07-25 15:50:35,606:INFO:Importing untrained model
2024-07-25 15:50:35,617:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 15:50:35,639:INFO:Starting cross validation
2024-07-25 15:50:35,639:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:36,413:INFO:Calculating mean and std
2024-07-25 15:50:36,417:INFO:Creating metrics dataframe
2024-07-25 15:50:36,417:INFO:Uploading results into container
2024-07-25 15:50:36,417:INFO:Uploading model into container now
2024-07-25 15:50:36,417:INFO:_master_model_container: 3
2024-07-25 15:50:36,417:INFO:_display_container: 2
2024-07-25 15:50:36,428:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1234, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 15:50:36,428:INFO:create_model() successfully completed......................................
2024-07-25 15:50:36,499:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:36,499:INFO:Creating metrics dataframe
2024-07-25 15:50:36,515:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 15:50:36,549:INFO:Initializing create_model()
2024-07-25 15:50:36,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:36,549:INFO:Checking exceptions
2024-07-25 15:50:36,549:INFO:Importing libraries
2024-07-25 15:50:36,549:INFO:Copying training dataset
2024-07-25 15:50:36,568:INFO:Defining folds
2024-07-25 15:50:36,568:INFO:Declaring metric variables
2024-07-25 15:50:36,569:INFO:Importing untrained model
2024-07-25 15:50:36,569:INFO:Declaring custom model
2024-07-25 15:50:36,573:INFO:Logistic Regression Imported successfully
2024-07-25 15:50:36,573:INFO:Cross validation set to False
2024-07-25 15:50:36,573:INFO:Fitting Model
2024-07-25 15:50:36,660:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:50:36,662:INFO:create_model() successfully completed......................................
2024-07-25 15:50:36,857:INFO:_master_model_container: 3
2024-07-25 15:50:36,857:INFO:_display_container: 2
2024-07-25 15:50:36,873:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:50:36,873:INFO:compare_models() successfully completed......................................
2024-07-25 15:50:42,645:INFO:Initializing compare_models()
2024-07-25 15:50:42,645:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, 'include': None, 'exclude': ['lr', 'dt', 'lightgbm'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['lr', 'dt', 'lightgbm'])
2024-07-25 15:50:42,645:INFO:Checking exceptions
2024-07-25 15:50:42,655:INFO:Preparing display monitor
2024-07-25 15:50:42,818:INFO:Initializing K Neighbors Classifier
2024-07-25 15:50:42,819:INFO:Total runtime is 1.6617774963378907e-05 minutes
2024-07-25 15:50:42,830:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:42,830:INFO:Initializing create_model()
2024-07-25 15:50:42,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:42,830:INFO:Checking exceptions
2024-07-25 15:50:42,830:INFO:Importing libraries
2024-07-25 15:50:42,830:INFO:Copying training dataset
2024-07-25 15:50:42,861:INFO:Defining folds
2024-07-25 15:50:42,861:INFO:Declaring metric variables
2024-07-25 15:50:42,881:INFO:Importing untrained model
2024-07-25 15:50:42,891:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:50:42,925:INFO:Starting cross validation
2024-07-25 15:50:42,939:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:43,978:INFO:Calculating mean and std
2024-07-25 15:50:43,978:INFO:Creating metrics dataframe
2024-07-25 15:50:43,978:INFO:Uploading results into container
2024-07-25 15:50:43,997:INFO:Uploading model into container now
2024-07-25 15:50:43,998:INFO:_master_model_container: 4
2024-07-25 15:50:43,998:INFO:_display_container: 3
2024-07-25 15:50:43,998:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:50:43,998:INFO:create_model() successfully completed......................................
2024-07-25 15:50:44,091:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:44,091:INFO:Creating metrics dataframe
2024-07-25 15:50:44,091:INFO:Initializing Naive Bayes
2024-07-25 15:50:44,091:INFO:Total runtime is 0.021231400966644286 minutes
2024-07-25 15:50:44,107:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:44,107:INFO:Initializing create_model()
2024-07-25 15:50:44,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:44,107:INFO:Checking exceptions
2024-07-25 15:50:44,107:INFO:Importing libraries
2024-07-25 15:50:44,107:INFO:Copying training dataset
2024-07-25 15:50:44,130:INFO:Defining folds
2024-07-25 15:50:44,130:INFO:Declaring metric variables
2024-07-25 15:50:44,148:INFO:Importing untrained model
2024-07-25 15:50:44,164:INFO:Naive Bayes Imported successfully
2024-07-25 15:50:44,177:INFO:Starting cross validation
2024-07-25 15:50:44,192:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:44,526:INFO:Calculating mean and std
2024-07-25 15:50:44,526:INFO:Creating metrics dataframe
2024-07-25 15:50:44,526:INFO:Uploading results into container
2024-07-25 15:50:44,526:INFO:Uploading model into container now
2024-07-25 15:50:44,542:INFO:_master_model_container: 5
2024-07-25 15:50:44,543:INFO:_display_container: 3
2024-07-25 15:50:44,545:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 15:50:44,545:INFO:create_model() successfully completed......................................
2024-07-25 15:50:44,612:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:44,612:INFO:Creating metrics dataframe
2024-07-25 15:50:44,635:INFO:Initializing SVM - Linear Kernel
2024-07-25 15:50:44,635:INFO:Total runtime is 0.030294315020243327 minutes
2024-07-25 15:50:44,651:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:44,651:INFO:Initializing create_model()
2024-07-25 15:50:44,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:44,651:INFO:Checking exceptions
2024-07-25 15:50:44,651:INFO:Importing libraries
2024-07-25 15:50:44,651:INFO:Copying training dataset
2024-07-25 15:50:44,676:INFO:Defining folds
2024-07-25 15:50:44,676:INFO:Declaring metric variables
2024-07-25 15:50:44,687:INFO:Importing untrained model
2024-07-25 15:50:44,687:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 15:50:44,720:INFO:Starting cross validation
2024-07-25 15:50:44,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:45,123:INFO:Calculating mean and std
2024-07-25 15:50:45,123:INFO:Creating metrics dataframe
2024-07-25 15:50:45,123:INFO:Uploading results into container
2024-07-25 15:50:45,123:INFO:Uploading model into container now
2024-07-25 15:50:45,123:INFO:_master_model_container: 6
2024-07-25 15:50:45,123:INFO:_display_container: 3
2024-07-25 15:50:45,137:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1234, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 15:50:45,137:INFO:create_model() successfully completed......................................
2024-07-25 15:50:45,212:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:45,212:INFO:Creating metrics dataframe
2024-07-25 15:50:45,236:INFO:Initializing Ridge Classifier
2024-07-25 15:50:45,236:INFO:Total runtime is 0.04030541181564331 minutes
2024-07-25 15:50:45,236:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:45,236:INFO:Initializing create_model()
2024-07-25 15:50:45,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:45,236:INFO:Checking exceptions
2024-07-25 15:50:45,236:INFO:Importing libraries
2024-07-25 15:50:45,236:INFO:Copying training dataset
2024-07-25 15:50:45,262:INFO:Defining folds
2024-07-25 15:50:45,262:INFO:Declaring metric variables
2024-07-25 15:50:45,277:INFO:Importing untrained model
2024-07-25 15:50:45,286:INFO:Ridge Classifier Imported successfully
2024-07-25 15:50:45,309:INFO:Starting cross validation
2024-07-25 15:50:45,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:45,686:INFO:Calculating mean and std
2024-07-25 15:50:45,686:INFO:Creating metrics dataframe
2024-07-25 15:50:45,686:INFO:Uploading results into container
2024-07-25 15:50:45,686:INFO:Uploading model into container now
2024-07-25 15:50:45,702:INFO:_master_model_container: 7
2024-07-25 15:50:45,703:INFO:_display_container: 3
2024-07-25 15:50:45,704:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:50:45,704:INFO:create_model() successfully completed......................................
2024-07-25 15:50:45,770:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:45,770:INFO:Creating metrics dataframe
2024-07-25 15:50:45,786:INFO:Initializing Random Forest Classifier
2024-07-25 15:50:45,786:INFO:Total runtime is 0.04947292407353719 minutes
2024-07-25 15:50:45,802:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:45,802:INFO:Initializing create_model()
2024-07-25 15:50:45,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:45,802:INFO:Checking exceptions
2024-07-25 15:50:45,802:INFO:Importing libraries
2024-07-25 15:50:45,802:INFO:Copying training dataset
2024-07-25 15:50:45,821:INFO:Defining folds
2024-07-25 15:50:45,824:INFO:Declaring metric variables
2024-07-25 15:50:45,838:INFO:Importing untrained model
2024-07-25 15:50:45,847:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:50:45,869:INFO:Starting cross validation
2024-07-25 15:50:45,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:48,453:INFO:Calculating mean and std
2024-07-25 15:50:48,453:INFO:Creating metrics dataframe
2024-07-25 15:50:48,453:INFO:Uploading results into container
2024-07-25 15:50:48,468:INFO:Uploading model into container now
2024-07-25 15:50:48,472:INFO:_master_model_container: 8
2024-07-25 15:50:48,472:INFO:_display_container: 3
2024-07-25 15:50:48,479:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:50:48,479:INFO:create_model() successfully completed......................................
2024-07-25 15:50:48,552:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:48,552:INFO:Creating metrics dataframe
2024-07-25 15:50:48,587:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 15:50:48,587:INFO:Total runtime is 0.09615239302317302 minutes
2024-07-25 15:50:48,587:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:48,587:INFO:Initializing create_model()
2024-07-25 15:50:48,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:48,587:INFO:Checking exceptions
2024-07-25 15:50:48,587:INFO:Importing libraries
2024-07-25 15:50:48,600:INFO:Copying training dataset
2024-07-25 15:50:48,601:INFO:Defining folds
2024-07-25 15:50:48,601:INFO:Declaring metric variables
2024-07-25 15:50:48,616:INFO:Importing untrained model
2024-07-25 15:50:48,634:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 15:50:48,657:INFO:Starting cross validation
2024-07-25 15:50:48,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:49,000:INFO:Calculating mean and std
2024-07-25 15:50:49,004:INFO:Creating metrics dataframe
2024-07-25 15:50:49,016:INFO:Uploading results into container
2024-07-25 15:50:49,016:INFO:Uploading model into container now
2024-07-25 15:50:49,016:INFO:_master_model_container: 9
2024-07-25 15:50:49,016:INFO:_display_container: 3
2024-07-25 15:50:49,016:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 15:50:49,016:INFO:create_model() successfully completed......................................
2024-07-25 15:50:49,081:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:49,081:INFO:Creating metrics dataframe
2024-07-25 15:50:49,096:INFO:Initializing Ada Boost Classifier
2024-07-25 15:50:49,096:INFO:Total runtime is 0.10464700857798259 minutes
2024-07-25 15:50:49,119:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:49,119:INFO:Initializing create_model()
2024-07-25 15:50:49,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:49,119:INFO:Checking exceptions
2024-07-25 15:50:49,119:INFO:Importing libraries
2024-07-25 15:50:49,119:INFO:Copying training dataset
2024-07-25 15:50:49,138:INFO:Defining folds
2024-07-25 15:50:49,139:INFO:Declaring metric variables
2024-07-25 15:50:49,151:INFO:Importing untrained model
2024-07-25 15:50:49,156:INFO:Ada Boost Classifier Imported successfully
2024-07-25 15:50:49,186:INFO:Starting cross validation
2024-07-25 15:50:49,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:49,250:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:49,250:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:49,250:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:49,266:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:49,689:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:49,716:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:49,717:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:49,725:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:50,235:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:50,260:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:50:50,648:INFO:Calculating mean and std
2024-07-25 15:50:50,651:INFO:Creating metrics dataframe
2024-07-25 15:50:50,651:INFO:Uploading results into container
2024-07-25 15:50:50,651:INFO:Uploading model into container now
2024-07-25 15:50:50,651:INFO:_master_model_container: 10
2024-07-25 15:50:50,651:INFO:_display_container: 3
2024-07-25 15:50:50,651:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1234)
2024-07-25 15:50:50,651:INFO:create_model() successfully completed......................................
2024-07-25 15:50:50,740:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:50,740:INFO:Creating metrics dataframe
2024-07-25 15:50:50,767:INFO:Initializing Gradient Boosting Classifier
2024-07-25 15:50:50,767:INFO:Total runtime is 0.13248563210169476 minutes
2024-07-25 15:50:50,780:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:50,780:INFO:Initializing create_model()
2024-07-25 15:50:50,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:50,780:INFO:Checking exceptions
2024-07-25 15:50:50,780:INFO:Importing libraries
2024-07-25 15:50:50,780:INFO:Copying training dataset
2024-07-25 15:50:50,811:INFO:Defining folds
2024-07-25 15:50:50,811:INFO:Declaring metric variables
2024-07-25 15:50:50,817:INFO:Importing untrained model
2024-07-25 15:50:50,832:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 15:50:50,863:INFO:Starting cross validation
2024-07-25 15:50:50,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:52,944:INFO:Calculating mean and std
2024-07-25 15:50:52,944:INFO:Creating metrics dataframe
2024-07-25 15:50:52,970:INFO:Uploading results into container
2024-07-25 15:50:52,978:INFO:Uploading model into container now
2024-07-25 15:50:52,981:INFO:_master_model_container: 11
2024-07-25 15:50:52,981:INFO:_display_container: 3
2024-07-25 15:50:52,983:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1234, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 15:50:52,983:INFO:create_model() successfully completed......................................
2024-07-25 15:50:53,082:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:53,082:INFO:Creating metrics dataframe
2024-07-25 15:50:53,134:INFO:Initializing Linear Discriminant Analysis
2024-07-25 15:50:53,134:INFO:Total runtime is 0.17193796237309775 minutes
2024-07-25 15:50:53,150:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:53,150:INFO:Initializing create_model()
2024-07-25 15:50:53,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:53,150:INFO:Checking exceptions
2024-07-25 15:50:53,150:INFO:Importing libraries
2024-07-25 15:50:53,150:INFO:Copying training dataset
2024-07-25 15:50:53,161:INFO:Defining folds
2024-07-25 15:50:53,161:INFO:Declaring metric variables
2024-07-25 15:50:53,192:INFO:Importing untrained model
2024-07-25 15:50:53,212:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:50:53,261:INFO:Starting cross validation
2024-07-25 15:50:53,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:54,134:INFO:Calculating mean and std
2024-07-25 15:50:54,140:INFO:Creating metrics dataframe
2024-07-25 15:50:54,150:INFO:Uploading results into container
2024-07-25 15:50:54,153:INFO:Uploading model into container now
2024-07-25 15:50:54,155:INFO:_master_model_container: 12
2024-07-25 15:50:54,155:INFO:_display_container: 3
2024-07-25 15:50:54,157:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 15:50:54,157:INFO:create_model() successfully completed......................................
2024-07-25 15:50:54,249:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:54,249:INFO:Creating metrics dataframe
2024-07-25 15:50:54,281:INFO:Initializing Extra Trees Classifier
2024-07-25 15:50:54,281:INFO:Total runtime is 0.19106103976567587 minutes
2024-07-25 15:50:54,297:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:54,297:INFO:Initializing create_model()
2024-07-25 15:50:54,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:54,297:INFO:Checking exceptions
2024-07-25 15:50:54,297:INFO:Importing libraries
2024-07-25 15:50:54,297:INFO:Copying training dataset
2024-07-25 15:50:54,317:INFO:Defining folds
2024-07-25 15:50:54,318:INFO:Declaring metric variables
2024-07-25 15:50:54,337:INFO:Importing untrained model
2024-07-25 15:50:54,361:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:50:54,376:INFO:Starting cross validation
2024-07-25 15:50:54,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:57,378:INFO:Calculating mean and std
2024-07-25 15:50:57,382:INFO:Creating metrics dataframe
2024-07-25 15:50:57,384:INFO:Uploading results into container
2024-07-25 15:50:57,384:INFO:Uploading model into container now
2024-07-25 15:50:57,392:INFO:_master_model_container: 13
2024-07-25 15:50:57,393:INFO:_display_container: 3
2024-07-25 15:50:57,397:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-07-25 15:50:57,397:INFO:create_model() successfully completed......................................
2024-07-25 15:50:57,472:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:57,472:INFO:Creating metrics dataframe
2024-07-25 15:50:57,508:INFO:Initializing Dummy Classifier
2024-07-25 15:50:57,508:INFO:Total runtime is 0.24484037160873415 minutes
2024-07-25 15:50:57,508:INFO:SubProcess create_model() called ==================================
2024-07-25 15:50:57,508:INFO:Initializing create_model()
2024-07-25 15:50:57,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371DB80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:57,523:INFO:Checking exceptions
2024-07-25 15:50:57,523:INFO:Importing libraries
2024-07-25 15:50:57,524:INFO:Copying training dataset
2024-07-25 15:50:57,529:INFO:Defining folds
2024-07-25 15:50:57,529:INFO:Declaring metric variables
2024-07-25 15:50:57,549:INFO:Importing untrained model
2024-07-25 15:50:57,568:INFO:Dummy Classifier Imported successfully
2024-07-25 15:50:57,598:INFO:Starting cross validation
2024-07-25 15:50:57,598:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:50:57,730:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,730:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,730:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,774:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,844:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,862:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,878:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,913:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,962:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,962:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:50:57,993:INFO:Calculating mean and std
2024-07-25 15:50:57,993:INFO:Creating metrics dataframe
2024-07-25 15:50:57,993:INFO:Uploading results into container
2024-07-25 15:50:57,993:INFO:Uploading model into container now
2024-07-25 15:50:57,993:INFO:_master_model_container: 14
2024-07-25 15:50:58,003:INFO:_display_container: 3
2024-07-25 15:50:58,006:INFO:DummyClassifier(constant=None, random_state=1234, strategy='prior')
2024-07-25 15:50:58,008:INFO:create_model() successfully completed......................................
2024-07-25 15:50:58,093:INFO:SubProcess create_model() end ==================================
2024-07-25 15:50:58,093:INFO:Creating metrics dataframe
2024-07-25 15:50:58,150:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 15:50:58,186:INFO:Initializing create_model()
2024-07-25 15:50:58,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EDDED100>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:50:58,187:INFO:Checking exceptions
2024-07-25 15:50:58,194:INFO:Importing libraries
2024-07-25 15:50:58,194:INFO:Copying training dataset
2024-07-25 15:50:58,208:INFO:Defining folds
2024-07-25 15:50:58,208:INFO:Declaring metric variables
2024-07-25 15:50:58,208:INFO:Importing untrained model
2024-07-25 15:50:58,208:INFO:Declaring custom model
2024-07-25 15:50:58,208:INFO:Ridge Classifier Imported successfully
2024-07-25 15:50:58,208:INFO:Cross validation set to False
2024-07-25 15:50:58,208:INFO:Fitting Model
2024-07-25 15:50:58,240:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:50:58,240:INFO:create_model() successfully completed......................................
2024-07-25 15:50:58,559:INFO:_master_model_container: 14
2024-07-25 15:50:58,559:INFO:_display_container: 3
2024-07-25 15:50:58,559:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:50:58,559:INFO:compare_models() successfully completed......................................
2024-07-25 15:51:02,628:INFO:PyCaret ClassificationExperiment
2024-07-25 15:51:02,628:INFO:Logging name: clf-default-name
2024-07-25 15:51:02,628:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:51:02,628:INFO:version 3.3.2
2024-07-25 15:51:02,628:INFO:Initializing setup()
2024-07-25 15:51:02,628:INFO:self.USI: 6eb9
2024-07-25 15:51:02,628:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:51:02,628:INFO:Checking environment
2024-07-25 15:51:02,629:INFO:python_version: 3.9.19
2024-07-25 15:51:02,629:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:51:02,629:INFO:machine: AMD64
2024-07-25 15:51:02,629:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:51:02,629:INFO:Memory: svmem(total=8387862528, available=626892800, percent=92.5, used=7760969728, free=626892800)
2024-07-25 15:51:02,629:INFO:Physical Core: 2
2024-07-25 15:51:02,629:INFO:Logical Core: 4
2024-07-25 15:51:02,629:INFO:Checking libraries
2024-07-25 15:51:02,629:INFO:System:
2024-07-25 15:51:02,629:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:51:02,630:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:51:02,630:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:51:02,630:INFO:PyCaret required dependencies:
2024-07-25 15:51:02,630:INFO:                 pip: 24.0
2024-07-25 15:51:02,630:INFO:          setuptools: 69.5.1
2024-07-25 15:51:02,630:INFO:             pycaret: 3.3.2
2024-07-25 15:51:02,630:INFO:             IPython: 8.18.1
2024-07-25 15:51:02,630:INFO:          ipywidgets: 8.1.3
2024-07-25 15:51:02,630:INFO:                tqdm: 4.66.4
2024-07-25 15:51:02,630:INFO:               numpy: 1.26.4
2024-07-25 15:51:02,631:INFO:              pandas: 2.1.4
2024-07-25 15:51:02,631:INFO:              jinja2: 3.1.4
2024-07-25 15:51:02,631:INFO:               scipy: 1.11.4
2024-07-25 15:51:02,631:INFO:              joblib: 1.3.2
2024-07-25 15:51:02,631:INFO:             sklearn: 1.4.2
2024-07-25 15:51:02,631:INFO:                pyod: 2.0.1
2024-07-25 15:51:02,631:INFO:            imblearn: 0.12.3
2024-07-25 15:51:02,631:INFO:   category_encoders: 2.6.3
2024-07-25 15:51:02,631:INFO:            lightgbm: 4.4.0
2024-07-25 15:51:02,631:INFO:               numba: 0.60.0
2024-07-25 15:51:02,631:INFO:            requests: 2.32.3
2024-07-25 15:51:02,631:INFO:          matplotlib: 3.7.5
2024-07-25 15:51:02,632:INFO:          scikitplot: 0.3.7
2024-07-25 15:51:02,632:INFO:         yellowbrick: 1.5
2024-07-25 15:51:02,632:INFO:              plotly: 5.23.0
2024-07-25 15:51:02,632:INFO:    plotly-resampler: Not installed
2024-07-25 15:51:02,632:INFO:             kaleido: 0.2.1
2024-07-25 15:51:02,632:INFO:           schemdraw: 0.15
2024-07-25 15:51:02,632:INFO:         statsmodels: 0.14.2
2024-07-25 15:51:02,632:INFO:              sktime: 0.26.0
2024-07-25 15:51:02,632:INFO:               tbats: 1.1.3
2024-07-25 15:51:02,632:INFO:            pmdarima: 2.0.4
2024-07-25 15:51:02,632:INFO:              psutil: 6.0.0
2024-07-25 15:51:02,632:INFO:          markupsafe: 2.1.5
2024-07-25 15:51:02,632:INFO:             pickle5: Not installed
2024-07-25 15:51:02,633:INFO:         cloudpickle: 3.0.0
2024-07-25 15:51:02,633:INFO:         deprecation: 2.1.0
2024-07-25 15:51:02,633:INFO:              xxhash: 3.4.1
2024-07-25 15:51:02,633:INFO:           wurlitzer: Not installed
2024-07-25 15:51:02,633:INFO:PyCaret optional dependencies:
2024-07-25 15:51:02,633:INFO:                shap: Not installed
2024-07-25 15:51:02,633:INFO:           interpret: Not installed
2024-07-25 15:51:02,633:INFO:                umap: Not installed
2024-07-25 15:51:02,633:INFO:     ydata_profiling: Not installed
2024-07-25 15:51:02,633:INFO:  explainerdashboard: Not installed
2024-07-25 15:51:02,633:INFO:             autoviz: Not installed
2024-07-25 15:51:02,634:INFO:           fairlearn: Not installed
2024-07-25 15:51:02,634:INFO:          deepchecks: Not installed
2024-07-25 15:51:02,634:INFO:             xgboost: Not installed
2024-07-25 15:51:02,634:INFO:            catboost: Not installed
2024-07-25 15:51:02,634:INFO:              kmodes: Not installed
2024-07-25 15:51:02,634:INFO:             mlxtend: Not installed
2024-07-25 15:51:02,634:INFO:       statsforecast: Not installed
2024-07-25 15:51:02,634:INFO:        tune_sklearn: Not installed
2024-07-25 15:51:02,634:INFO:                 ray: Not installed
2024-07-25 15:51:02,634:INFO:            hyperopt: Not installed
2024-07-25 15:51:02,634:INFO:              optuna: Not installed
2024-07-25 15:51:02,634:INFO:               skopt: Not installed
2024-07-25 15:51:02,635:INFO:              mlflow: Not installed
2024-07-25 15:51:02,635:INFO:              gradio: Not installed
2024-07-25 15:51:02,635:INFO:             fastapi: Not installed
2024-07-25 15:51:02,635:INFO:             uvicorn: Not installed
2024-07-25 15:51:02,635:INFO:              m2cgen: Not installed
2024-07-25 15:51:02,635:INFO:           evidently: Not installed
2024-07-25 15:51:02,635:INFO:               fugue: Not installed
2024-07-25 15:51:02,635:INFO:           streamlit: Not installed
2024-07-25 15:51:02,635:INFO:             prophet: Not installed
2024-07-25 15:51:02,635:INFO:None
2024-07-25 15:51:02,635:INFO:Set up data.
2024-07-25 15:51:02,639:INFO:Set up folding strategy.
2024-07-25 15:51:02,639:INFO:Set up train/test split.
2024-07-25 15:51:02,654:INFO:Set up index.
2024-07-25 15:51:02,654:INFO:Assigning column types.
2024-07-25 15:51:02,656:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:51:02,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:02,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:02,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:02,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:02,801:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:02,801:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:02,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:02,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:02,851:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:51:02,901:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:02,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:02,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:02,987:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:03,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,034:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:51:03,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,218:INFO:Preparing preprocessing pipeline...
2024-07-25 15:51:03,218:INFO:Set up simple imputation.
2024-07-25 15:51:03,218:INFO:Set up column name cleaning.
2024-07-25 15:51:03,288:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:51:03,301:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:51:03,301:INFO:Creating final display dataframe.
2024-07-25 15:51:03,501:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              6eb9
2024-07-25 15:51:03,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:03,737:INFO:setup() successfully completed in 1.18s...............
2024-07-25 15:51:03,737:INFO:Initializing compare_models()
2024-07-25 15:51:03,737:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.25, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.25, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 15:51:03,737:INFO:Checking exceptions
2024-07-25 15:51:03,753:INFO:Preparing display monitor
2024-07-25 15:51:03,839:INFO:Initializing Logistic Regression
2024-07-25 15:51:03,839:INFO:Total runtime is 0.0 minutes
2024-07-25 15:51:03,883:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:03,883:INFO:Initializing create_model()
2024-07-25 15:51:03,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:03,883:INFO:Checking exceptions
2024-07-25 15:51:03,883:INFO:Importing libraries
2024-07-25 15:51:03,883:INFO:Copying training dataset
2024-07-25 15:51:03,941:INFO:Defining folds
2024-07-25 15:51:03,941:INFO:Declaring metric variables
2024-07-25 15:51:03,955:INFO:Importing untrained model
2024-07-25 15:51:03,967:INFO:Logistic Regression Imported successfully
2024-07-25 15:51:04,003:INFO:Starting cross validation
2024-07-25 15:51:04,003:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:04,536:INFO:Calculating mean and std
2024-07-25 15:51:04,536:INFO:Creating metrics dataframe
2024-07-25 15:51:04,536:INFO:Uploading results into container
2024-07-25 15:51:04,536:INFO:Uploading model into container now
2024-07-25 15:51:04,536:INFO:_master_model_container: 1
2024-07-25 15:51:04,536:INFO:_display_container: 2
2024-07-25 15:51:04,536:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=1234,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.25,
                                     random_state=1234, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-07-25 15:51:04,536:INFO:create_model() successfully completed......................................
2024-07-25 15:51:04,604:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:04,604:INFO:Creating metrics dataframe
2024-07-25 15:51:04,635:INFO:Initializing K Neighbors Classifier
2024-07-25 15:51:04,635:INFO:Total runtime is 0.013280514876047771 minutes
2024-07-25 15:51:04,649:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:04,650:INFO:Initializing create_model()
2024-07-25 15:51:04,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:04,651:INFO:Checking exceptions
2024-07-25 15:51:04,651:INFO:Importing libraries
2024-07-25 15:51:04,651:INFO:Copying training dataset
2024-07-25 15:51:04,653:INFO:Defining folds
2024-07-25 15:51:04,653:INFO:Declaring metric variables
2024-07-25 15:51:04,671:INFO:Importing untrained model
2024-07-25 15:51:04,686:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:51:04,709:INFO:Starting cross validation
2024-07-25 15:51:04,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:05,335:INFO:Calculating mean and std
2024-07-25 15:51:05,335:INFO:Creating metrics dataframe
2024-07-25 15:51:05,335:INFO:Uploading results into container
2024-07-25 15:51:05,335:INFO:Uploading model into container now
2024-07-25 15:51:05,352:INFO:_master_model_container: 2
2024-07-25 15:51:05,352:INFO:_display_container: 2
2024-07-25 15:51:05,353:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.25,
                                     weights='uniform')
2024-07-25 15:51:05,353:INFO:create_model() successfully completed......................................
2024-07-25 15:51:05,422:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:05,422:INFO:Creating metrics dataframe
2024-07-25 15:51:05,437:INFO:Initializing Naive Bayes
2024-07-25 15:51:05,437:INFO:Total runtime is 0.02664284706115723 minutes
2024-07-25 15:51:05,453:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:05,453:INFO:Initializing create_model()
2024-07-25 15:51:05,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:05,453:INFO:Checking exceptions
2024-07-25 15:51:05,453:INFO:Importing libraries
2024-07-25 15:51:05,453:INFO:Copying training dataset
2024-07-25 15:51:05,474:INFO:Defining folds
2024-07-25 15:51:05,475:INFO:Declaring metric variables
2024-07-25 15:51:05,486:INFO:Importing untrained model
2024-07-25 15:51:05,489:INFO:Naive Bayes Imported successfully
2024-07-25 15:51:05,524:INFO:Starting cross validation
2024-07-25 15:51:05,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:05,952:INFO:Calculating mean and std
2024-07-25 15:51:05,956:INFO:Creating metrics dataframe
2024-07-25 15:51:05,964:INFO:Uploading results into container
2024-07-25 15:51:05,964:INFO:Uploading model into container now
2024-07-25 15:51:05,971:INFO:_master_model_container: 3
2024-07-25 15:51:05,971:INFO:_display_container: 2
2024-07-25 15:51:05,971:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.25,
                                     var_smoothing=1e-09)
2024-07-25 15:51:05,971:INFO:create_model() successfully completed......................................
2024-07-25 15:51:06,066:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:06,066:INFO:Creating metrics dataframe
2024-07-25 15:51:06,097:INFO:Initializing Decision Tree Classifier
2024-07-25 15:51:06,097:INFO:Total runtime is 0.03764301538467407 minutes
2024-07-25 15:51:06,113:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:06,113:INFO:Initializing create_model()
2024-07-25 15:51:06,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:06,113:INFO:Checking exceptions
2024-07-25 15:51:06,113:INFO:Importing libraries
2024-07-25 15:51:06,113:INFO:Copying training dataset
2024-07-25 15:51:06,154:INFO:Defining folds
2024-07-25 15:51:06,154:INFO:Declaring metric variables
2024-07-25 15:51:06,169:INFO:Importing untrained model
2024-07-25 15:51:06,181:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:51:06,216:INFO:Starting cross validation
2024-07-25 15:51:06,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:06,799:INFO:Calculating mean and std
2024-07-25 15:51:06,799:INFO:Creating metrics dataframe
2024-07-25 15:51:06,799:INFO:Uploading results into container
2024-07-25 15:51:06,799:INFO:Uploading model into container now
2024-07-25 15:51:06,799:INFO:_master_model_container: 4
2024-07-25 15:51:06,799:INFO:_display_container: 2
2024-07-25 15:51:06,821:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=1234,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.25,
                                     random_state=1234, splitter='best')
2024-07-25 15:51:06,821:INFO:create_model() successfully completed......................................
2024-07-25 15:51:06,899:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:06,899:INFO:Creating metrics dataframe
2024-07-25 15:51:06,935:INFO:Initializing SVM - Linear Kernel
2024-07-25 15:51:06,935:INFO:Total runtime is 0.051610116163889566 minutes
2024-07-25 15:51:06,949:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:06,950:INFO:Initializing create_model()
2024-07-25 15:51:06,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:06,951:INFO:Checking exceptions
2024-07-25 15:51:06,951:INFO:Importing libraries
2024-07-25 15:51:06,952:INFO:Copying training dataset
2024-07-25 15:51:07,033:INFO:Defining folds
2024-07-25 15:51:07,034:INFO:Declaring metric variables
2024-07-25 15:51:07,049:INFO:Importing untrained model
2024-07-25 15:51:07,064:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 15:51:07,129:INFO:Starting cross validation
2024-07-25 15:51:07,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:07,987:INFO:Calculating mean and std
2024-07-25 15:51:07,987:INFO:Creating metrics dataframe
2024-07-25 15:51:08,009:INFO:Uploading results into container
2024-07-25 15:51:08,009:INFO:Uploading model into container now
2024-07-25 15:51:08,012:INFO:_master_model_container: 5
2024-07-25 15:51:08,013:INFO:_display_container: 2
2024-07-25 15:51:08,015:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=123...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.25,
                                     random_state=1234, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2024-07-25 15:51:08,015:INFO:create_model() successfully completed......................................
2024-07-25 15:51:08,086:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:08,086:INFO:Creating metrics dataframe
2024-07-25 15:51:08,118:INFO:Initializing Ridge Classifier
2024-07-25 15:51:08,118:INFO:Total runtime is 0.071323295434316 minutes
2024-07-25 15:51:08,118:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:08,118:INFO:Initializing create_model()
2024-07-25 15:51:08,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:08,134:INFO:Checking exceptions
2024-07-25 15:51:08,134:INFO:Importing libraries
2024-07-25 15:51:08,134:INFO:Copying training dataset
2024-07-25 15:51:08,147:INFO:Defining folds
2024-07-25 15:51:08,148:INFO:Declaring metric variables
2024-07-25 15:51:08,164:INFO:Importing untrained model
2024-07-25 15:51:08,180:INFO:Ridge Classifier Imported successfully
2024-07-25 15:51:08,195:INFO:Starting cross validation
2024-07-25 15:51:08,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:08,699:INFO:Calculating mean and std
2024-07-25 15:51:08,700:INFO:Creating metrics dataframe
2024-07-25 15:51:08,700:INFO:Uploading results into container
2024-07-25 15:51:08,700:INFO:Uploading model into container now
2024-07-25 15:51:08,700:INFO:_master_model_container: 6
2024-07-25 15:51:08,720:INFO:_display_container: 2
2024-07-25 15:51:08,721:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=1234,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.25,
                                     random_state=1234, solver='auto',
                                     tol=0.0001)
2024-07-25 15:51:08,721:INFO:create_model() successfully completed......................................
2024-07-25 15:51:08,815:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:08,816:INFO:Creating metrics dataframe
2024-07-25 15:51:08,845:INFO:Initializing Random Forest Classifier
2024-07-25 15:51:08,845:INFO:Total runtime is 0.08343758583068847 minutes
2024-07-25 15:51:08,861:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:08,861:INFO:Initializing create_model()
2024-07-25 15:51:08,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:08,861:INFO:Checking exceptions
2024-07-25 15:51:08,861:INFO:Importing libraries
2024-07-25 15:51:08,861:INFO:Copying training dataset
2024-07-25 15:51:08,861:INFO:Defining folds
2024-07-25 15:51:08,861:INFO:Declaring metric variables
2024-07-25 15:51:08,899:INFO:Importing untrained model
2024-07-25 15:51:08,912:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:51:08,945:INFO:Starting cross validation
2024-07-25 15:51:08,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:13,144:INFO:Calculating mean and std
2024-07-25 15:51:13,150:INFO:Creating metrics dataframe
2024-07-25 15:51:13,150:INFO:Uploading results into container
2024-07-25 15:51:13,150:INFO:Uploading model into container now
2024-07-25 15:51:13,150:INFO:_master_model_container: 7
2024-07-25 15:51:13,166:INFO:_display_container: 2
2024-07-25 15:51:13,176:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       mo...
                                                                       random_state=1234,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.25,
                                     random_state=1234, verbose=0,
                                     warm_start=False)
2024-07-25 15:51:13,176:INFO:create_model() successfully completed......................................
2024-07-25 15:51:13,247:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:13,247:INFO:Creating metrics dataframe
2024-07-25 15:51:13,273:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 15:51:13,273:INFO:Total runtime is 0.15724678039550782 minutes
2024-07-25 15:51:13,289:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:13,289:INFO:Initializing create_model()
2024-07-25 15:51:13,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:13,289:INFO:Checking exceptions
2024-07-25 15:51:13,289:INFO:Importing libraries
2024-07-25 15:51:13,289:INFO:Copying training dataset
2024-07-25 15:51:13,305:INFO:Defining folds
2024-07-25 15:51:13,305:INFO:Declaring metric variables
2024-07-25 15:51:13,320:INFO:Importing untrained model
2024-07-25 15:51:13,326:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 15:51:13,368:INFO:Starting cross validation
2024-07-25 15:51:13,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:14,273:INFO:Calculating mean and std
2024-07-25 15:51:14,291:INFO:Creating metrics dataframe
2024-07-25 15:51:14,291:INFO:Uploading results into container
2024-07-25 15:51:14,291:INFO:Uploading model into container now
2024-07-25 15:51:14,307:INFO:_master_model_container: 8
2024-07-25 15:51:14,307:INFO:_display_container: 2
2024-07-25 15:51:14,307:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.25,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-07-25 15:51:14,307:INFO:create_model() successfully completed......................................
2024-07-25 15:51:14,424:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:14,424:INFO:Creating metrics dataframe
2024-07-25 15:51:14,485:INFO:Initializing Ada Boost Classifier
2024-07-25 15:51:14,485:INFO:Total runtime is 0.1774401108423869 minutes
2024-07-25 15:51:14,491:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:14,491:INFO:Initializing create_model()
2024-07-25 15:51:14,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:14,491:INFO:Checking exceptions
2024-07-25 15:51:14,491:INFO:Importing libraries
2024-07-25 15:51:14,491:INFO:Copying training dataset
2024-07-25 15:51:14,527:INFO:Defining folds
2024-07-25 15:51:14,528:INFO:Declaring metric variables
2024-07-25 15:51:14,593:INFO:Importing untrained model
2024-07-25 15:51:14,613:INFO:Ada Boost Classifier Imported successfully
2024-07-25 15:51:14,639:INFO:Starting cross validation
2024-07-25 15:51:14,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:14,753:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:14,753:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:14,753:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:14,795:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:15,475:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:15,475:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:15,506:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:15,576:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:16,194:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:16,353:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:16,821:INFO:Calculating mean and std
2024-07-25 15:51:16,824:INFO:Creating metrics dataframe
2024-07-25 15:51:16,831:INFO:Uploading results into container
2024-07-25 15:51:16,832:INFO:Uploading model into container now
2024-07-25 15:51:16,833:INFO:_master_model_container: 9
2024-07-25 15:51:16,833:INFO:_display_container: 2
2024-07-25 15:51:16,837:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=1234),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.25,
                                     random_state=1234)
2024-07-25 15:51:16,838:INFO:create_model() successfully completed......................................
2024-07-25 15:51:16,928:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:16,928:INFO:Creating metrics dataframe
2024-07-25 15:51:16,965:INFO:Initializing Gradient Boosting Classifier
2024-07-25 15:51:16,965:INFO:Total runtime is 0.21877407232920332 minutes
2024-07-25 15:51:16,976:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:16,977:INFO:Initializing create_model()
2024-07-25 15:51:16,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:16,978:INFO:Checking exceptions
2024-07-25 15:51:16,978:INFO:Importing libraries
2024-07-25 15:51:16,978:INFO:Copying training dataset
2024-07-25 15:51:16,998:INFO:Defining folds
2024-07-25 15:51:16,999:INFO:Declaring metric variables
2024-07-25 15:51:17,026:INFO:Importing untrained model
2024-07-25 15:51:17,046:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 15:51:17,070:INFO:Starting cross validation
2024-07-25 15:51:17,070:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:19,855:INFO:Calculating mean and std
2024-07-25 15:51:19,855:INFO:Creating metrics dataframe
2024-07-25 15:51:19,855:INFO:Uploading results into container
2024-07-25 15:51:19,855:INFO:Uploading model into container now
2024-07-25 15:51:19,855:INFO:_master_model_container: 10
2024-07-25 15:51:19,868:INFO:_display_container: 2
2024-07-25 15:51:19,875:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.25,
                                     random_state=1234, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-07-25 15:51:19,875:INFO:create_model() successfully completed......................................
2024-07-25 15:51:19,974:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:19,974:INFO:Creating metrics dataframe
2024-07-25 15:51:20,011:INFO:Initializing Linear Discriminant Analysis
2024-07-25 15:51:20,011:INFO:Total runtime is 0.26953687270482385 minutes
2024-07-25 15:51:20,020:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:20,020:INFO:Initializing create_model()
2024-07-25 15:51:20,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:20,020:INFO:Checking exceptions
2024-07-25 15:51:20,020:INFO:Importing libraries
2024-07-25 15:51:20,020:INFO:Copying training dataset
2024-07-25 15:51:20,045:INFO:Defining folds
2024-07-25 15:51:20,046:INFO:Declaring metric variables
2024-07-25 15:51:20,065:INFO:Importing untrained model
2024-07-25 15:51:20,078:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:51:20,110:INFO:Starting cross validation
2024-07-25 15:51:20,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:20,868:INFO:Calculating mean and std
2024-07-25 15:51:20,879:INFO:Creating metrics dataframe
2024-07-25 15:51:20,891:INFO:Uploading results into container
2024-07-25 15:51:20,891:INFO:Uploading model into container now
2024-07-25 15:51:20,905:INFO:_master_model_container: 11
2024-07-25 15:51:20,906:INFO:_display_container: 2
2024-07-25 15:51:20,907:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.25, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2024-07-25 15:51:20,907:INFO:create_model() successfully completed......................................
2024-07-25 15:51:21,095:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:21,095:INFO:Creating metrics dataframe
2024-07-25 15:51:21,189:INFO:Initializing Extra Trees Classifier
2024-07-25 15:51:21,189:INFO:Total runtime is 0.2891745209693909 minutes
2024-07-25 15:51:21,224:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:21,225:INFO:Initializing create_model()
2024-07-25 15:51:21,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:21,226:INFO:Checking exceptions
2024-07-25 15:51:21,228:INFO:Importing libraries
2024-07-25 15:51:21,228:INFO:Copying training dataset
2024-07-25 15:51:21,314:INFO:Defining folds
2024-07-25 15:51:21,317:INFO:Declaring metric variables
2024-07-25 15:51:21,337:INFO:Importing untrained model
2024-07-25 15:51:21,361:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:51:21,403:INFO:Starting cross validation
2024-07-25 15:51:21,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:25,412:INFO:Calculating mean and std
2024-07-25 15:51:25,416:INFO:Creating metrics dataframe
2024-07-25 15:51:25,432:INFO:Uploading results into container
2024-07-25 15:51:25,434:INFO:Uploading model into container now
2024-07-25 15:51:25,436:INFO:_master_model_container: 12
2024-07-25 15:51:25,437:INFO:_display_container: 2
2024-07-25 15:51:25,448:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     mo...
                                                                     random_state=1234,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.25,
                                     random_state=1234, verbose=0,
                                     warm_start=False)
2024-07-25 15:51:25,448:INFO:create_model() successfully completed......................................
2024-07-25 15:51:25,570:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:25,570:INFO:Creating metrics dataframe
2024-07-25 15:51:25,617:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 15:51:25,618:INFO:Total runtime is 0.36296647787094116 minutes
2024-07-25 15:51:25,628:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:25,628:INFO:Initializing create_model()
2024-07-25 15:51:25,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:25,628:INFO:Checking exceptions
2024-07-25 15:51:25,628:INFO:Importing libraries
2024-07-25 15:51:25,632:INFO:Copying training dataset
2024-07-25 15:51:25,636:INFO:Defining folds
2024-07-25 15:51:25,636:INFO:Declaring metric variables
2024-07-25 15:51:25,661:INFO:Importing untrained model
2024-07-25 15:51:25,681:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 15:51:25,718:INFO:Starting cross validation
2024-07-25 15:51:25,718:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:27,029:INFO:Calculating mean and std
2024-07-25 15:51:27,029:INFO:Creating metrics dataframe
2024-07-25 15:51:27,029:INFO:Uploading results into container
2024-07-25 15:51:27,029:INFO:Uploading model into container now
2024-07-25 15:51:27,043:INFO:_master_model_container: 13
2024-07-25 15:51:27,043:INFO:_display_container: 2
2024-07-25 15:51:27,048:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.25,
                                     random_state=1234, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-07-25 15:51:27,048:INFO:create_model() successfully completed......................................
2024-07-25 15:51:27,140:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:27,140:INFO:Creating metrics dataframe
2024-07-25 15:51:27,184:INFO:Initializing Dummy Classifier
2024-07-25 15:51:27,184:INFO:Total runtime is 0.3890836795171102 minutes
2024-07-25 15:51:27,184:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:27,199:INFO:Initializing create_model()
2024-07-25 15:51:27,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DAA9AA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:27,199:INFO:Checking exceptions
2024-07-25 15:51:27,199:INFO:Importing libraries
2024-07-25 15:51:27,199:INFO:Copying training dataset
2024-07-25 15:51:27,199:INFO:Defining folds
2024-07-25 15:51:27,199:INFO:Declaring metric variables
2024-07-25 15:51:27,228:INFO:Importing untrained model
2024-07-25 15:51:27,243:INFO:Dummy Classifier Imported successfully
2024-07-25 15:51:27,261:INFO:Starting cross validation
2024-07-25 15:51:27,283:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:27,712:INFO:Calculating mean and std
2024-07-25 15:51:27,717:INFO:Creating metrics dataframe
2024-07-25 15:51:27,717:INFO:Uploading results into container
2024-07-25 15:51:27,717:INFO:Uploading model into container now
2024-07-25 15:51:27,717:INFO:_master_model_container: 14
2024-07-25 15:51:27,726:INFO:_display_container: 2
2024-07-25 15:51:27,727:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=1234,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.25,
                                     random_state=1234, strategy='prior')
2024-07-25 15:51:27,727:INFO:create_model() successfully completed......................................
2024-07-25 15:51:27,812:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:27,812:INFO:Creating metrics dataframe
2024-07-25 15:51:27,847:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 15:51:27,901:INFO:Initializing create_model()
2024-07-25 15:51:27,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF23A370>, estimator=CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=1234,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.25,
                                     random_state=1234, solver='auto',
                                     tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:27,901:INFO:Checking exceptions
2024-07-25 15:51:27,901:INFO:Importing libraries
2024-07-25 15:51:27,901:INFO:Copying training dataset
2024-07-25 15:51:27,918:INFO:Defining folds
2024-07-25 15:51:27,918:INFO:Declaring metric variables
2024-07-25 15:51:27,918:INFO:Importing untrained model
2024-07-25 15:51:27,918:INFO:Declaring custom model
2024-07-25 15:51:27,928:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-07-25 15:51:27,933:INFO:Cross validation set to False
2024-07-25 15:51:27,933:INFO:Fitting Model
2024-07-25 15:51:27,960:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=1234,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.25,
                                     random_state=1234, solver='auto',
                                     tol=0.0001)
2024-07-25 15:51:27,960:INFO:create_model() successfully completed......................................
2024-07-25 15:51:28,160:INFO:_master_model_container: 14
2024-07-25 15:51:28,160:INFO:_display_container: 2
2024-07-25 15:51:28,164:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=1234,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.25,
                                     random_state=1234, solver='auto',
                                     tol=0.0001)
2024-07-25 15:51:28,165:INFO:compare_models() successfully completed......................................
2024-07-25 15:51:28,824:INFO:PyCaret ClassificationExperiment
2024-07-25 15:51:28,824:INFO:Logging name: clf-default-name
2024-07-25 15:51:28,824:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:51:28,824:INFO:version 3.3.2
2024-07-25 15:51:28,824:INFO:Initializing setup()
2024-07-25 15:51:28,824:INFO:self.USI: 3f26
2024-07-25 15:51:28,824:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:51:28,824:INFO:Checking environment
2024-07-25 15:51:28,824:INFO:python_version: 3.9.19
2024-07-25 15:51:28,824:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:51:28,824:INFO:machine: AMD64
2024-07-25 15:51:28,824:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:51:28,824:INFO:Memory: svmem(total=8387862528, available=519692288, percent=93.8, used=7868170240, free=519692288)
2024-07-25 15:51:28,824:INFO:Physical Core: 2
2024-07-25 15:51:28,824:INFO:Logical Core: 4
2024-07-25 15:51:28,824:INFO:Checking libraries
2024-07-25 15:51:28,824:INFO:System:
2024-07-25 15:51:28,824:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:51:28,824:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:51:28,824:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:51:28,830:INFO:PyCaret required dependencies:
2024-07-25 15:51:28,831:INFO:                 pip: 24.0
2024-07-25 15:51:28,831:INFO:          setuptools: 69.5.1
2024-07-25 15:51:28,831:INFO:             pycaret: 3.3.2
2024-07-25 15:51:28,831:INFO:             IPython: 8.18.1
2024-07-25 15:51:28,832:INFO:          ipywidgets: 8.1.3
2024-07-25 15:51:28,832:INFO:                tqdm: 4.66.4
2024-07-25 15:51:28,832:INFO:               numpy: 1.26.4
2024-07-25 15:51:28,832:INFO:              pandas: 2.1.4
2024-07-25 15:51:28,832:INFO:              jinja2: 3.1.4
2024-07-25 15:51:28,832:INFO:               scipy: 1.11.4
2024-07-25 15:51:28,833:INFO:              joblib: 1.3.2
2024-07-25 15:51:28,833:INFO:             sklearn: 1.4.2
2024-07-25 15:51:28,833:INFO:                pyod: 2.0.1
2024-07-25 15:51:28,833:INFO:            imblearn: 0.12.3
2024-07-25 15:51:28,833:INFO:   category_encoders: 2.6.3
2024-07-25 15:51:28,833:INFO:            lightgbm: 4.4.0
2024-07-25 15:51:28,833:INFO:               numba: 0.60.0
2024-07-25 15:51:28,833:INFO:            requests: 2.32.3
2024-07-25 15:51:28,833:INFO:          matplotlib: 3.7.5
2024-07-25 15:51:28,833:INFO:          scikitplot: 0.3.7
2024-07-25 15:51:28,834:INFO:         yellowbrick: 1.5
2024-07-25 15:51:28,834:INFO:              plotly: 5.23.0
2024-07-25 15:51:28,834:INFO:    plotly-resampler: Not installed
2024-07-25 15:51:28,834:INFO:             kaleido: 0.2.1
2024-07-25 15:51:28,834:INFO:           schemdraw: 0.15
2024-07-25 15:51:28,834:INFO:         statsmodels: 0.14.2
2024-07-25 15:51:28,835:INFO:              sktime: 0.26.0
2024-07-25 15:51:28,835:INFO:               tbats: 1.1.3
2024-07-25 15:51:28,835:INFO:            pmdarima: 2.0.4
2024-07-25 15:51:28,836:INFO:              psutil: 6.0.0
2024-07-25 15:51:28,836:INFO:          markupsafe: 2.1.5
2024-07-25 15:51:28,836:INFO:             pickle5: Not installed
2024-07-25 15:51:28,836:INFO:         cloudpickle: 3.0.0
2024-07-25 15:51:28,836:INFO:         deprecation: 2.1.0
2024-07-25 15:51:28,837:INFO:              xxhash: 3.4.1
2024-07-25 15:51:28,837:INFO:           wurlitzer: Not installed
2024-07-25 15:51:28,837:INFO:PyCaret optional dependencies:
2024-07-25 15:51:28,865:INFO:                shap: Not installed
2024-07-25 15:51:28,865:INFO:           interpret: Not installed
2024-07-25 15:51:28,885:INFO:                umap: Not installed
2024-07-25 15:51:28,885:INFO:     ydata_profiling: Not installed
2024-07-25 15:51:28,886:INFO:  explainerdashboard: Not installed
2024-07-25 15:51:28,886:INFO:             autoviz: Not installed
2024-07-25 15:51:28,886:INFO:           fairlearn: Not installed
2024-07-25 15:51:28,886:INFO:          deepchecks: Not installed
2024-07-25 15:51:28,887:INFO:             xgboost: Not installed
2024-07-25 15:51:28,887:INFO:            catboost: Not installed
2024-07-25 15:51:28,887:INFO:              kmodes: Not installed
2024-07-25 15:51:28,887:INFO:             mlxtend: Not installed
2024-07-25 15:51:28,888:INFO:       statsforecast: Not installed
2024-07-25 15:51:28,888:INFO:        tune_sklearn: Not installed
2024-07-25 15:51:28,888:INFO:                 ray: Not installed
2024-07-25 15:51:28,889:INFO:            hyperopt: Not installed
2024-07-25 15:51:28,889:INFO:              optuna: Not installed
2024-07-25 15:51:28,889:INFO:               skopt: Not installed
2024-07-25 15:51:28,889:INFO:              mlflow: Not installed
2024-07-25 15:51:28,890:INFO:              gradio: Not installed
2024-07-25 15:51:28,890:INFO:             fastapi: Not installed
2024-07-25 15:51:28,894:INFO:             uvicorn: Not installed
2024-07-25 15:51:28,894:INFO:              m2cgen: Not installed
2024-07-25 15:51:28,895:INFO:           evidently: Not installed
2024-07-25 15:51:28,895:INFO:               fugue: Not installed
2024-07-25 15:51:28,896:INFO:           streamlit: Not installed
2024-07-25 15:51:28,896:INFO:             prophet: Not installed
2024-07-25 15:51:28,896:INFO:None
2024-07-25 15:51:28,896:INFO:Set up data.
2024-07-25 15:51:28,911:INFO:Set up folding strategy.
2024-07-25 15:51:28,912:INFO:Set up train/test split.
2024-07-25 15:51:28,921:INFO:Set up index.
2024-07-25 15:51:28,922:INFO:Assigning column types.
2024-07-25 15:51:28,933:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:51:29,011:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:29,012:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:29,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,147:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:29,148:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:29,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,205:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:51:29,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:29,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,397:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:29,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,444:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:51:29,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:29,693:INFO:Preparing preprocessing pipeline...
2024-07-25 15:51:29,693:INFO:Set up simple imputation.
2024-07-25 15:51:29,693:INFO:Set up column name cleaning.
2024-07-25 15:51:29,775:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:51:29,793:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:51:29,793:INFO:Creating final display dataframe.
2024-07-25 15:51:30,062:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              3f26
2024-07-25 15:51:30,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:30,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:30,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:30,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:30,406:INFO:setup() successfully completed in 1.61s...............
2024-07-25 15:51:30,428:INFO:Initializing compare_models()
2024-07-25 15:51:30,428:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, include=None, fold=None, round=4, cross_validation=False, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 15:51:30,428:INFO:Checking exceptions
2024-07-25 15:51:30,436:INFO:Preparing display monitor
2024-07-25 15:51:30,533:INFO:Initializing Logistic Regression
2024-07-25 15:51:30,533:INFO:Total runtime is 0.0 minutes
2024-07-25 15:51:30,553:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:30,554:INFO:Initializing create_model()
2024-07-25 15:51:30,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:30,555:INFO:Checking exceptions
2024-07-25 15:51:30,555:INFO:Importing libraries
2024-07-25 15:51:30,555:INFO:Copying training dataset
2024-07-25 15:51:30,574:INFO:Defining folds
2024-07-25 15:51:30,574:INFO:Declaring metric variables
2024-07-25 15:51:30,635:INFO:Importing untrained model
2024-07-25 15:51:30,657:INFO:Logistic Regression Imported successfully
2024-07-25 15:51:30,771:INFO:Cross validation set to False
2024-07-25 15:51:30,773:INFO:Fitting Model
2024-07-25 15:51:30,996:INFO:Initializing predict_model()
2024-07-25 15:51:30,996:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1234,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239EEF9A0D0>)
2024-07-25 15:51:30,996:INFO:Checking exceptions
2024-07-25 15:51:30,996:INFO:Preloading libraries
2024-07-25 15:51:31,293:INFO:_display_container: 2
2024-07-25 15:51:31,293:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:51:31,293:INFO:create_model() successfully completed......................................
2024-07-25 15:51:31,426:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:31,426:INFO:Creating metrics dataframe
2024-07-25 15:51:31,446:INFO:Initializing K Neighbors Classifier
2024-07-25 15:51:31,446:INFO:Total runtime is 0.015208204587300619 minutes
2024-07-25 15:51:31,495:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:31,495:INFO:Initializing create_model()
2024-07-25 15:51:31,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:31,495:INFO:Checking exceptions
2024-07-25 15:51:31,495:INFO:Importing libraries
2024-07-25 15:51:31,495:INFO:Copying training dataset
2024-07-25 15:51:31,516:INFO:Defining folds
2024-07-25 15:51:31,516:INFO:Declaring metric variables
2024-07-25 15:51:31,543:INFO:Importing untrained model
2024-07-25 15:51:31,561:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:51:31,582:INFO:Cross validation set to False
2024-07-25 15:51:31,582:INFO:Fitting Model
2024-07-25 15:51:31,638:INFO:Initializing predict_model()
2024-07-25 15:51:31,638:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239EF13A040>)
2024-07-25 15:51:31,638:INFO:Checking exceptions
2024-07-25 15:51:31,638:INFO:Preloading libraries
2024-07-25 15:51:32,043:INFO:_display_container: 2
2024-07-25 15:51:32,043:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:51:32,043:INFO:create_model() successfully completed......................................
2024-07-25 15:51:32,129:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:32,130:INFO:Creating metrics dataframe
2024-07-25 15:51:32,156:INFO:Initializing Naive Bayes
2024-07-25 15:51:32,157:INFO:Total runtime is 0.02706886927286784 minutes
2024-07-25 15:51:32,167:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:32,168:INFO:Initializing create_model()
2024-07-25 15:51:32,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:32,169:INFO:Checking exceptions
2024-07-25 15:51:32,169:INFO:Importing libraries
2024-07-25 15:51:32,172:INFO:Copying training dataset
2024-07-25 15:51:32,184:INFO:Defining folds
2024-07-25 15:51:32,185:INFO:Declaring metric variables
2024-07-25 15:51:32,201:INFO:Importing untrained model
2024-07-25 15:51:32,217:INFO:Naive Bayes Imported successfully
2024-07-25 15:51:32,238:INFO:Cross validation set to False
2024-07-25 15:51:32,238:INFO:Fitting Model
2024-07-25 15:51:32,284:INFO:Initializing predict_model()
2024-07-25 15:51:32,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239EF13A1F0>)
2024-07-25 15:51:32,285:INFO:Checking exceptions
2024-07-25 15:51:32,285:INFO:Preloading libraries
2024-07-25 15:51:32,565:INFO:_display_container: 2
2024-07-25 15:51:32,568:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 15:51:32,568:INFO:create_model() successfully completed......................................
2024-07-25 15:51:32,651:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:32,651:INFO:Creating metrics dataframe
2024-07-25 15:51:32,672:INFO:Initializing Decision Tree Classifier
2024-07-25 15:51:32,672:INFO:Total runtime is 0.03564970890680949 minutes
2024-07-25 15:51:32,691:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:32,691:INFO:Initializing create_model()
2024-07-25 15:51:32,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:32,691:INFO:Checking exceptions
2024-07-25 15:51:32,691:INFO:Importing libraries
2024-07-25 15:51:32,691:INFO:Copying training dataset
2024-07-25 15:51:32,711:INFO:Defining folds
2024-07-25 15:51:32,711:INFO:Declaring metric variables
2024-07-25 15:51:32,735:INFO:Importing untrained model
2024-07-25 15:51:32,748:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:51:32,762:INFO:Cross validation set to False
2024-07-25 15:51:32,764:INFO:Fitting Model
2024-07-25 15:51:32,822:INFO:Initializing predict_model()
2024-07-25 15:51:32,823:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1234,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239EEF9A0D0>)
2024-07-25 15:51:32,823:INFO:Checking exceptions
2024-07-25 15:51:32,823:INFO:Preloading libraries
2024-07-25 15:51:33,102:INFO:_display_container: 2
2024-07-25 15:51:33,111:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:51:33,111:INFO:create_model() successfully completed......................................
2024-07-25 15:51:33,199:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:33,199:INFO:Creating metrics dataframe
2024-07-25 15:51:33,238:INFO:Initializing SVM - Linear Kernel
2024-07-25 15:51:33,239:INFO:Total runtime is 0.045093568166097005 minutes
2024-07-25 15:51:33,254:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:33,255:INFO:Initializing create_model()
2024-07-25 15:51:33,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:33,256:INFO:Checking exceptions
2024-07-25 15:51:33,256:INFO:Importing libraries
2024-07-25 15:51:33,257:INFO:Copying training dataset
2024-07-25 15:51:33,258:INFO:Defining folds
2024-07-25 15:51:33,258:INFO:Declaring metric variables
2024-07-25 15:51:33,279:INFO:Importing untrained model
2024-07-25 15:51:33,299:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 15:51:33,315:INFO:Cross validation set to False
2024-07-25 15:51:33,315:INFO:Fitting Model
2024-07-25 15:51:33,375:INFO:Initializing predict_model()
2024-07-25 15:51:33,375:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=1234,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239EF13A430>)
2024-07-25 15:51:33,375:INFO:Checking exceptions
2024-07-25 15:51:33,375:INFO:Preloading libraries
2024-07-25 15:51:33,665:INFO:_display_container: 2
2024-07-25 15:51:33,671:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1234, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 15:51:33,671:INFO:create_model() successfully completed......................................
2024-07-25 15:51:33,755:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:33,755:INFO:Creating metrics dataframe
2024-07-25 15:51:33,789:INFO:Initializing Ridge Classifier
2024-07-25 15:51:33,789:INFO:Total runtime is 0.054267541567484534 minutes
2024-07-25 15:51:33,801:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:33,805:INFO:Initializing create_model()
2024-07-25 15:51:33,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:33,806:INFO:Checking exceptions
2024-07-25 15:51:33,806:INFO:Importing libraries
2024-07-25 15:51:33,807:INFO:Copying training dataset
2024-07-25 15:51:33,825:INFO:Defining folds
2024-07-25 15:51:33,826:INFO:Declaring metric variables
2024-07-25 15:51:33,844:INFO:Importing untrained model
2024-07-25 15:51:33,859:INFO:Ridge Classifier Imported successfully
2024-07-25 15:51:33,873:INFO:Cross validation set to False
2024-07-25 15:51:33,873:INFO:Fitting Model
2024-07-25 15:51:33,929:INFO:Initializing predict_model()
2024-07-25 15:51:33,929:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=1234,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239EEF92160>)
2024-07-25 15:51:33,930:INFO:Checking exceptions
2024-07-25 15:51:33,930:INFO:Preloading libraries
2024-07-25 15:51:34,202:INFO:_display_container: 2
2024-07-25 15:51:34,202:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:51:34,202:INFO:create_model() successfully completed......................................
2024-07-25 15:51:34,286:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:34,286:INFO:Creating metrics dataframe
2024-07-25 15:51:34,324:INFO:Initializing Random Forest Classifier
2024-07-25 15:51:34,324:INFO:Total runtime is 0.06318366924921671 minutes
2024-07-25 15:51:34,339:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:34,339:INFO:Initializing create_model()
2024-07-25 15:51:34,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:34,339:INFO:Checking exceptions
2024-07-25 15:51:34,339:INFO:Importing libraries
2024-07-25 15:51:34,339:INFO:Copying training dataset
2024-07-25 15:51:34,339:INFO:Defining folds
2024-07-25 15:51:34,339:INFO:Declaring metric variables
2024-07-25 15:51:34,366:INFO:Importing untrained model
2024-07-25 15:51:34,426:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:51:34,438:INFO:Cross validation set to False
2024-07-25 15:51:34,438:INFO:Fitting Model
2024-07-25 15:51:35,510:INFO:Initializing predict_model()
2024-07-25 15:51:35,511:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=1234, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239F3528820>)
2024-07-25 15:51:35,511:INFO:Checking exceptions
2024-07-25 15:51:35,511:INFO:Preloading libraries
2024-07-25 15:51:35,997:INFO:_display_container: 2
2024-07-25 15:51:36,000:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:51:36,002:INFO:create_model() successfully completed......................................
2024-07-25 15:51:36,087:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:36,087:INFO:Creating metrics dataframe
2024-07-25 15:51:36,126:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 15:51:36,126:INFO:Total runtime is 0.0932137409845988 minutes
2024-07-25 15:51:36,137:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:36,137:INFO:Initializing create_model()
2024-07-25 15:51:36,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:36,138:INFO:Checking exceptions
2024-07-25 15:51:36,138:INFO:Importing libraries
2024-07-25 15:51:36,138:INFO:Copying training dataset
2024-07-25 15:51:36,155:INFO:Defining folds
2024-07-25 15:51:36,155:INFO:Declaring metric variables
2024-07-25 15:51:36,172:INFO:Importing untrained model
2024-07-25 15:51:36,189:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 15:51:36,208:INFO:Cross validation set to False
2024-07-25 15:51:36,209:INFO:Fitting Model
2024-07-25 15:51:36,297:INFO:Initializing predict_model()
2024-07-25 15:51:36,297:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239F3528820>)
2024-07-25 15:51:36,297:INFO:Checking exceptions
2024-07-25 15:51:36,297:INFO:Preloading libraries
2024-07-25 15:51:36,652:INFO:_display_container: 2
2024-07-25 15:51:36,652:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 15:51:36,652:INFO:create_model() successfully completed......................................
2024-07-25 15:51:36,774:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:36,774:INFO:Creating metrics dataframe
2024-07-25 15:51:36,822:INFO:Initializing Ada Boost Classifier
2024-07-25 15:51:36,822:INFO:Total runtime is 0.1048214872678121 minutes
2024-07-25 15:51:36,822:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:36,837:INFO:Initializing create_model()
2024-07-25 15:51:36,837:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:36,837:INFO:Checking exceptions
2024-07-25 15:51:36,837:INFO:Importing libraries
2024-07-25 15:51:36,837:INFO:Copying training dataset
2024-07-25 15:51:36,860:INFO:Defining folds
2024-07-25 15:51:36,860:INFO:Declaring metric variables
2024-07-25 15:51:36,871:INFO:Importing untrained model
2024-07-25 15:51:36,888:INFO:Ada Boost Classifier Imported successfully
2024-07-25 15:51:36,917:INFO:Cross validation set to False
2024-07-25 15:51:36,918:INFO:Fitting Model
2024-07-25 15:51:36,977:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:51:37,270:INFO:Initializing predict_model()
2024-07-25 15:51:37,270:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=1234))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239EEF36D30>)
2024-07-25 15:51:37,270:INFO:Checking exceptions
2024-07-25 15:51:37,270:INFO:Preloading libraries
2024-07-25 15:51:37,741:INFO:_display_container: 2
2024-07-25 15:51:37,746:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1234)
2024-07-25 15:51:37,746:INFO:create_model() successfully completed......................................
2024-07-25 15:51:37,977:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:37,978:INFO:Creating metrics dataframe
2024-07-25 15:51:38,112:INFO:Initializing Gradient Boosting Classifier
2024-07-25 15:51:38,113:INFO:Total runtime is 0.12632799943288167 minutes
2024-07-25 15:51:38,145:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:38,192:INFO:Initializing create_model()
2024-07-25 15:51:38,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:38,192:INFO:Checking exceptions
2024-07-25 15:51:38,193:INFO:Importing libraries
2024-07-25 15:51:38,193:INFO:Copying training dataset
2024-07-25 15:51:38,225:INFO:Defining folds
2024-07-25 15:51:38,225:INFO:Declaring metric variables
2024-07-25 15:51:38,313:INFO:Importing untrained model
2024-07-25 15:51:38,334:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 15:51:38,446:INFO:Cross validation set to False
2024-07-25 15:51:38,446:INFO:Fitting Model
2024-07-25 15:51:39,560:INFO:Initializing predict_model()
2024-07-25 15:51:39,561:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=1234, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239F34A7940>)
2024-07-25 15:51:39,561:INFO:Checking exceptions
2024-07-25 15:51:39,561:INFO:Preloading libraries
2024-07-25 15:51:39,953:INFO:_display_container: 2
2024-07-25 15:51:39,953:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1234, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 15:51:39,953:INFO:create_model() successfully completed......................................
2024-07-25 15:51:40,038:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:40,038:INFO:Creating metrics dataframe
2024-07-25 15:51:40,079:INFO:Initializing Linear Discriminant Analysis
2024-07-25 15:51:40,079:INFO:Total runtime is 0.15910036166508992 minutes
2024-07-25 15:51:40,095:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:40,095:INFO:Initializing create_model()
2024-07-25 15:51:40,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:40,095:INFO:Checking exceptions
2024-07-25 15:51:40,095:INFO:Importing libraries
2024-07-25 15:51:40,095:INFO:Copying training dataset
2024-07-25 15:51:40,115:INFO:Defining folds
2024-07-25 15:51:40,116:INFO:Declaring metric variables
2024-07-25 15:51:40,125:INFO:Importing untrained model
2024-07-25 15:51:40,148:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:51:40,163:INFO:Cross validation set to False
2024-07-25 15:51:40,163:INFO:Fitting Model
2024-07-25 15:51:40,230:INFO:Initializing predict_model()
2024-07-25 15:51:40,231:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239F34A7820>)
2024-07-25 15:51:40,231:INFO:Checking exceptions
2024-07-25 15:51:40,231:INFO:Preloading libraries
2024-07-25 15:51:40,485:INFO:_display_container: 2
2024-07-25 15:51:40,485:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 15:51:40,485:INFO:create_model() successfully completed......................................
2024-07-25 15:51:40,566:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:40,566:INFO:Creating metrics dataframe
2024-07-25 15:51:40,614:INFO:Initializing Extra Trees Classifier
2024-07-25 15:51:40,614:INFO:Total runtime is 0.16800785462061563 minutes
2024-07-25 15:51:40,630:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:40,631:INFO:Initializing create_model()
2024-07-25 15:51:40,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:40,632:INFO:Checking exceptions
2024-07-25 15:51:40,632:INFO:Importing libraries
2024-07-25 15:51:40,632:INFO:Copying training dataset
2024-07-25 15:51:40,634:INFO:Defining folds
2024-07-25 15:51:40,634:INFO:Declaring metric variables
2024-07-25 15:51:40,658:INFO:Importing untrained model
2024-07-25 15:51:40,671:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:51:40,695:INFO:Cross validation set to False
2024-07-25 15:51:40,696:INFO:Fitting Model
2024-07-25 15:51:41,040:INFO:Initializing predict_model()
2024-07-25 15:51:41,040:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=1234, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239F36B51F0>)
2024-07-25 15:51:41,040:INFO:Checking exceptions
2024-07-25 15:51:41,040:INFO:Preloading libraries
2024-07-25 15:51:41,378:INFO:_display_container: 2
2024-07-25 15:51:41,378:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-07-25 15:51:41,378:INFO:create_model() successfully completed......................................
2024-07-25 15:51:41,472:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:41,473:INFO:Creating metrics dataframe
2024-07-25 15:51:41,511:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 15:51:41,511:INFO:Total runtime is 0.182971719900767 minutes
2024-07-25 15:51:41,511:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:41,511:INFO:Initializing create_model()
2024-07-25 15:51:41,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:41,511:INFO:Checking exceptions
2024-07-25 15:51:41,511:INFO:Importing libraries
2024-07-25 15:51:41,511:INFO:Copying training dataset
2024-07-25 15:51:41,528:INFO:Defining folds
2024-07-25 15:51:41,528:INFO:Declaring metric variables
2024-07-25 15:51:41,548:INFO:Importing untrained model
2024-07-25 15:51:41,603:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 15:51:41,614:INFO:Cross validation set to False
2024-07-25 15:51:41,614:INFO:Fitting Model
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-25 15:51:41,719:INFO:[LightGBM] [Info] Number of positive: 187, number of negative: 350
2024-07-25 15:51:41,719:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000117 seconds.
2024-07-25 15:51:41,719:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-25 15:51:41,719:INFO:[LightGBM] [Info] Total Bins 612
2024-07-25 15:51:41,719:INFO:[LightGBM] [Info] Number of data points in the train set: 537, number of used features: 8
2024-07-25 15:51:41,719:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.348231 -> initscore=-0.626825
2024-07-25 15:51:41,719:INFO:[LightGBM] [Info] Start training from score -0.626825
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:51:41,831:INFO:Initializing predict_model()
2024-07-25 15:51:41,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=1234, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239F37E4A60>)
2024-07-25 15:51:41,832:INFO:Checking exceptions
2024-07-25 15:51:41,833:INFO:Preloading libraries
2024-07-25 15:51:42,114:INFO:_display_container: 2
2024-07-25 15:51:42,134:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1234, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 15:51:42,134:INFO:create_model() successfully completed......................................
2024-07-25 15:51:42,216:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:42,216:INFO:Creating metrics dataframe
2024-07-25 15:51:42,243:INFO:Initializing Dummy Classifier
2024-07-25 15:51:42,243:INFO:Total runtime is 0.1951738675435384 minutes
2024-07-25 15:51:42,259:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:42,259:INFO:Initializing create_model()
2024-07-25 15:51:42,259:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF23A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:42,259:INFO:Checking exceptions
2024-07-25 15:51:42,259:INFO:Importing libraries
2024-07-25 15:51:42,259:INFO:Copying training dataset
2024-07-25 15:51:42,286:INFO:Defining folds
2024-07-25 15:51:42,286:INFO:Declaring metric variables
2024-07-25 15:51:42,302:INFO:Importing untrained model
2024-07-25 15:51:42,321:INFO:Dummy Classifier Imported successfully
2024-07-25 15:51:42,342:INFO:Cross validation set to False
2024-07-25 15:51:42,342:INFO:Fitting Model
2024-07-25 15:51:42,388:INFO:Initializing predict_model()
2024-07-25 15:51:42,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigre...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=1234,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239EEF36D30>)
2024-07-25 15:51:42,388:INFO:Checking exceptions
2024-07-25 15:51:42,388:INFO:Preloading libraries
2024-07-25 15:51:42,570:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:51:42,664:INFO:_display_container: 2
2024-07-25 15:51:42,664:INFO:DummyClassifier(constant=None, random_state=1234, strategy='prior')
2024-07-25 15:51:42,664:INFO:create_model() successfully completed......................................
2024-07-25 15:51:42,747:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:42,747:INFO:Creating metrics dataframe
2024-07-25 15:51:42,793:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 15:51:42,815:INFO:Initializing create_model()
2024-07-25 15:51:42,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D999BE20>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:42,815:INFO:Checking exceptions
2024-07-25 15:51:42,815:INFO:Importing libraries
2024-07-25 15:51:42,815:INFO:Copying training dataset
2024-07-25 15:51:42,843:INFO:Defining folds
2024-07-25 15:51:42,844:INFO:Declaring metric variables
2024-07-25 15:51:42,845:INFO:Importing untrained model
2024-07-25 15:51:42,845:INFO:Declaring custom model
2024-07-25 15:51:42,849:INFO:Ridge Classifier Imported successfully
2024-07-25 15:51:42,853:INFO:Cross validation set to False
2024-07-25 15:51:42,853:INFO:Fitting Model
2024-07-25 15:51:42,876:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:51:42,876:INFO:create_model() successfully completed......................................
2024-07-25 15:51:43,069:INFO:_master_model_container: 0
2024-07-25 15:51:43,069:INFO:_display_container: 2
2024-07-25 15:51:43,069:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:51:43,069:INFO:compare_models() successfully completed......................................
2024-07-25 15:51:43,744:INFO:PyCaret ClassificationExperiment
2024-07-25 15:51:43,744:INFO:Logging name: clf-default-name
2024-07-25 15:51:43,744:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:51:43,744:INFO:version 3.3.2
2024-07-25 15:51:43,744:INFO:Initializing setup()
2024-07-25 15:51:43,744:INFO:self.USI: e48f
2024-07-25 15:51:43,744:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:51:43,758:INFO:Checking environment
2024-07-25 15:51:43,759:INFO:python_version: 3.9.19
2024-07-25 15:51:43,759:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:51:43,760:INFO:machine: AMD64
2024-07-25 15:51:43,760:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:51:43,762:INFO:Memory: svmem(total=8387862528, available=594419712, percent=92.9, used=7793442816, free=594419712)
2024-07-25 15:51:43,762:INFO:Physical Core: 2
2024-07-25 15:51:43,762:INFO:Logical Core: 4
2024-07-25 15:51:43,762:INFO:Checking libraries
2024-07-25 15:51:43,762:INFO:System:
2024-07-25 15:51:43,762:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:51:43,762:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:51:43,762:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:51:43,762:INFO:PyCaret required dependencies:
2024-07-25 15:51:43,762:INFO:                 pip: 24.0
2024-07-25 15:51:43,762:INFO:          setuptools: 69.5.1
2024-07-25 15:51:43,762:INFO:             pycaret: 3.3.2
2024-07-25 15:51:43,765:INFO:             IPython: 8.18.1
2024-07-25 15:51:43,765:INFO:          ipywidgets: 8.1.3
2024-07-25 15:51:43,765:INFO:                tqdm: 4.66.4
2024-07-25 15:51:43,766:INFO:               numpy: 1.26.4
2024-07-25 15:51:43,766:INFO:              pandas: 2.1.4
2024-07-25 15:51:43,766:INFO:              jinja2: 3.1.4
2024-07-25 15:51:43,766:INFO:               scipy: 1.11.4
2024-07-25 15:51:43,766:INFO:              joblib: 1.3.2
2024-07-25 15:51:43,766:INFO:             sklearn: 1.4.2
2024-07-25 15:51:43,766:INFO:                pyod: 2.0.1
2024-07-25 15:51:43,766:INFO:            imblearn: 0.12.3
2024-07-25 15:51:43,766:INFO:   category_encoders: 2.6.3
2024-07-25 15:51:43,766:INFO:            lightgbm: 4.4.0
2024-07-25 15:51:43,766:INFO:               numba: 0.60.0
2024-07-25 15:51:43,766:INFO:            requests: 2.32.3
2024-07-25 15:51:43,766:INFO:          matplotlib: 3.7.5
2024-07-25 15:51:43,766:INFO:          scikitplot: 0.3.7
2024-07-25 15:51:43,766:INFO:         yellowbrick: 1.5
2024-07-25 15:51:43,766:INFO:              plotly: 5.23.0
2024-07-25 15:51:43,766:INFO:    plotly-resampler: Not installed
2024-07-25 15:51:43,766:INFO:             kaleido: 0.2.1
2024-07-25 15:51:43,766:INFO:           schemdraw: 0.15
2024-07-25 15:51:43,766:INFO:         statsmodels: 0.14.2
2024-07-25 15:51:43,766:INFO:              sktime: 0.26.0
2024-07-25 15:51:43,766:INFO:               tbats: 1.1.3
2024-07-25 15:51:43,766:INFO:            pmdarima: 2.0.4
2024-07-25 15:51:43,766:INFO:              psutil: 6.0.0
2024-07-25 15:51:43,766:INFO:          markupsafe: 2.1.5
2024-07-25 15:51:43,766:INFO:             pickle5: Not installed
2024-07-25 15:51:43,766:INFO:         cloudpickle: 3.0.0
2024-07-25 15:51:43,766:INFO:         deprecation: 2.1.0
2024-07-25 15:51:43,766:INFO:              xxhash: 3.4.1
2024-07-25 15:51:43,766:INFO:           wurlitzer: Not installed
2024-07-25 15:51:43,766:INFO:PyCaret optional dependencies:
2024-07-25 15:51:43,766:INFO:                shap: Not installed
2024-07-25 15:51:43,766:INFO:           interpret: Not installed
2024-07-25 15:51:43,766:INFO:                umap: Not installed
2024-07-25 15:51:43,766:INFO:     ydata_profiling: Not installed
2024-07-25 15:51:43,766:INFO:  explainerdashboard: Not installed
2024-07-25 15:51:43,766:INFO:             autoviz: Not installed
2024-07-25 15:51:43,766:INFO:           fairlearn: Not installed
2024-07-25 15:51:43,766:INFO:          deepchecks: Not installed
2024-07-25 15:51:43,766:INFO:             xgboost: Not installed
2024-07-25 15:51:43,766:INFO:            catboost: Not installed
2024-07-25 15:51:43,766:INFO:              kmodes: Not installed
2024-07-25 15:51:43,766:INFO:             mlxtend: Not installed
2024-07-25 15:51:43,766:INFO:       statsforecast: Not installed
2024-07-25 15:51:43,766:INFO:        tune_sklearn: Not installed
2024-07-25 15:51:43,766:INFO:                 ray: Not installed
2024-07-25 15:51:43,766:INFO:            hyperopt: Not installed
2024-07-25 15:51:43,766:INFO:              optuna: Not installed
2024-07-25 15:51:43,766:INFO:               skopt: Not installed
2024-07-25 15:51:43,766:INFO:              mlflow: Not installed
2024-07-25 15:51:43,766:INFO:              gradio: Not installed
2024-07-25 15:51:43,766:INFO:             fastapi: Not installed
2024-07-25 15:51:43,766:INFO:             uvicorn: Not installed
2024-07-25 15:51:43,776:INFO:              m2cgen: Not installed
2024-07-25 15:51:43,777:INFO:           evidently: Not installed
2024-07-25 15:51:43,777:INFO:               fugue: Not installed
2024-07-25 15:51:43,777:INFO:           streamlit: Not installed
2024-07-25 15:51:43,777:INFO:             prophet: Not installed
2024-07-25 15:51:43,778:INFO:None
2024-07-25 15:51:43,778:INFO:Set up data.
2024-07-25 15:51:43,795:INFO:Set up folding strategy.
2024-07-25 15:51:43,795:INFO:Set up train/test split.
2024-07-25 15:51:43,806:INFO:Set up index.
2024-07-25 15:51:43,806:INFO:Assigning column types.
2024-07-25 15:51:43,817:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:51:43,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:43,876:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:43,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:43,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:43,994:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:43,996:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:44,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,054:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:51:44,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:44,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,261:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:44,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,306:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:51:44,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:44,548:INFO:Preparing preprocessing pipeline...
2024-07-25 15:51:44,550:INFO:Set up simple imputation.
2024-07-25 15:51:44,551:INFO:Set up column name cleaning.
2024-07-25 15:51:44,634:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:51:44,652:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:51:44,652:INFO:Creating final display dataframe.
2024-07-25 15:51:44,943:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              e48f
2024-07-25 15:51:45,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:45,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:45,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:45,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:45,207:INFO:setup() successfully completed in 1.48s...............
2024-07-25 15:51:45,207:INFO:Initializing create_model()
2024-07-25 15:51:45,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF214340>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:45,207:INFO:Checking exceptions
2024-07-25 15:51:45,264:INFO:Importing libraries
2024-07-25 15:51:45,265:INFO:Copying training dataset
2024-07-25 15:51:45,278:INFO:Defining folds
2024-07-25 15:51:45,278:INFO:Declaring metric variables
2024-07-25 15:51:45,294:INFO:Importing untrained model
2024-07-25 15:51:45,306:INFO:Logistic Regression Imported successfully
2024-07-25 15:51:45,332:INFO:Starting cross validation
2024-07-25 15:51:45,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:46,024:INFO:Calculating mean and std
2024-07-25 15:51:46,024:INFO:Creating metrics dataframe
2024-07-25 15:51:46,040:INFO:Finalizing model
2024-07-25 15:51:46,123:INFO:Uploading results into container
2024-07-25 15:51:46,123:INFO:Uploading model into container now
2024-07-25 15:51:46,173:INFO:_master_model_container: 1
2024-07-25 15:51:46,173:INFO:_display_container: 2
2024-07-25 15:51:46,173:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:51:46,173:INFO:create_model() successfully completed......................................
2024-07-25 15:51:46,311:INFO:Initializing create_model()
2024-07-25 15:51:46,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF214340>, estimator=lr, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:46,311:INFO:Checking exceptions
2024-07-25 15:51:46,440:INFO:Importing libraries
2024-07-25 15:51:46,440:INFO:Copying training dataset
2024-07-25 15:51:46,459:INFO:Defining folds
2024-07-25 15:51:46,459:INFO:Declaring metric variables
2024-07-25 15:51:46,502:INFO:Importing untrained model
2024-07-25 15:51:46,516:INFO:Logistic Regression Imported successfully
2024-07-25 15:51:46,540:INFO:Starting cross validation
2024-07-25 15:51:46,540:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:46,907:INFO:Calculating mean and std
2024-07-25 15:51:46,907:INFO:Creating metrics dataframe
2024-07-25 15:51:46,907:INFO:Finalizing model
2024-07-25 15:51:47,000:INFO:Uploading results into container
2024-07-25 15:51:47,002:INFO:Uploading model into container now
2024-07-25 15:51:47,022:INFO:_master_model_container: 2
2024-07-25 15:51:47,022:INFO:_display_container: 3
2024-07-25 15:51:47,022:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:51:47,022:INFO:create_model() successfully completed......................................
2024-07-25 15:51:47,222:INFO:Initializing create_model()
2024-07-25 15:51:47,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF214340>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 0.5})
2024-07-25 15:51:47,222:INFO:Checking exceptions
2024-07-25 15:51:47,290:INFO:Importing libraries
2024-07-25 15:51:47,290:INFO:Copying training dataset
2024-07-25 15:51:47,328:INFO:Defining folds
2024-07-25 15:51:47,328:INFO:Declaring metric variables
2024-07-25 15:51:47,344:INFO:Importing untrained model
2024-07-25 15:51:47,377:INFO:Logistic Regression Imported successfully
2024-07-25 15:51:47,405:INFO:Starting cross validation
2024-07-25 15:51:47,422:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:48,105:INFO:Calculating mean and std
2024-07-25 15:51:48,105:INFO:Creating metrics dataframe
2024-07-25 15:51:48,105:INFO:Finalizing model
2024-07-25 15:51:48,204:INFO:Uploading results into container
2024-07-25 15:51:48,205:INFO:Uploading model into container now
2024-07-25 15:51:48,243:INFO:_master_model_container: 3
2024-07-25 15:51:48,243:INFO:_display_container: 4
2024-07-25 15:51:48,243:INFO:LogisticRegression(C=0.5, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:51:48,243:INFO:create_model() successfully completed......................................
2024-07-25 15:51:48,375:INFO:gpu_param set to False
2024-07-25 15:51:48,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:48,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:48,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:48,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,453:INFO:PyCaret ClassificationExperiment
2024-07-25 15:51:49,453:INFO:Logging name: clf-default-name
2024-07-25 15:51:49,453:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:51:49,453:INFO:version 3.3.2
2024-07-25 15:51:49,453:INFO:Initializing setup()
2024-07-25 15:51:49,453:INFO:self.USI: 8d12
2024-07-25 15:51:49,453:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:51:49,453:INFO:Checking environment
2024-07-25 15:51:49,453:INFO:python_version: 3.9.19
2024-07-25 15:51:49,453:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:51:49,453:INFO:machine: AMD64
2024-07-25 15:51:49,453:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:51:49,453:INFO:Memory: svmem(total=8387862528, available=653205504, percent=92.2, used=7734657024, free=653205504)
2024-07-25 15:51:49,453:INFO:Physical Core: 2
2024-07-25 15:51:49,453:INFO:Logical Core: 4
2024-07-25 15:51:49,453:INFO:Checking libraries
2024-07-25 15:51:49,453:INFO:System:
2024-07-25 15:51:49,453:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:51:49,453:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:51:49,453:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:51:49,453:INFO:PyCaret required dependencies:
2024-07-25 15:51:49,453:INFO:                 pip: 24.0
2024-07-25 15:51:49,453:INFO:          setuptools: 69.5.1
2024-07-25 15:51:49,453:INFO:             pycaret: 3.3.2
2024-07-25 15:51:49,453:INFO:             IPython: 8.18.1
2024-07-25 15:51:49,453:INFO:          ipywidgets: 8.1.3
2024-07-25 15:51:49,453:INFO:                tqdm: 4.66.4
2024-07-25 15:51:49,453:INFO:               numpy: 1.26.4
2024-07-25 15:51:49,453:INFO:              pandas: 2.1.4
2024-07-25 15:51:49,453:INFO:              jinja2: 3.1.4
2024-07-25 15:51:49,453:INFO:               scipy: 1.11.4
2024-07-25 15:51:49,453:INFO:              joblib: 1.3.2
2024-07-25 15:51:49,453:INFO:             sklearn: 1.4.2
2024-07-25 15:51:49,453:INFO:                pyod: 2.0.1
2024-07-25 15:51:49,453:INFO:            imblearn: 0.12.3
2024-07-25 15:51:49,453:INFO:   category_encoders: 2.6.3
2024-07-25 15:51:49,453:INFO:            lightgbm: 4.4.0
2024-07-25 15:51:49,453:INFO:               numba: 0.60.0
2024-07-25 15:51:49,453:INFO:            requests: 2.32.3
2024-07-25 15:51:49,453:INFO:          matplotlib: 3.7.5
2024-07-25 15:51:49,453:INFO:          scikitplot: 0.3.7
2024-07-25 15:51:49,453:INFO:         yellowbrick: 1.5
2024-07-25 15:51:49,453:INFO:              plotly: 5.23.0
2024-07-25 15:51:49,453:INFO:    plotly-resampler: Not installed
2024-07-25 15:51:49,453:INFO:             kaleido: 0.2.1
2024-07-25 15:51:49,453:INFO:           schemdraw: 0.15
2024-07-25 15:51:49,453:INFO:         statsmodels: 0.14.2
2024-07-25 15:51:49,453:INFO:              sktime: 0.26.0
2024-07-25 15:51:49,453:INFO:               tbats: 1.1.3
2024-07-25 15:51:49,453:INFO:            pmdarima: 2.0.4
2024-07-25 15:51:49,453:INFO:              psutil: 6.0.0
2024-07-25 15:51:49,453:INFO:          markupsafe: 2.1.5
2024-07-25 15:51:49,453:INFO:             pickle5: Not installed
2024-07-25 15:51:49,453:INFO:         cloudpickle: 3.0.0
2024-07-25 15:51:49,453:INFO:         deprecation: 2.1.0
2024-07-25 15:51:49,453:INFO:              xxhash: 3.4.1
2024-07-25 15:51:49,453:INFO:           wurlitzer: Not installed
2024-07-25 15:51:49,453:INFO:PyCaret optional dependencies:
2024-07-25 15:51:49,453:INFO:                shap: Not installed
2024-07-25 15:51:49,453:INFO:           interpret: Not installed
2024-07-25 15:51:49,453:INFO:                umap: Not installed
2024-07-25 15:51:49,453:INFO:     ydata_profiling: Not installed
2024-07-25 15:51:49,453:INFO:  explainerdashboard: Not installed
2024-07-25 15:51:49,453:INFO:             autoviz: Not installed
2024-07-25 15:51:49,453:INFO:           fairlearn: Not installed
2024-07-25 15:51:49,453:INFO:          deepchecks: Not installed
2024-07-25 15:51:49,453:INFO:             xgboost: Not installed
2024-07-25 15:51:49,453:INFO:            catboost: Not installed
2024-07-25 15:51:49,453:INFO:              kmodes: Not installed
2024-07-25 15:51:49,453:INFO:             mlxtend: Not installed
2024-07-25 15:51:49,453:INFO:       statsforecast: Not installed
2024-07-25 15:51:49,453:INFO:        tune_sklearn: Not installed
2024-07-25 15:51:49,453:INFO:                 ray: Not installed
2024-07-25 15:51:49,453:INFO:            hyperopt: Not installed
2024-07-25 15:51:49,453:INFO:              optuna: Not installed
2024-07-25 15:51:49,453:INFO:               skopt: Not installed
2024-07-25 15:51:49,453:INFO:              mlflow: Not installed
2024-07-25 15:51:49,453:INFO:              gradio: Not installed
2024-07-25 15:51:49,453:INFO:             fastapi: Not installed
2024-07-25 15:51:49,453:INFO:             uvicorn: Not installed
2024-07-25 15:51:49,453:INFO:              m2cgen: Not installed
2024-07-25 15:51:49,453:INFO:           evidently: Not installed
2024-07-25 15:51:49,453:INFO:               fugue: Not installed
2024-07-25 15:51:49,453:INFO:           streamlit: Not installed
2024-07-25 15:51:49,453:INFO:             prophet: Not installed
2024-07-25 15:51:49,453:INFO:None
2024-07-25 15:51:49,453:INFO:Set up data.
2024-07-25 15:51:49,470:INFO:Set up folding strategy.
2024-07-25 15:51:49,470:INFO:Set up train/test split.
2024-07-25 15:51:49,470:INFO:Set up index.
2024-07-25 15:51:49,470:INFO:Assigning column types.
2024-07-25 15:51:49,491:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:51:49,570:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:49,570:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:49,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:49,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:49,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,719:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:51:49,797:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:49,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,907:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:49,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:49,960:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:51:50,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:50,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:50,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:50,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:50,186:INFO:Preparing preprocessing pipeline...
2024-07-25 15:51:50,186:INFO:Set up simple imputation.
2024-07-25 15:51:50,186:INFO:Set up column name cleaning.
2024-07-25 15:51:50,275:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:51:50,289:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:51:50,289:INFO:Creating final display dataframe.
2024-07-25 15:51:50,566:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              8d12
2024-07-25 15:51:50,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:50,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:50,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:50,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:50,802:INFO:setup() successfully completed in 1.37s...............
2024-07-25 15:51:50,818:INFO:Initializing create_model()
2024-07-25 15:51:50,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A7220>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:50,818:INFO:Checking exceptions
2024-07-25 15:51:50,867:INFO:Importing libraries
2024-07-25 15:51:50,868:INFO:Copying training dataset
2024-07-25 15:51:50,868:INFO:Defining folds
2024-07-25 15:51:50,868:INFO:Declaring metric variables
2024-07-25 15:51:50,896:INFO:Importing untrained model
2024-07-25 15:51:50,908:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:51:50,930:INFO:Starting cross validation
2024-07-25 15:51:50,935:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:51,373:INFO:Calculating mean and std
2024-07-25 15:51:51,374:INFO:Creating metrics dataframe
2024-07-25 15:51:51,385:INFO:Finalizing model
2024-07-25 15:51:51,421:INFO:Uploading results into container
2024-07-25 15:51:51,421:INFO:Uploading model into container now
2024-07-25 15:51:51,451:INFO:_master_model_container: 1
2024-07-25 15:51:51,451:INFO:_display_container: 2
2024-07-25 15:51:51,464:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:51:51,464:INFO:create_model() successfully completed......................................
2024-07-25 15:51:52,242:INFO:PyCaret ClassificationExperiment
2024-07-25 15:51:52,242:INFO:Logging name: clf-default-name
2024-07-25 15:51:52,242:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:51:52,242:INFO:version 3.3.2
2024-07-25 15:51:52,242:INFO:Initializing setup()
2024-07-25 15:51:52,242:INFO:self.USI: f262
2024-07-25 15:51:52,243:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:51:52,243:INFO:Checking environment
2024-07-25 15:51:52,243:INFO:python_version: 3.9.19
2024-07-25 15:51:52,243:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:51:52,243:INFO:machine: AMD64
2024-07-25 15:51:52,243:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:51:52,243:INFO:Memory: svmem(total=8387862528, available=652148736, percent=92.2, used=7735713792, free=652148736)
2024-07-25 15:51:52,243:INFO:Physical Core: 2
2024-07-25 15:51:52,244:INFO:Logical Core: 4
2024-07-25 15:51:52,244:INFO:Checking libraries
2024-07-25 15:51:52,244:INFO:System:
2024-07-25 15:51:52,244:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:51:52,244:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:51:52,244:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:51:52,244:INFO:PyCaret required dependencies:
2024-07-25 15:51:52,244:INFO:                 pip: 24.0
2024-07-25 15:51:52,244:INFO:          setuptools: 69.5.1
2024-07-25 15:51:52,244:INFO:             pycaret: 3.3.2
2024-07-25 15:51:52,244:INFO:             IPython: 8.18.1
2024-07-25 15:51:52,245:INFO:          ipywidgets: 8.1.3
2024-07-25 15:51:52,245:INFO:                tqdm: 4.66.4
2024-07-25 15:51:52,245:INFO:               numpy: 1.26.4
2024-07-25 15:51:52,245:INFO:              pandas: 2.1.4
2024-07-25 15:51:52,245:INFO:              jinja2: 3.1.4
2024-07-25 15:51:52,245:INFO:               scipy: 1.11.4
2024-07-25 15:51:52,245:INFO:              joblib: 1.3.2
2024-07-25 15:51:52,245:INFO:             sklearn: 1.4.2
2024-07-25 15:51:52,245:INFO:                pyod: 2.0.1
2024-07-25 15:51:52,245:INFO:            imblearn: 0.12.3
2024-07-25 15:51:52,245:INFO:   category_encoders: 2.6.3
2024-07-25 15:51:52,246:INFO:            lightgbm: 4.4.0
2024-07-25 15:51:52,246:INFO:               numba: 0.60.0
2024-07-25 15:51:52,246:INFO:            requests: 2.32.3
2024-07-25 15:51:52,246:INFO:          matplotlib: 3.7.5
2024-07-25 15:51:52,246:INFO:          scikitplot: 0.3.7
2024-07-25 15:51:52,246:INFO:         yellowbrick: 1.5
2024-07-25 15:51:52,246:INFO:              plotly: 5.23.0
2024-07-25 15:51:52,246:INFO:    plotly-resampler: Not installed
2024-07-25 15:51:52,246:INFO:             kaleido: 0.2.1
2024-07-25 15:51:52,246:INFO:           schemdraw: 0.15
2024-07-25 15:51:52,246:INFO:         statsmodels: 0.14.2
2024-07-25 15:51:52,247:INFO:              sktime: 0.26.0
2024-07-25 15:51:52,247:INFO:               tbats: 1.1.3
2024-07-25 15:51:52,247:INFO:            pmdarima: 2.0.4
2024-07-25 15:51:52,247:INFO:              psutil: 6.0.0
2024-07-25 15:51:52,247:INFO:          markupsafe: 2.1.5
2024-07-25 15:51:52,247:INFO:             pickle5: Not installed
2024-07-25 15:51:52,247:INFO:         cloudpickle: 3.0.0
2024-07-25 15:51:52,247:INFO:         deprecation: 2.1.0
2024-07-25 15:51:52,247:INFO:              xxhash: 3.4.1
2024-07-25 15:51:52,247:INFO:           wurlitzer: Not installed
2024-07-25 15:51:52,247:INFO:PyCaret optional dependencies:
2024-07-25 15:51:52,248:INFO:                shap: Not installed
2024-07-25 15:51:52,248:INFO:           interpret: Not installed
2024-07-25 15:51:52,248:INFO:                umap: Not installed
2024-07-25 15:51:52,248:INFO:     ydata_profiling: Not installed
2024-07-25 15:51:52,248:INFO:  explainerdashboard: Not installed
2024-07-25 15:51:52,248:INFO:             autoviz: Not installed
2024-07-25 15:51:52,248:INFO:           fairlearn: Not installed
2024-07-25 15:51:52,248:INFO:          deepchecks: Not installed
2024-07-25 15:51:52,248:INFO:             xgboost: Not installed
2024-07-25 15:51:52,249:INFO:            catboost: Not installed
2024-07-25 15:51:52,249:INFO:              kmodes: Not installed
2024-07-25 15:51:52,249:INFO:             mlxtend: Not installed
2024-07-25 15:51:52,249:INFO:       statsforecast: Not installed
2024-07-25 15:51:52,249:INFO:        tune_sklearn: Not installed
2024-07-25 15:51:52,249:INFO:                 ray: Not installed
2024-07-25 15:51:52,249:INFO:            hyperopt: Not installed
2024-07-25 15:51:52,250:INFO:              optuna: Not installed
2024-07-25 15:51:52,250:INFO:               skopt: Not installed
2024-07-25 15:51:52,251:INFO:              mlflow: Not installed
2024-07-25 15:51:52,251:INFO:              gradio: Not installed
2024-07-25 15:51:52,251:INFO:             fastapi: Not installed
2024-07-25 15:51:52,251:INFO:             uvicorn: Not installed
2024-07-25 15:51:52,252:INFO:              m2cgen: Not installed
2024-07-25 15:51:52,252:INFO:           evidently: Not installed
2024-07-25 15:51:52,252:INFO:               fugue: Not installed
2024-07-25 15:51:52,252:INFO:           streamlit: Not installed
2024-07-25 15:51:52,252:INFO:             prophet: Not installed
2024-07-25 15:51:52,252:INFO:None
2024-07-25 15:51:52,252:INFO:Set up data.
2024-07-25 15:51:52,263:INFO:Set up folding strategy.
2024-07-25 15:51:52,264:INFO:Set up train/test split.
2024-07-25 15:51:52,273:INFO:Set up index.
2024-07-25 15:51:52,273:INFO:Assigning column types.
2024-07-25 15:51:52,281:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:51:52,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:52,355:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:52,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:51:52,469:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:52,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,500:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:51:52,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:52,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,712:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:51:52,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,750:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:51:52,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:52,988:INFO:Preparing preprocessing pipeline...
2024-07-25 15:51:52,990:INFO:Set up simple imputation.
2024-07-25 15:51:52,992:INFO:Set up column name cleaning.
2024-07-25 15:51:53,071:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:51:53,083:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:51:53,083:INFO:Creating final display dataframe.
2024-07-25 15:51:53,349:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              f262
2024-07-25 15:51:53,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:53,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:53,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:53,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:51:53,592:INFO:setup() successfully completed in 1.37s...............
2024-07-25 15:51:53,602:INFO:Initializing create_model()
2024-07-25 15:51:53,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A7F70>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:53,604:INFO:Checking exceptions
2024-07-25 15:51:53,654:INFO:Importing libraries
2024-07-25 15:51:53,655:INFO:Copying training dataset
2024-07-25 15:51:53,671:INFO:Defining folds
2024-07-25 15:51:53,671:INFO:Declaring metric variables
2024-07-25 15:51:53,683:INFO:Importing untrained model
2024-07-25 15:51:53,698:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:51:53,720:INFO:Starting cross validation
2024-07-25 15:51:53,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:54,182:INFO:Calculating mean and std
2024-07-25 15:51:54,182:INFO:Creating metrics dataframe
2024-07-25 15:51:54,182:INFO:Finalizing model
2024-07-25 15:51:54,243:INFO:Uploading results into container
2024-07-25 15:51:54,246:INFO:Uploading model into container now
2024-07-25 15:51:54,289:INFO:_master_model_container: 1
2024-07-25 15:51:54,290:INFO:_display_container: 2
2024-07-25 15:51:54,291:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:51:54,291:INFO:create_model() successfully completed......................................
2024-07-25 15:51:54,412:INFO:Initializing tune_model()
2024-07-25 15:51:54,412:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A7F70>)
2024-07-25 15:51:54,412:INFO:Checking exceptions
2024-07-25 15:51:54,549:INFO:Copying training dataset
2024-07-25 15:51:54,551:INFO:Checking base model
2024-07-25 15:51:54,551:INFO:Base model : Decision Tree Classifier
2024-07-25 15:51:54,624:INFO:Declaring metric variables
2024-07-25 15:51:54,639:INFO:Defining Hyperparameters
2024-07-25 15:51:54,759:INFO:Tuning with n_jobs=-1
2024-07-25 15:51:54,759:INFO:Initializing RandomizedSearchCV
2024-07-25 15:51:58,397:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'gini'}
2024-07-25 15:51:58,397:INFO:Hyperparameter search completed
2024-07-25 15:51:58,397:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:58,414:INFO:Initializing create_model()
2024-07-25 15:51:58,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A7F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF22F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 16, 'criterion': 'gini'})
2024-07-25 15:51:58,414:INFO:Checking exceptions
2024-07-25 15:51:58,414:INFO:Importing libraries
2024-07-25 15:51:58,414:INFO:Copying training dataset
2024-07-25 15:51:58,430:INFO:Defining folds
2024-07-25 15:51:58,430:INFO:Declaring metric variables
2024-07-25 15:51:58,462:INFO:Importing untrained model
2024-07-25 15:51:58,462:INFO:Declaring custom model
2024-07-25 15:51:58,480:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:51:58,497:INFO:Starting cross validation
2024-07-25 15:51:58,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:59,063:INFO:Calculating mean and std
2024-07-25 15:51:59,067:INFO:Creating metrics dataframe
2024-07-25 15:51:59,084:INFO:Finalizing model
2024-07-25 15:51:59,124:INFO:Uploading results into container
2024-07-25 15:51:59,127:INFO:Uploading model into container now
2024-07-25 15:51:59,129:INFO:_master_model_container: 2
2024-07-25 15:51:59,130:INFO:_display_container: 3
2024-07-25 15:51:59,132:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:51:59,132:INFO:create_model() successfully completed......................................
2024-07-25 15:51:59,225:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:59,226:INFO:choose_better activated
2024-07-25 15:51:59,238:INFO:SubProcess create_model() called ==================================
2024-07-25 15:51:59,239:INFO:Initializing create_model()
2024-07-25 15:51:59,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A7F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:51:59,240:INFO:Checking exceptions
2024-07-25 15:51:59,245:INFO:Importing libraries
2024-07-25 15:51:59,245:INFO:Copying training dataset
2024-07-25 15:51:59,256:INFO:Defining folds
2024-07-25 15:51:59,256:INFO:Declaring metric variables
2024-07-25 15:51:59,257:INFO:Importing untrained model
2024-07-25 15:51:59,257:INFO:Declaring custom model
2024-07-25 15:51:59,261:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:51:59,261:INFO:Starting cross validation
2024-07-25 15:51:59,265:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:51:59,802:INFO:Calculating mean and std
2024-07-25 15:51:59,803:INFO:Creating metrics dataframe
2024-07-25 15:51:59,808:INFO:Finalizing model
2024-07-25 15:51:59,840:INFO:Uploading results into container
2024-07-25 15:51:59,843:INFO:Uploading model into container now
2024-07-25 15:51:59,844:INFO:_master_model_container: 3
2024-07-25 15:51:59,844:INFO:_display_container: 4
2024-07-25 15:51:59,845:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:51:59,845:INFO:create_model() successfully completed......................................
2024-07-25 15:51:59,914:INFO:SubProcess create_model() end ==================================
2024-07-25 15:51:59,914:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') result for Accuracy is 0.6779
2024-07-25 15:51:59,928:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') result for Accuracy is 0.7355
2024-07-25 15:51:59,930:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') is best model
2024-07-25 15:51:59,930:INFO:choose_better completed
2024-07-25 15:51:59,974:INFO:_master_model_container: 3
2024-07-25 15:51:59,975:INFO:_display_container: 3
2024-07-25 15:51:59,978:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:51:59,978:INFO:tune_model() successfully completed......................................
2024-07-25 15:52:00,218:INFO:Initializing tune_model()
2024-07-25 15:52:00,218:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=None, round=4, n_iter=20, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A7F70>)
2024-07-25 15:52:00,218:INFO:Checking exceptions
2024-07-25 15:52:00,306:INFO:Copying training dataset
2024-07-25 15:52:00,318:INFO:Checking base model
2024-07-25 15:52:00,319:INFO:Base model : Decision Tree Classifier
2024-07-25 15:52:00,338:INFO:Declaring metric variables
2024-07-25 15:52:00,368:INFO:Defining Hyperparameters
2024-07-25 15:52:00,494:INFO:Tuning with n_jobs=-1
2024-07-25 15:52:00,495:INFO:Initializing RandomizedSearchCV
2024-07-25 15:52:06,882:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'gini'}
2024-07-25 15:52:06,887:INFO:Hyperparameter search completed
2024-07-25 15:52:06,892:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:06,896:INFO:Initializing create_model()
2024-07-25 15:52:06,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A7F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239D99A7C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 16, 'criterion': 'gini'})
2024-07-25 15:52:06,897:INFO:Checking exceptions
2024-07-25 15:52:06,897:INFO:Importing libraries
2024-07-25 15:52:06,898:INFO:Copying training dataset
2024-07-25 15:52:06,922:INFO:Defining folds
2024-07-25 15:52:06,922:INFO:Declaring metric variables
2024-07-25 15:52:06,941:INFO:Importing untrained model
2024-07-25 15:52:06,942:INFO:Declaring custom model
2024-07-25 15:52:07,045:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:07,164:INFO:Starting cross validation
2024-07-25 15:52:07,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:08,184:INFO:Calculating mean and std
2024-07-25 15:52:08,190:INFO:Creating metrics dataframe
2024-07-25 15:52:08,201:INFO:Finalizing model
2024-07-25 15:52:08,267:INFO:Uploading results into container
2024-07-25 15:52:08,267:INFO:Uploading model into container now
2024-07-25 15:52:08,267:INFO:_master_model_container: 4
2024-07-25 15:52:08,267:INFO:_display_container: 4
2024-07-25 15:52:08,267:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:08,267:INFO:create_model() successfully completed......................................
2024-07-25 15:52:08,350:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:08,350:INFO:choose_better activated
2024-07-25 15:52:08,350:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:08,370:INFO:Initializing create_model()
2024-07-25 15:52:08,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A7F70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:08,371:INFO:Checking exceptions
2024-07-25 15:52:08,377:INFO:Importing libraries
2024-07-25 15:52:08,377:INFO:Copying training dataset
2024-07-25 15:52:08,392:INFO:Defining folds
2024-07-25 15:52:08,392:INFO:Declaring metric variables
2024-07-25 15:52:08,393:INFO:Importing untrained model
2024-07-25 15:52:08,393:INFO:Declaring custom model
2024-07-25 15:52:08,396:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:08,397:INFO:Starting cross validation
2024-07-25 15:52:08,401:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:09,283:INFO:Calculating mean and std
2024-07-25 15:52:09,285:INFO:Creating metrics dataframe
2024-07-25 15:52:09,293:INFO:Finalizing model
2024-07-25 15:52:09,378:INFO:Uploading results into container
2024-07-25 15:52:09,379:INFO:Uploading model into container now
2024-07-25 15:52:09,381:INFO:_master_model_container: 5
2024-07-25 15:52:09,382:INFO:_display_container: 5
2024-07-25 15:52:09,385:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:09,385:INFO:create_model() successfully completed......................................
2024-07-25 15:52:09,505:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:09,508:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') result for Accuracy is 0.6779
2024-07-25 15:52:09,510:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') result for Accuracy is 0.7355
2024-07-25 15:52:09,512:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') is best model
2024-07-25 15:52:09,512:INFO:choose_better completed
2024-07-25 15:52:09,573:INFO:_master_model_container: 5
2024-07-25 15:52:09,574:INFO:_display_container: 4
2024-07-25 15:52:09,576:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:09,576:INFO:tune_model() successfully completed......................................
2024-07-25 15:52:10,491:INFO:PyCaret ClassificationExperiment
2024-07-25 15:52:10,491:INFO:Logging name: clf-default-name
2024-07-25 15:52:10,491:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:52:10,491:INFO:version 3.3.2
2024-07-25 15:52:10,492:INFO:Initializing setup()
2024-07-25 15:52:10,492:INFO:self.USI: 5d02
2024-07-25 15:52:10,492:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:52:10,492:INFO:Checking environment
2024-07-25 15:52:10,492:INFO:python_version: 3.9.19
2024-07-25 15:52:10,492:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:52:10,493:INFO:machine: AMD64
2024-07-25 15:52:10,493:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:52:10,493:INFO:Memory: svmem(total=8387862528, available=572198912, percent=93.2, used=7815663616, free=572198912)
2024-07-25 15:52:10,493:INFO:Physical Core: 2
2024-07-25 15:52:10,493:INFO:Logical Core: 4
2024-07-25 15:52:10,493:INFO:Checking libraries
2024-07-25 15:52:10,494:INFO:System:
2024-07-25 15:52:10,494:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:52:10,494:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:52:10,494:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:52:10,494:INFO:PyCaret required dependencies:
2024-07-25 15:52:10,495:INFO:                 pip: 24.0
2024-07-25 15:52:10,495:INFO:          setuptools: 69.5.1
2024-07-25 15:52:10,495:INFO:             pycaret: 3.3.2
2024-07-25 15:52:10,495:INFO:             IPython: 8.18.1
2024-07-25 15:52:10,495:INFO:          ipywidgets: 8.1.3
2024-07-25 15:52:10,496:INFO:                tqdm: 4.66.4
2024-07-25 15:52:10,496:INFO:               numpy: 1.26.4
2024-07-25 15:52:10,496:INFO:              pandas: 2.1.4
2024-07-25 15:52:10,496:INFO:              jinja2: 3.1.4
2024-07-25 15:52:10,496:INFO:               scipy: 1.11.4
2024-07-25 15:52:10,496:INFO:              joblib: 1.3.2
2024-07-25 15:52:10,496:INFO:             sklearn: 1.4.2
2024-07-25 15:52:10,496:INFO:                pyod: 2.0.1
2024-07-25 15:52:10,496:INFO:            imblearn: 0.12.3
2024-07-25 15:52:10,497:INFO:   category_encoders: 2.6.3
2024-07-25 15:52:10,497:INFO:            lightgbm: 4.4.0
2024-07-25 15:52:10,497:INFO:               numba: 0.60.0
2024-07-25 15:52:10,497:INFO:            requests: 2.32.3
2024-07-25 15:52:10,498:INFO:          matplotlib: 3.7.5
2024-07-25 15:52:10,498:INFO:          scikitplot: 0.3.7
2024-07-25 15:52:10,498:INFO:         yellowbrick: 1.5
2024-07-25 15:52:10,498:INFO:              plotly: 5.23.0
2024-07-25 15:52:10,498:INFO:    plotly-resampler: Not installed
2024-07-25 15:52:10,498:INFO:             kaleido: 0.2.1
2024-07-25 15:52:10,499:INFO:           schemdraw: 0.15
2024-07-25 15:52:10,499:INFO:         statsmodels: 0.14.2
2024-07-25 15:52:10,499:INFO:              sktime: 0.26.0
2024-07-25 15:52:10,499:INFO:               tbats: 1.1.3
2024-07-25 15:52:10,499:INFO:            pmdarima: 2.0.4
2024-07-25 15:52:10,499:INFO:              psutil: 6.0.0
2024-07-25 15:52:10,500:INFO:          markupsafe: 2.1.5
2024-07-25 15:52:10,500:INFO:             pickle5: Not installed
2024-07-25 15:52:10,500:INFO:         cloudpickle: 3.0.0
2024-07-25 15:52:10,500:INFO:         deprecation: 2.1.0
2024-07-25 15:52:10,500:INFO:              xxhash: 3.4.1
2024-07-25 15:52:10,500:INFO:           wurlitzer: Not installed
2024-07-25 15:52:10,501:INFO:PyCaret optional dependencies:
2024-07-25 15:52:10,501:INFO:                shap: Not installed
2024-07-25 15:52:10,501:INFO:           interpret: Not installed
2024-07-25 15:52:10,501:INFO:                umap: Not installed
2024-07-25 15:52:10,502:INFO:     ydata_profiling: Not installed
2024-07-25 15:52:10,502:INFO:  explainerdashboard: Not installed
2024-07-25 15:52:10,502:INFO:             autoviz: Not installed
2024-07-25 15:52:10,502:INFO:           fairlearn: Not installed
2024-07-25 15:52:10,502:INFO:          deepchecks: Not installed
2024-07-25 15:52:10,502:INFO:             xgboost: Not installed
2024-07-25 15:52:10,503:INFO:            catboost: Not installed
2024-07-25 15:52:10,503:INFO:              kmodes: Not installed
2024-07-25 15:52:10,503:INFO:             mlxtend: Not installed
2024-07-25 15:52:10,503:INFO:       statsforecast: Not installed
2024-07-25 15:52:10,503:INFO:        tune_sklearn: Not installed
2024-07-25 15:52:10,503:INFO:                 ray: Not installed
2024-07-25 15:52:10,504:INFO:            hyperopt: Not installed
2024-07-25 15:52:10,504:INFO:              optuna: Not installed
2024-07-25 15:52:10,504:INFO:               skopt: Not installed
2024-07-25 15:52:10,504:INFO:              mlflow: Not installed
2024-07-25 15:52:10,504:INFO:              gradio: Not installed
2024-07-25 15:52:10,505:INFO:             fastapi: Not installed
2024-07-25 15:52:10,505:INFO:             uvicorn: Not installed
2024-07-25 15:52:10,505:INFO:              m2cgen: Not installed
2024-07-25 15:52:10,505:INFO:           evidently: Not installed
2024-07-25 15:52:10,505:INFO:               fugue: Not installed
2024-07-25 15:52:10,505:INFO:           streamlit: Not installed
2024-07-25 15:52:10,505:INFO:             prophet: Not installed
2024-07-25 15:52:10,505:INFO:None
2024-07-25 15:52:10,505:INFO:Set up data.
2024-07-25 15:52:10,517:INFO:Set up folding strategy.
2024-07-25 15:52:10,517:INFO:Set up train/test split.
2024-07-25 15:52:10,527:INFO:Set up index.
2024-07-25 15:52:10,528:INFO:Assigning column types.
2024-07-25 15:52:10,537:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:52:10,606:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:10,608:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:10,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:10,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:10,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:10,750:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:10,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:10,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:10,801:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:52:10,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:10,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:10,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:10,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:11,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:11,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:11,068:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:52:11,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:11,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:11,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:11,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:11,413:INFO:Preparing preprocessing pipeline...
2024-07-25 15:52:11,417:INFO:Set up simple imputation.
2024-07-25 15:52:11,420:INFO:Set up column name cleaning.
2024-07-25 15:52:11,535:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:52:11,565:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:52:11,565:INFO:Creating final display dataframe.
2024-07-25 15:52:12,031:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5d02
2024-07-25 15:52:12,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:12,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:12,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:12,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:12,629:INFO:setup() successfully completed in 2.15s...............
2024-07-25 15:52:12,643:INFO:Initializing create_model()
2024-07-25 15:52:12,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D973B0D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:12,644:INFO:Checking exceptions
2024-07-25 15:52:12,710:INFO:Importing libraries
2024-07-25 15:52:12,710:INFO:Copying training dataset
2024-07-25 15:52:12,736:INFO:Defining folds
2024-07-25 15:52:12,737:INFO:Declaring metric variables
2024-07-25 15:52:12,761:INFO:Importing untrained model
2024-07-25 15:52:12,784:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:12,819:INFO:Starting cross validation
2024-07-25 15:52:12,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:13,578:INFO:Calculating mean and std
2024-07-25 15:52:13,578:INFO:Creating metrics dataframe
2024-07-25 15:52:13,595:INFO:Finalizing model
2024-07-25 15:52:13,645:INFO:Uploading results into container
2024-07-25 15:52:13,645:INFO:Uploading model into container now
2024-07-25 15:52:13,711:INFO:_master_model_container: 1
2024-07-25 15:52:13,711:INFO:_display_container: 2
2024-07-25 15:52:13,711:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:13,711:INFO:create_model() successfully completed......................................
2024-07-25 15:52:13,866:INFO:Initializing tune_model()
2024-07-25 15:52:13,866:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=None, round=4, n_iter=10, custom_grid={'min_samples_leaf': [2, 3, 4, 5, 6]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D973B0D0>)
2024-07-25 15:52:13,866:INFO:Checking exceptions
2024-07-25 15:52:13,963:INFO:Copying training dataset
2024-07-25 15:52:13,974:INFO:Checking base model
2024-07-25 15:52:13,974:INFO:Base model : Decision Tree Classifier
2024-07-25 15:52:13,997:INFO:Declaring metric variables
2024-07-25 15:52:14,014:INFO:Defining Hyperparameters
2024-07-25 15:52:14,094:INFO:custom_grid: {'actual_estimator__min_samples_leaf': [2, 3, 4, 5, 6]}
2024-07-25 15:52:14,110:INFO:Tuning with n_jobs=-1
2024-07-25 15:52:14,111:INFO:Initializing RandomizedSearchCV
2024-07-25 15:52:14,135:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\model_selection\_search.py:318: UserWarning: The total space of parameters 5 is smaller than n_iter=10. Running 5 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2024-07-25 15:52:15,420:INFO:best_params: {'actual_estimator__min_samples_leaf': 2}
2024-07-25 15:52:15,422:INFO:Hyperparameter search completed
2024-07-25 15:52:15,423:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:15,424:INFO:Initializing create_model()
2024-07-25 15:52:15,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D973B0D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF1C9670>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_leaf': 2})
2024-07-25 15:52:15,425:INFO:Checking exceptions
2024-07-25 15:52:15,426:INFO:Importing libraries
2024-07-25 15:52:15,427:INFO:Copying training dataset
2024-07-25 15:52:15,443:INFO:Defining folds
2024-07-25 15:52:15,443:INFO:Declaring metric variables
2024-07-25 15:52:15,476:INFO:Importing untrained model
2024-07-25 15:52:15,476:INFO:Declaring custom model
2024-07-25 15:52:15,525:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:15,576:INFO:Starting cross validation
2024-07-25 15:52:15,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:16,273:INFO:Calculating mean and std
2024-07-25 15:52:16,275:INFO:Creating metrics dataframe
2024-07-25 15:52:16,294:INFO:Finalizing model
2024-07-25 15:52:16,366:INFO:Uploading results into container
2024-07-25 15:52:16,368:INFO:Uploading model into container now
2024-07-25 15:52:16,369:INFO:_master_model_container: 2
2024-07-25 15:52:16,370:INFO:_display_container: 3
2024-07-25 15:52:16,372:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:16,373:INFO:create_model() successfully completed......................................
2024-07-25 15:52:16,487:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:16,487:INFO:choose_better activated
2024-07-25 15:52:16,514:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:16,516:INFO:Initializing create_model()
2024-07-25 15:52:16,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239D973B0D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:16,517:INFO:Checking exceptions
2024-07-25 15:52:16,523:INFO:Importing libraries
2024-07-25 15:52:16,523:INFO:Copying training dataset
2024-07-25 15:52:16,542:INFO:Defining folds
2024-07-25 15:52:16,542:INFO:Declaring metric variables
2024-07-25 15:52:16,543:INFO:Importing untrained model
2024-07-25 15:52:16,543:INFO:Declaring custom model
2024-07-25 15:52:16,546:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:16,547:INFO:Starting cross validation
2024-07-25 15:52:16,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:17,420:INFO:Calculating mean and std
2024-07-25 15:52:17,422:INFO:Creating metrics dataframe
2024-07-25 15:52:17,430:INFO:Finalizing model
2024-07-25 15:52:17,491:INFO:Uploading results into container
2024-07-25 15:52:17,491:INFO:Uploading model into container now
2024-07-25 15:52:17,491:INFO:_master_model_container: 3
2024-07-25 15:52:17,491:INFO:_display_container: 4
2024-07-25 15:52:17,528:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:17,529:INFO:create_model() successfully completed......................................
2024-07-25 15:52:17,641:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:17,643:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') result for Accuracy is 0.6779
2024-07-25 15:52:17,646:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') result for Accuracy is 0.7115
2024-07-25 15:52:17,648:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') is best model
2024-07-25 15:52:17,648:INFO:choose_better completed
2024-07-25 15:52:17,691:INFO:_master_model_container: 3
2024-07-25 15:52:17,691:INFO:_display_container: 3
2024-07-25 15:52:17,691:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:17,691:INFO:tune_model() successfully completed......................................
2024-07-25 15:52:18,307:INFO:PyCaret ClassificationExperiment
2024-07-25 15:52:18,307:INFO:Logging name: clf-default-name
2024-07-25 15:52:18,307:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:52:18,307:INFO:version 3.3.2
2024-07-25 15:52:18,307:INFO:Initializing setup()
2024-07-25 15:52:18,307:INFO:self.USI: b0cb
2024-07-25 15:52:18,307:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:52:18,307:INFO:Checking environment
2024-07-25 15:52:18,307:INFO:python_version: 3.9.19
2024-07-25 15:52:18,307:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:52:18,307:INFO:machine: AMD64
2024-07-25 15:52:18,307:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:52:18,307:INFO:Memory: svmem(total=8387862528, available=906440704, percent=89.2, used=7481421824, free=906440704)
2024-07-25 15:52:18,307:INFO:Physical Core: 2
2024-07-25 15:52:18,307:INFO:Logical Core: 4
2024-07-25 15:52:18,307:INFO:Checking libraries
2024-07-25 15:52:18,307:INFO:System:
2024-07-25 15:52:18,307:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:52:18,307:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:52:18,307:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:52:18,307:INFO:PyCaret required dependencies:
2024-07-25 15:52:18,307:INFO:                 pip: 24.0
2024-07-25 15:52:18,307:INFO:          setuptools: 69.5.1
2024-07-25 15:52:18,307:INFO:             pycaret: 3.3.2
2024-07-25 15:52:18,307:INFO:             IPython: 8.18.1
2024-07-25 15:52:18,307:INFO:          ipywidgets: 8.1.3
2024-07-25 15:52:18,307:INFO:                tqdm: 4.66.4
2024-07-25 15:52:18,307:INFO:               numpy: 1.26.4
2024-07-25 15:52:18,307:INFO:              pandas: 2.1.4
2024-07-25 15:52:18,307:INFO:              jinja2: 3.1.4
2024-07-25 15:52:18,307:INFO:               scipy: 1.11.4
2024-07-25 15:52:18,307:INFO:              joblib: 1.3.2
2024-07-25 15:52:18,307:INFO:             sklearn: 1.4.2
2024-07-25 15:52:18,307:INFO:                pyod: 2.0.1
2024-07-25 15:52:18,307:INFO:            imblearn: 0.12.3
2024-07-25 15:52:18,307:INFO:   category_encoders: 2.6.3
2024-07-25 15:52:18,307:INFO:            lightgbm: 4.4.0
2024-07-25 15:52:18,307:INFO:               numba: 0.60.0
2024-07-25 15:52:18,307:INFO:            requests: 2.32.3
2024-07-25 15:52:18,307:INFO:          matplotlib: 3.7.5
2024-07-25 15:52:18,307:INFO:          scikitplot: 0.3.7
2024-07-25 15:52:18,307:INFO:         yellowbrick: 1.5
2024-07-25 15:52:18,307:INFO:              plotly: 5.23.0
2024-07-25 15:52:18,307:INFO:    plotly-resampler: Not installed
2024-07-25 15:52:18,307:INFO:             kaleido: 0.2.1
2024-07-25 15:52:18,307:INFO:           schemdraw: 0.15
2024-07-25 15:52:18,307:INFO:         statsmodels: 0.14.2
2024-07-25 15:52:18,307:INFO:              sktime: 0.26.0
2024-07-25 15:52:18,307:INFO:               tbats: 1.1.3
2024-07-25 15:52:18,307:INFO:            pmdarima: 2.0.4
2024-07-25 15:52:18,307:INFO:              psutil: 6.0.0
2024-07-25 15:52:18,307:INFO:          markupsafe: 2.1.5
2024-07-25 15:52:18,307:INFO:             pickle5: Not installed
2024-07-25 15:52:18,307:INFO:         cloudpickle: 3.0.0
2024-07-25 15:52:18,307:INFO:         deprecation: 2.1.0
2024-07-25 15:52:18,307:INFO:              xxhash: 3.4.1
2024-07-25 15:52:18,307:INFO:           wurlitzer: Not installed
2024-07-25 15:52:18,307:INFO:PyCaret optional dependencies:
2024-07-25 15:52:18,307:INFO:                shap: Not installed
2024-07-25 15:52:18,307:INFO:           interpret: Not installed
2024-07-25 15:52:18,307:INFO:                umap: Not installed
2024-07-25 15:52:18,307:INFO:     ydata_profiling: Not installed
2024-07-25 15:52:18,307:INFO:  explainerdashboard: Not installed
2024-07-25 15:52:18,307:INFO:             autoviz: Not installed
2024-07-25 15:52:18,307:INFO:           fairlearn: Not installed
2024-07-25 15:52:18,307:INFO:          deepchecks: Not installed
2024-07-25 15:52:18,307:INFO:             xgboost: Not installed
2024-07-25 15:52:18,307:INFO:            catboost: Not installed
2024-07-25 15:52:18,307:INFO:              kmodes: Not installed
2024-07-25 15:52:18,307:INFO:             mlxtend: Not installed
2024-07-25 15:52:18,307:INFO:       statsforecast: Not installed
2024-07-25 15:52:18,307:INFO:        tune_sklearn: Not installed
2024-07-25 15:52:18,307:INFO:                 ray: Not installed
2024-07-25 15:52:18,307:INFO:            hyperopt: Not installed
2024-07-25 15:52:18,307:INFO:              optuna: Not installed
2024-07-25 15:52:18,307:INFO:               skopt: Not installed
2024-07-25 15:52:18,307:INFO:              mlflow: Not installed
2024-07-25 15:52:18,307:INFO:              gradio: Not installed
2024-07-25 15:52:18,307:INFO:             fastapi: Not installed
2024-07-25 15:52:18,307:INFO:             uvicorn: Not installed
2024-07-25 15:52:18,307:INFO:              m2cgen: Not installed
2024-07-25 15:52:18,307:INFO:           evidently: Not installed
2024-07-25 15:52:18,307:INFO:               fugue: Not installed
2024-07-25 15:52:18,307:INFO:           streamlit: Not installed
2024-07-25 15:52:18,307:INFO:             prophet: Not installed
2024-07-25 15:52:18,307:INFO:None
2024-07-25 15:52:18,307:INFO:Set up data.
2024-07-25 15:52:18,325:INFO:Set up folding strategy.
2024-07-25 15:52:18,325:INFO:Set up train/test split.
2024-07-25 15:52:18,340:INFO:Set up index.
2024-07-25 15:52:18,340:INFO:Assigning column types.
2024-07-25 15:52:18,344:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:52:18,486:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:18,488:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:18,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:18,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:18,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:18,626:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:18,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:18,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:18,660:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:52:18,748:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:18,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:18,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:18,925:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:18,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:18,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:18,994:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:52:19,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:19,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:19,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:19,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:19,272:INFO:Preparing preprocessing pipeline...
2024-07-25 15:52:19,272:INFO:Set up simple imputation.
2024-07-25 15:52:19,272:INFO:Set up column name cleaning.
2024-07-25 15:52:19,372:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:52:19,392:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:52:19,392:INFO:Creating final display dataframe.
2024-07-25 15:52:19,716:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              b0cb
2024-07-25 15:52:19,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:19,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:19,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:19,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:19,972:INFO:setup() successfully completed in 1.68s...............
2024-07-25 15:52:19,988:INFO:Initializing create_model()
2024-07-25 15:52:19,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A2B50>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:19,988:INFO:Checking exceptions
2024-07-25 15:52:20,029:INFO:Importing libraries
2024-07-25 15:52:20,029:INFO:Copying training dataset
2024-07-25 15:52:20,049:INFO:Defining folds
2024-07-25 15:52:20,049:INFO:Declaring metric variables
2024-07-25 15:52:20,062:INFO:Importing untrained model
2024-07-25 15:52:20,074:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:20,098:INFO:Starting cross validation
2024-07-25 15:52:20,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:20,521:INFO:Calculating mean and std
2024-07-25 15:52:20,521:INFO:Creating metrics dataframe
2024-07-25 15:52:20,541:INFO:Finalizing model
2024-07-25 15:52:20,571:INFO:Uploading results into container
2024-07-25 15:52:20,571:INFO:Uploading model into container now
2024-07-25 15:52:20,604:INFO:_master_model_container: 1
2024-07-25 15:52:20,604:INFO:_display_container: 2
2024-07-25 15:52:20,621:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:20,621:INFO:create_model() successfully completed......................................
2024-07-25 15:52:20,705:INFO:Initializing tune_model()
2024-07-25 15:52:20,705:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=None, round=4, n_iter=10, custom_grid={'min_samples_leaf': [2, 3, 4, 5, 6]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A2B50>)
2024-07-25 15:52:20,705:INFO:Checking exceptions
2024-07-25 15:52:20,777:INFO:Copying training dataset
2024-07-25 15:52:20,792:INFO:Checking base model
2024-07-25 15:52:20,792:INFO:Base model : Decision Tree Classifier
2024-07-25 15:52:20,809:INFO:Declaring metric variables
2024-07-25 15:52:20,822:INFO:Defining Hyperparameters
2024-07-25 15:52:20,906:INFO:custom_grid: {'actual_estimator__min_samples_leaf': [2, 3, 4, 5, 6]}
2024-07-25 15:52:20,906:INFO:Tuning with n_jobs=-1
2024-07-25 15:52:20,906:INFO:Initializing RandomizedSearchCV
2024-07-25 15:52:20,913:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\model_selection\_search.py:318: UserWarning: The total space of parameters 5 is smaller than n_iter=10. Running 5 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2024-07-25 15:52:22,186:INFO:best_params: {'actual_estimator__min_samples_leaf': 2}
2024-07-25 15:52:22,191:INFO:Hyperparameter search completed
2024-07-25 15:52:22,192:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:22,194:INFO:Initializing create_model()
2024-07-25 15:52:22,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A2B50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF30A670>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_leaf': 2})
2024-07-25 15:52:22,195:INFO:Checking exceptions
2024-07-25 15:52:22,195:INFO:Importing libraries
2024-07-25 15:52:22,195:INFO:Copying training dataset
2024-07-25 15:52:22,214:INFO:Defining folds
2024-07-25 15:52:22,214:INFO:Declaring metric variables
2024-07-25 15:52:22,225:INFO:Importing untrained model
2024-07-25 15:52:22,225:INFO:Declaring custom model
2024-07-25 15:52:22,246:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:22,372:INFO:Starting cross validation
2024-07-25 15:52:22,387:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:23,020:INFO:Calculating mean and std
2024-07-25 15:52:23,020:INFO:Creating metrics dataframe
2024-07-25 15:52:23,035:INFO:Finalizing model
2024-07-25 15:52:23,074:INFO:Uploading results into container
2024-07-25 15:52:23,074:INFO:Uploading model into container now
2024-07-25 15:52:23,074:INFO:_master_model_container: 2
2024-07-25 15:52:23,074:INFO:_display_container: 3
2024-07-25 15:52:23,087:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:23,087:INFO:create_model() successfully completed......................................
2024-07-25 15:52:23,169:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:23,169:INFO:choose_better activated
2024-07-25 15:52:23,174:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:23,174:INFO:Initializing create_model()
2024-07-25 15:52:23,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2A2B50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:23,174:INFO:Checking exceptions
2024-07-25 15:52:23,185:INFO:Importing libraries
2024-07-25 15:52:23,185:INFO:Copying training dataset
2024-07-25 15:52:23,185:INFO:Defining folds
2024-07-25 15:52:23,185:INFO:Declaring metric variables
2024-07-25 15:52:23,185:INFO:Importing untrained model
2024-07-25 15:52:23,185:INFO:Declaring custom model
2024-07-25 15:52:23,185:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:23,185:INFO:Starting cross validation
2024-07-25 15:52:23,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:23,702:INFO:Calculating mean and std
2024-07-25 15:52:23,704:INFO:Creating metrics dataframe
2024-07-25 15:52:23,710:INFO:Finalizing model
2024-07-25 15:52:23,760:INFO:Uploading results into container
2024-07-25 15:52:23,772:INFO:Uploading model into container now
2024-07-25 15:52:23,774:INFO:_master_model_container: 3
2024-07-25 15:52:23,774:INFO:_display_container: 4
2024-07-25 15:52:23,776:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:23,776:INFO:create_model() successfully completed......................................
2024-07-25 15:52:23,982:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:23,985:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') result for Accuracy is 0.6779
2024-07-25 15:52:23,993:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') result for Accuracy is 0.7115
2024-07-25 15:52:23,996:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best') is best model
2024-07-25 15:52:23,996:INFO:choose_better completed
2024-07-25 15:52:24,095:INFO:_master_model_container: 3
2024-07-25 15:52:24,095:INFO:_display_container: 3
2024-07-25 15:52:24,097:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:24,098:INFO:tune_model() successfully completed......................................
2024-07-25 15:52:25,588:INFO:PyCaret ClassificationExperiment
2024-07-25 15:52:25,588:INFO:Logging name: clf-default-name
2024-07-25 15:52:25,589:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:52:25,589:INFO:version 3.3.2
2024-07-25 15:52:25,589:INFO:Initializing setup()
2024-07-25 15:52:25,589:INFO:self.USI: 4bb2
2024-07-25 15:52:25,589:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:52:25,590:INFO:Checking environment
2024-07-25 15:52:25,590:INFO:python_version: 3.9.19
2024-07-25 15:52:25,590:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:52:25,590:INFO:machine: AMD64
2024-07-25 15:52:25,591:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:52:25,591:INFO:Memory: svmem(total=8387862528, available=895832064, percent=89.3, used=7492030464, free=895832064)
2024-07-25 15:52:25,591:INFO:Physical Core: 2
2024-07-25 15:52:25,591:INFO:Logical Core: 4
2024-07-25 15:52:25,591:INFO:Checking libraries
2024-07-25 15:52:25,592:INFO:System:
2024-07-25 15:52:25,592:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:52:25,592:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:52:25,593:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:52:25,593:INFO:PyCaret required dependencies:
2024-07-25 15:52:25,593:INFO:                 pip: 24.0
2024-07-25 15:52:25,593:INFO:          setuptools: 69.5.1
2024-07-25 15:52:25,594:INFO:             pycaret: 3.3.2
2024-07-25 15:52:25,594:INFO:             IPython: 8.18.1
2024-07-25 15:52:25,594:INFO:          ipywidgets: 8.1.3
2024-07-25 15:52:25,594:INFO:                tqdm: 4.66.4
2024-07-25 15:52:25,595:INFO:               numpy: 1.26.4
2024-07-25 15:52:25,595:INFO:              pandas: 2.1.4
2024-07-25 15:52:25,596:INFO:              jinja2: 3.1.4
2024-07-25 15:52:25,600:INFO:               scipy: 1.11.4
2024-07-25 15:52:25,611:INFO:              joblib: 1.3.2
2024-07-25 15:52:25,627:INFO:             sklearn: 1.4.2
2024-07-25 15:52:25,627:INFO:                pyod: 2.0.1
2024-07-25 15:52:25,627:INFO:            imblearn: 0.12.3
2024-07-25 15:52:25,627:INFO:   category_encoders: 2.6.3
2024-07-25 15:52:25,627:INFO:            lightgbm: 4.4.0
2024-07-25 15:52:25,627:INFO:               numba: 0.60.0
2024-07-25 15:52:25,627:INFO:            requests: 2.32.3
2024-07-25 15:52:25,628:INFO:          matplotlib: 3.7.5
2024-07-25 15:52:25,628:INFO:          scikitplot: 0.3.7
2024-07-25 15:52:25,629:INFO:         yellowbrick: 1.5
2024-07-25 15:52:25,629:INFO:              plotly: 5.23.0
2024-07-25 15:52:25,629:INFO:    plotly-resampler: Not installed
2024-07-25 15:52:25,629:INFO:             kaleido: 0.2.1
2024-07-25 15:52:25,629:INFO:           schemdraw: 0.15
2024-07-25 15:52:25,630:INFO:         statsmodels: 0.14.2
2024-07-25 15:52:25,630:INFO:              sktime: 0.26.0
2024-07-25 15:52:25,637:INFO:               tbats: 1.1.3
2024-07-25 15:52:25,640:INFO:            pmdarima: 2.0.4
2024-07-25 15:52:25,643:INFO:              psutil: 6.0.0
2024-07-25 15:52:25,648:INFO:          markupsafe: 2.1.5
2024-07-25 15:52:25,653:INFO:             pickle5: Not installed
2024-07-25 15:52:25,658:INFO:         cloudpickle: 3.0.0
2024-07-25 15:52:25,661:INFO:         deprecation: 2.1.0
2024-07-25 15:52:25,668:INFO:              xxhash: 3.4.1
2024-07-25 15:52:25,673:INFO:           wurlitzer: Not installed
2024-07-25 15:52:25,677:INFO:PyCaret optional dependencies:
2024-07-25 15:52:25,678:INFO:                shap: Not installed
2024-07-25 15:52:25,678:INFO:           interpret: Not installed
2024-07-25 15:52:25,678:INFO:                umap: Not installed
2024-07-25 15:52:25,679:INFO:     ydata_profiling: Not installed
2024-07-25 15:52:25,679:INFO:  explainerdashboard: Not installed
2024-07-25 15:52:25,679:INFO:             autoviz: Not installed
2024-07-25 15:52:25,679:INFO:           fairlearn: Not installed
2024-07-25 15:52:25,679:INFO:          deepchecks: Not installed
2024-07-25 15:52:25,680:INFO:             xgboost: Not installed
2024-07-25 15:52:25,680:INFO:            catboost: Not installed
2024-07-25 15:52:25,680:INFO:              kmodes: Not installed
2024-07-25 15:52:25,680:INFO:             mlxtend: Not installed
2024-07-25 15:52:25,681:INFO:       statsforecast: Not installed
2024-07-25 15:52:25,681:INFO:        tune_sklearn: Not installed
2024-07-25 15:52:25,681:INFO:                 ray: Not installed
2024-07-25 15:52:25,682:INFO:            hyperopt: Not installed
2024-07-25 15:52:25,683:INFO:              optuna: Not installed
2024-07-25 15:52:25,683:INFO:               skopt: Not installed
2024-07-25 15:52:25,683:INFO:              mlflow: Not installed
2024-07-25 15:52:25,683:INFO:              gradio: Not installed
2024-07-25 15:52:25,683:INFO:             fastapi: Not installed
2024-07-25 15:52:25,683:INFO:             uvicorn: Not installed
2024-07-25 15:52:25,684:INFO:              m2cgen: Not installed
2024-07-25 15:52:25,684:INFO:           evidently: Not installed
2024-07-25 15:52:25,684:INFO:               fugue: Not installed
2024-07-25 15:52:25,684:INFO:           streamlit: Not installed
2024-07-25 15:52:25,684:INFO:             prophet: Not installed
2024-07-25 15:52:25,685:INFO:None
2024-07-25 15:52:25,685:INFO:Set up data.
2024-07-25 15:52:25,719:INFO:Set up folding strategy.
2024-07-25 15:52:25,719:INFO:Set up train/test split.
2024-07-25 15:52:25,729:INFO:Set up index.
2024-07-25 15:52:25,733:INFO:Assigning column types.
2024-07-25 15:52:25,759:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:52:25,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:25,879:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:26,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:26,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:26,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:26,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:26,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:26,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:26,226:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:52:26,357:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:26,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:26,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:26,561:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:26,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:26,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:26,636:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:52:27,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:27,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:27,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:27,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:27,441:INFO:Preparing preprocessing pipeline...
2024-07-25 15:52:27,445:INFO:Set up simple imputation.
2024-07-25 15:52:27,448:INFO:Set up column name cleaning.
2024-07-25 15:52:27,576:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:52:27,603:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:52:27,604:INFO:Creating final display dataframe.
2024-07-25 15:52:28,063:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4bb2
2024-07-25 15:52:28,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:28,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:28,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:28,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:28,664:INFO:setup() successfully completed in 3.21s...............
2024-07-25 15:52:28,680:INFO:Initializing create_model()
2024-07-25 15:52:28,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF21AAC0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:28,680:INFO:Checking exceptions
2024-07-25 15:52:28,749:INFO:Importing libraries
2024-07-25 15:52:28,749:INFO:Copying training dataset
2024-07-25 15:52:28,785:INFO:Defining folds
2024-07-25 15:52:28,785:INFO:Declaring metric variables
2024-07-25 15:52:28,805:INFO:Importing untrained model
2024-07-25 15:52:28,822:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:28,856:INFO:Starting cross validation
2024-07-25 15:52:28,856:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:29,385:INFO:Calculating mean and std
2024-07-25 15:52:29,385:INFO:Creating metrics dataframe
2024-07-25 15:52:29,401:INFO:Finalizing model
2024-07-25 15:52:29,438:INFO:Uploading results into container
2024-07-25 15:52:29,438:INFO:Uploading model into container now
2024-07-25 15:52:29,470:INFO:_master_model_container: 1
2024-07-25 15:52:29,470:INFO:_display_container: 2
2024-07-25 15:52:29,485:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:29,485:INFO:create_model() successfully completed......................................
2024-07-25 15:52:29,568:INFO:Initializing ensemble_model()
2024-07-25 15:52:29,568:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF21AAC0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:52:29,568:INFO:Checking exceptions
2024-07-25 15:52:29,626:INFO:Importing libraries
2024-07-25 15:52:29,626:INFO:Copying training dataset
2024-07-25 15:52:29,626:INFO:Checking base model
2024-07-25 15:52:29,626:INFO:Base model : Decision Tree Classifier
2024-07-25 15:52:29,660:INFO:Importing untrained ensembler
2024-07-25 15:52:29,661:INFO:Ensemble method set to Bagging
2024-07-25 15:52:29,661:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:29,669:INFO:Initializing create_model()
2024-07-25 15:52:29,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF21AAC0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                   class_weight=None,
                                                   criterion='gini',
                                                   max_depth=None,
                                                   max_features=None,
                                                   max_leaf_nodes=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   random_state=1234,
                                                   splitter='best'),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=1234, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EEF339D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:29,670:INFO:Checking exceptions
2024-07-25 15:52:29,670:INFO:Importing libraries
2024-07-25 15:52:29,670:INFO:Copying training dataset
2024-07-25 15:52:29,683:INFO:Defining folds
2024-07-25 15:52:29,685:INFO:Declaring metric variables
2024-07-25 15:52:29,693:INFO:Importing untrained model
2024-07-25 15:52:29,693:INFO:Declaring custom model
2024-07-25 15:52:29,710:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:29,735:INFO:Starting cross validation
2024-07-25 15:52:29,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:30,796:INFO:Calculating mean and std
2024-07-25 15:52:30,835:INFO:Creating metrics dataframe
2024-07-25 15:52:30,859:INFO:Finalizing model
2024-07-25 15:52:31,014:INFO:Uploading results into container
2024-07-25 15:52:31,014:INFO:Uploading model into container now
2024-07-25 15:52:31,014:INFO:_master_model_container: 2
2024-07-25 15:52:31,014:INFO:_display_container: 3
2024-07-25 15:52:31,014:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                   class_weight=None,
                                                   criterion='gini',
                                                   max_depth=None,
                                                   max_features=None,
                                                   max_leaf_nodes=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   random_state=1234,
                                                   splitter='best'),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=1234, verbose=0,
                  warm_start=False)
2024-07-25 15:52:31,014:INFO:create_model() successfully completed......................................
2024-07-25 15:52:31,118:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:31,165:INFO:_master_model_container: 2
2024-07-25 15:52:31,166:INFO:_display_container: 3
2024-07-25 15:52:31,169:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                   class_weight=None,
                                                   criterion='gini',
                                                   max_depth=None,
                                                   max_features=None,
                                                   max_leaf_nodes=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   random_state=1234,
                                                   splitter='best'),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=1234, verbose=0,
                  warm_start=False)
2024-07-25 15:52:31,170:INFO:ensemble_model() successfully completed......................................
2024-07-25 15:52:31,959:INFO:PyCaret ClassificationExperiment
2024-07-25 15:52:31,959:INFO:Logging name: clf-default-name
2024-07-25 15:52:31,959:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:52:31,959:INFO:version 3.3.2
2024-07-25 15:52:31,959:INFO:Initializing setup()
2024-07-25 15:52:31,959:INFO:self.USI: 6f05
2024-07-25 15:52:31,959:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:52:31,959:INFO:Checking environment
2024-07-25 15:52:31,959:INFO:python_version: 3.9.19
2024-07-25 15:52:31,959:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:52:31,959:INFO:machine: AMD64
2024-07-25 15:52:31,959:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:52:31,959:INFO:Memory: svmem(total=8387862528, available=854716416, percent=89.8, used=7533146112, free=854716416)
2024-07-25 15:52:31,959:INFO:Physical Core: 2
2024-07-25 15:52:31,959:INFO:Logical Core: 4
2024-07-25 15:52:31,959:INFO:Checking libraries
2024-07-25 15:52:31,959:INFO:System:
2024-07-25 15:52:31,959:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:52:31,959:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:52:31,959:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:52:31,959:INFO:PyCaret required dependencies:
2024-07-25 15:52:31,959:INFO:                 pip: 24.0
2024-07-25 15:52:31,959:INFO:          setuptools: 69.5.1
2024-07-25 15:52:31,959:INFO:             pycaret: 3.3.2
2024-07-25 15:52:31,959:INFO:             IPython: 8.18.1
2024-07-25 15:52:31,959:INFO:          ipywidgets: 8.1.3
2024-07-25 15:52:31,959:INFO:                tqdm: 4.66.4
2024-07-25 15:52:31,966:INFO:               numpy: 1.26.4
2024-07-25 15:52:31,966:INFO:              pandas: 2.1.4
2024-07-25 15:52:31,966:INFO:              jinja2: 3.1.4
2024-07-25 15:52:31,966:INFO:               scipy: 1.11.4
2024-07-25 15:52:31,966:INFO:              joblib: 1.3.2
2024-07-25 15:52:31,966:INFO:             sklearn: 1.4.2
2024-07-25 15:52:31,966:INFO:                pyod: 2.0.1
2024-07-25 15:52:31,966:INFO:            imblearn: 0.12.3
2024-07-25 15:52:31,967:INFO:   category_encoders: 2.6.3
2024-07-25 15:52:31,967:INFO:            lightgbm: 4.4.0
2024-07-25 15:52:31,967:INFO:               numba: 0.60.0
2024-07-25 15:52:31,967:INFO:            requests: 2.32.3
2024-07-25 15:52:31,967:INFO:          matplotlib: 3.7.5
2024-07-25 15:52:31,967:INFO:          scikitplot: 0.3.7
2024-07-25 15:52:31,967:INFO:         yellowbrick: 1.5
2024-07-25 15:52:31,967:INFO:              plotly: 5.23.0
2024-07-25 15:52:31,967:INFO:    plotly-resampler: Not installed
2024-07-25 15:52:31,967:INFO:             kaleido: 0.2.1
2024-07-25 15:52:31,967:INFO:           schemdraw: 0.15
2024-07-25 15:52:31,967:INFO:         statsmodels: 0.14.2
2024-07-25 15:52:31,967:INFO:              sktime: 0.26.0
2024-07-25 15:52:31,967:INFO:               tbats: 1.1.3
2024-07-25 15:52:31,967:INFO:            pmdarima: 2.0.4
2024-07-25 15:52:31,967:INFO:              psutil: 6.0.0
2024-07-25 15:52:31,967:INFO:          markupsafe: 2.1.5
2024-07-25 15:52:31,967:INFO:             pickle5: Not installed
2024-07-25 15:52:31,967:INFO:         cloudpickle: 3.0.0
2024-07-25 15:52:31,967:INFO:         deprecation: 2.1.0
2024-07-25 15:52:31,967:INFO:              xxhash: 3.4.1
2024-07-25 15:52:31,967:INFO:           wurlitzer: Not installed
2024-07-25 15:52:31,967:INFO:PyCaret optional dependencies:
2024-07-25 15:52:31,967:INFO:                shap: Not installed
2024-07-25 15:52:31,967:INFO:           interpret: Not installed
2024-07-25 15:52:31,967:INFO:                umap: Not installed
2024-07-25 15:52:31,967:INFO:     ydata_profiling: Not installed
2024-07-25 15:52:31,967:INFO:  explainerdashboard: Not installed
2024-07-25 15:52:31,967:INFO:             autoviz: Not installed
2024-07-25 15:52:31,967:INFO:           fairlearn: Not installed
2024-07-25 15:52:31,967:INFO:          deepchecks: Not installed
2024-07-25 15:52:31,967:INFO:             xgboost: Not installed
2024-07-25 15:52:31,967:INFO:            catboost: Not installed
2024-07-25 15:52:31,967:INFO:              kmodes: Not installed
2024-07-25 15:52:31,967:INFO:             mlxtend: Not installed
2024-07-25 15:52:31,967:INFO:       statsforecast: Not installed
2024-07-25 15:52:31,967:INFO:        tune_sklearn: Not installed
2024-07-25 15:52:31,967:INFO:                 ray: Not installed
2024-07-25 15:52:31,967:INFO:            hyperopt: Not installed
2024-07-25 15:52:31,967:INFO:              optuna: Not installed
2024-07-25 15:52:31,967:INFO:               skopt: Not installed
2024-07-25 15:52:31,967:INFO:              mlflow: Not installed
2024-07-25 15:52:31,967:INFO:              gradio: Not installed
2024-07-25 15:52:31,967:INFO:             fastapi: Not installed
2024-07-25 15:52:31,967:INFO:             uvicorn: Not installed
2024-07-25 15:52:31,967:INFO:              m2cgen: Not installed
2024-07-25 15:52:31,967:INFO:           evidently: Not installed
2024-07-25 15:52:31,967:INFO:               fugue: Not installed
2024-07-25 15:52:31,967:INFO:           streamlit: Not installed
2024-07-25 15:52:31,967:INFO:             prophet: Not installed
2024-07-25 15:52:31,967:INFO:None
2024-07-25 15:52:31,967:INFO:Set up data.
2024-07-25 15:52:31,978:INFO:Set up folding strategy.
2024-07-25 15:52:31,978:INFO:Set up train/test split.
2024-07-25 15:52:31,978:INFO:Set up index.
2024-07-25 15:52:31,978:INFO:Assigning column types.
2024-07-25 15:52:31,998:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:52:32,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:32,059:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:32,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:32,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:32,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,226:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:52:32,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:32,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,409:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:32,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,445:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:52:32,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:32,679:INFO:Preparing preprocessing pipeline...
2024-07-25 15:52:32,679:INFO:Set up simple imputation.
2024-07-25 15:52:32,679:INFO:Set up column name cleaning.
2024-07-25 15:52:32,742:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:52:32,775:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:52:32,775:INFO:Creating final display dataframe.
2024-07-25 15:52:33,025:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              6f05
2024-07-25 15:52:33,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:33,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:33,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:33,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:33,269:INFO:setup() successfully completed in 1.34s...............
2024-07-25 15:52:33,275:INFO:Initializing create_model()
2024-07-25 15:52:33,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F371D3A0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:33,275:INFO:Checking exceptions
2024-07-25 15:52:33,326:INFO:Importing libraries
2024-07-25 15:52:33,326:INFO:Copying training dataset
2024-07-25 15:52:33,333:INFO:Defining folds
2024-07-25 15:52:33,333:INFO:Declaring metric variables
2024-07-25 15:52:33,355:INFO:Importing untrained model
2024-07-25 15:52:33,368:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:33,392:INFO:Starting cross validation
2024-07-25 15:52:33,397:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:33,824:INFO:Calculating mean and std
2024-07-25 15:52:33,824:INFO:Creating metrics dataframe
2024-07-25 15:52:33,841:INFO:Finalizing model
2024-07-25 15:52:33,880:INFO:Uploading results into container
2024-07-25 15:52:33,880:INFO:Uploading model into container now
2024-07-25 15:52:33,923:INFO:_master_model_container: 1
2024-07-25 15:52:33,924:INFO:_display_container: 2
2024-07-25 15:52:33,924:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:33,924:INFO:create_model() successfully completed......................................
2024-07-25 15:52:33,991:INFO:Initializing ensemble_model()
2024-07-25 15:52:33,991:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F371D3A0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), method=Bagging, fold=None, n_estimators=20, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:52:33,991:INFO:Checking exceptions
2024-07-25 15:52:34,058:INFO:Importing libraries
2024-07-25 15:52:34,059:INFO:Copying training dataset
2024-07-25 15:52:34,059:INFO:Checking base model
2024-07-25 15:52:34,061:INFO:Base model : Decision Tree Classifier
2024-07-25 15:52:34,088:INFO:Importing untrained ensembler
2024-07-25 15:52:34,088:INFO:Ensemble method set to Bagging
2024-07-25 15:52:34,089:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:34,096:INFO:Initializing create_model()
2024-07-25 15:52:34,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F371D3A0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                   class_weight=None,
                                                   criterion='gini',
                                                   max_depth=None,
                                                   max_features=None,
                                                   max_leaf_nodes=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   random_state=1234,
                                                   splitter='best'),
                  max_features=1.0, max_samples=1.0, n_estimators=20,
                  n_jobs=None, oob_score=False, random_state=1234, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EEF69760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:34,097:INFO:Checking exceptions
2024-07-25 15:52:34,097:INFO:Importing libraries
2024-07-25 15:52:34,097:INFO:Copying training dataset
2024-07-25 15:52:34,107:INFO:Defining folds
2024-07-25 15:52:34,107:INFO:Declaring metric variables
2024-07-25 15:52:34,107:INFO:Importing untrained model
2024-07-25 15:52:34,107:INFO:Declaring custom model
2024-07-25 15:52:34,124:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:34,140:INFO:Starting cross validation
2024-07-25 15:52:34,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:36,062:INFO:Calculating mean and std
2024-07-25 15:52:36,072:INFO:Creating metrics dataframe
2024-07-25 15:52:36,097:INFO:Finalizing model
2024-07-25 15:52:36,389:INFO:Uploading results into container
2024-07-25 15:52:36,392:INFO:Uploading model into container now
2024-07-25 15:52:36,394:INFO:_master_model_container: 2
2024-07-25 15:52:36,394:INFO:_display_container: 3
2024-07-25 15:52:36,402:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                   class_weight=None,
                                                   criterion='gini',
                                                   max_depth=None,
                                                   max_features=None,
                                                   max_leaf_nodes=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   random_state=1234,
                                                   splitter='best'),
                  max_features=1.0, max_samples=1.0, n_estimators=20,
                  n_jobs=None, oob_score=False, random_state=1234, verbose=0,
                  warm_start=False)
2024-07-25 15:52:36,402:INFO:create_model() successfully completed......................................
2024-07-25 15:52:36,528:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:36,676:INFO:_master_model_container: 2
2024-07-25 15:52:36,676:INFO:_display_container: 3
2024-07-25 15:52:36,685:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                   class_weight=None,
                                                   criterion='gini',
                                                   max_depth=None,
                                                   max_features=None,
                                                   max_leaf_nodes=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   random_state=1234,
                                                   splitter='best'),
                  max_features=1.0, max_samples=1.0, n_estimators=20,
                  n_jobs=None, oob_score=False, random_state=1234, verbose=0,
                  warm_start=False)
2024-07-25 15:52:36,685:INFO:ensemble_model() successfully completed......................................
2024-07-25 15:52:38,355:INFO:PyCaret ClassificationExperiment
2024-07-25 15:52:38,355:INFO:Logging name: clf-default-name
2024-07-25 15:52:38,355:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:52:38,355:INFO:version 3.3.2
2024-07-25 15:52:38,356:INFO:Initializing setup()
2024-07-25 15:52:38,356:INFO:self.USI: a3d4
2024-07-25 15:52:38,356:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:52:38,356:INFO:Checking environment
2024-07-25 15:52:38,356:INFO:python_version: 3.9.19
2024-07-25 15:52:38,357:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:52:38,357:INFO:machine: AMD64
2024-07-25 15:52:38,357:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:52:38,357:INFO:Memory: svmem(total=8387862528, available=733421568, percent=91.3, used=7654440960, free=733421568)
2024-07-25 15:52:38,357:INFO:Physical Core: 2
2024-07-25 15:52:38,357:INFO:Logical Core: 4
2024-07-25 15:52:38,357:INFO:Checking libraries
2024-07-25 15:52:38,358:INFO:System:
2024-07-25 15:52:38,358:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:52:38,358:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:52:38,358:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:52:38,359:INFO:PyCaret required dependencies:
2024-07-25 15:52:38,360:INFO:                 pip: 24.0
2024-07-25 15:52:38,361:INFO:          setuptools: 69.5.1
2024-07-25 15:52:38,361:INFO:             pycaret: 3.3.2
2024-07-25 15:52:38,361:INFO:             IPython: 8.18.1
2024-07-25 15:52:38,361:INFO:          ipywidgets: 8.1.3
2024-07-25 15:52:38,361:INFO:                tqdm: 4.66.4
2024-07-25 15:52:38,361:INFO:               numpy: 1.26.4
2024-07-25 15:52:38,362:INFO:              pandas: 2.1.4
2024-07-25 15:52:38,362:INFO:              jinja2: 3.1.4
2024-07-25 15:52:38,362:INFO:               scipy: 1.11.4
2024-07-25 15:52:38,362:INFO:              joblib: 1.3.2
2024-07-25 15:52:38,362:INFO:             sklearn: 1.4.2
2024-07-25 15:52:38,363:INFO:                pyod: 2.0.1
2024-07-25 15:52:38,363:INFO:            imblearn: 0.12.3
2024-07-25 15:52:38,363:INFO:   category_encoders: 2.6.3
2024-07-25 15:52:38,363:INFO:            lightgbm: 4.4.0
2024-07-25 15:52:38,364:INFO:               numba: 0.60.0
2024-07-25 15:52:38,364:INFO:            requests: 2.32.3
2024-07-25 15:52:38,364:INFO:          matplotlib: 3.7.5
2024-07-25 15:52:38,364:INFO:          scikitplot: 0.3.7
2024-07-25 15:52:38,364:INFO:         yellowbrick: 1.5
2024-07-25 15:52:38,364:INFO:              plotly: 5.23.0
2024-07-25 15:52:38,365:INFO:    plotly-resampler: Not installed
2024-07-25 15:52:38,365:INFO:             kaleido: 0.2.1
2024-07-25 15:52:38,365:INFO:           schemdraw: 0.15
2024-07-25 15:52:38,365:INFO:         statsmodels: 0.14.2
2024-07-25 15:52:38,365:INFO:              sktime: 0.26.0
2024-07-25 15:52:38,366:INFO:               tbats: 1.1.3
2024-07-25 15:52:38,366:INFO:            pmdarima: 2.0.4
2024-07-25 15:52:38,366:INFO:              psutil: 6.0.0
2024-07-25 15:52:38,366:INFO:          markupsafe: 2.1.5
2024-07-25 15:52:38,366:INFO:             pickle5: Not installed
2024-07-25 15:52:38,367:INFO:         cloudpickle: 3.0.0
2024-07-25 15:52:38,367:INFO:         deprecation: 2.1.0
2024-07-25 15:52:38,367:INFO:              xxhash: 3.4.1
2024-07-25 15:52:38,367:INFO:           wurlitzer: Not installed
2024-07-25 15:52:38,367:INFO:PyCaret optional dependencies:
2024-07-25 15:52:38,368:INFO:                shap: Not installed
2024-07-25 15:52:38,370:INFO:           interpret: Not installed
2024-07-25 15:52:38,370:INFO:                umap: Not installed
2024-07-25 15:52:38,371:INFO:     ydata_profiling: Not installed
2024-07-25 15:52:38,371:INFO:  explainerdashboard: Not installed
2024-07-25 15:52:38,371:INFO:             autoviz: Not installed
2024-07-25 15:52:38,371:INFO:           fairlearn: Not installed
2024-07-25 15:52:38,371:INFO:          deepchecks: Not installed
2024-07-25 15:52:38,372:INFO:             xgboost: Not installed
2024-07-25 15:52:38,372:INFO:            catboost: Not installed
2024-07-25 15:52:38,372:INFO:              kmodes: Not installed
2024-07-25 15:52:38,372:INFO:             mlxtend: Not installed
2024-07-25 15:52:38,372:INFO:       statsforecast: Not installed
2024-07-25 15:52:38,372:INFO:        tune_sklearn: Not installed
2024-07-25 15:52:38,373:INFO:                 ray: Not installed
2024-07-25 15:52:38,373:INFO:            hyperopt: Not installed
2024-07-25 15:52:38,373:INFO:              optuna: Not installed
2024-07-25 15:52:38,373:INFO:               skopt: Not installed
2024-07-25 15:52:38,373:INFO:              mlflow: Not installed
2024-07-25 15:52:38,374:INFO:              gradio: Not installed
2024-07-25 15:52:38,374:INFO:             fastapi: Not installed
2024-07-25 15:52:38,374:INFO:             uvicorn: Not installed
2024-07-25 15:52:38,374:INFO:              m2cgen: Not installed
2024-07-25 15:52:38,374:INFO:           evidently: Not installed
2024-07-25 15:52:38,375:INFO:               fugue: Not installed
2024-07-25 15:52:38,375:INFO:           streamlit: Not installed
2024-07-25 15:52:38,375:INFO:             prophet: Not installed
2024-07-25 15:52:38,375:INFO:None
2024-07-25 15:52:38,376:INFO:Set up data.
2024-07-25 15:52:38,413:INFO:Set up folding strategy.
2024-07-25 15:52:38,414:INFO:Set up train/test split.
2024-07-25 15:52:38,420:INFO:Set up index.
2024-07-25 15:52:38,420:INFO:Assigning column types.
2024-07-25 15:52:38,477:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:52:38,649:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:38,653:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:38,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:38,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:38,935:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:38,935:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:39,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,065:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:52:39,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:39,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,381:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:39,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,442:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:52:39,617:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:39,791:INFO:Preparing preprocessing pipeline...
2024-07-25 15:52:39,793:INFO:Set up simple imputation.
2024-07-25 15:52:39,795:INFO:Set up column name cleaning.
2024-07-25 15:52:39,892:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:52:39,926:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:52:39,926:INFO:Creating final display dataframe.
2024-07-25 15:52:40,270:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              a3d4
2024-07-25 15:52:40,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:40,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:40,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:40,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:40,618:INFO:setup() successfully completed in 2.47s...............
2024-07-25 15:52:40,633:INFO:Initializing create_model()
2024-07-25 15:52:40,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F36B8DF0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:40,634:INFO:Checking exceptions
2024-07-25 15:52:40,702:INFO:Importing libraries
2024-07-25 15:52:40,702:INFO:Copying training dataset
2024-07-25 15:52:40,727:INFO:Defining folds
2024-07-25 15:52:40,727:INFO:Declaring metric variables
2024-07-25 15:52:40,744:INFO:Importing untrained model
2024-07-25 15:52:40,766:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:40,792:INFO:Starting cross validation
2024-07-25 15:52:40,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:41,376:INFO:Calculating mean and std
2024-07-25 15:52:41,377:INFO:Creating metrics dataframe
2024-07-25 15:52:41,395:INFO:Finalizing model
2024-07-25 15:52:41,456:INFO:Uploading results into container
2024-07-25 15:52:41,459:INFO:Uploading model into container now
2024-07-25 15:52:41,503:INFO:_master_model_container: 1
2024-07-25 15:52:41,503:INFO:_display_container: 2
2024-07-25 15:52:41,504:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:41,505:INFO:create_model() successfully completed......................................
2024-07-25 15:52:41,604:INFO:Initializing ensemble_model()
2024-07-25 15:52:41,605:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F36B8DF0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), method=Boosting, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:52:41,605:INFO:Checking exceptions
2024-07-25 15:52:41,819:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:41,902:INFO:Importing libraries
2024-07-25 15:52:41,902:INFO:Copying training dataset
2024-07-25 15:52:41,903:INFO:Checking base model
2024-07-25 15:52:41,903:INFO:Base model : Decision Tree Classifier
2024-07-25 15:52:41,936:INFO:Importing untrained ensembler
2024-07-25 15:52:41,937:INFO:Ensemble method set to Boosting
2024-07-25 15:52:41,939:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:41,945:INFO:Initializing create_model()
2024-07-25 15:52:41,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F36B8DF0>, estimator=AdaBoostClassifier(algorithm='SAMME.R',
                   estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                    class_weight=None,
                                                    criterion='gini',
                                                    max_depth=None,
                                                    max_features=None,
                                                    max_leaf_nodes=None,
                                                    min_impurity_decrease=0.0,
                                                    min_samples_leaf=1,
                                                    min_samples_split=2,
                                                    min_weight_fraction_leaf=0.0,
                                                    monotonic_cst=None,
                                                    random_state=1234,
                                                    splitter='best'),
                   learning_rate=1.0, n_estimators=10, random_state=1234), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F34F1B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:41,945:INFO:Checking exceptions
2024-07-25 15:52:41,945:INFO:Importing libraries
2024-07-25 15:52:41,946:INFO:Copying training dataset
2024-07-25 15:52:41,960:INFO:Defining folds
2024-07-25 15:52:41,961:INFO:Declaring metric variables
2024-07-25 15:52:42,018:INFO:Importing untrained model
2024-07-25 15:52:42,018:INFO:Declaring custom model
2024-07-25 15:52:42,043:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:42,113:INFO:Starting cross validation
2024-07-25 15:52:42,121:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:42,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,266:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,273:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,312:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,492:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,523:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,632:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,669:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,800:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,832:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:42,982:INFO:Calculating mean and std
2024-07-25 15:52:42,982:INFO:Creating metrics dataframe
2024-07-25 15:52:43,012:INFO:Finalizing model
2024-07-25 15:52:43,039:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:52:43,071:INFO:Uploading results into container
2024-07-25 15:52:43,086:INFO:Uploading model into container now
2024-07-25 15:52:43,086:INFO:_master_model_container: 2
2024-07-25 15:52:43,086:INFO:_display_container: 3
2024-07-25 15:52:43,092:INFO:AdaBoostClassifier(algorithm='SAMME.R',
                   estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                    class_weight=None,
                                                    criterion='gini',
                                                    max_depth=None,
                                                    max_features=None,
                                                    max_leaf_nodes=None,
                                                    min_impurity_decrease=0.0,
                                                    min_samples_leaf=1,
                                                    min_samples_split=2,
                                                    min_weight_fraction_leaf=0.0,
                                                    monotonic_cst=None,
                                                    random_state=1234,
                                                    splitter='best'),
                   learning_rate=1.0, n_estimators=10, random_state=1234)
2024-07-25 15:52:43,092:INFO:create_model() successfully completed......................................
2024-07-25 15:52:43,165:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:43,211:INFO:_master_model_container: 2
2024-07-25 15:52:43,211:INFO:_display_container: 3
2024-07-25 15:52:43,211:INFO:AdaBoostClassifier(algorithm='SAMME.R',
                   estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                    class_weight=None,
                                                    criterion='gini',
                                                    max_depth=None,
                                                    max_features=None,
                                                    max_leaf_nodes=None,
                                                    min_impurity_decrease=0.0,
                                                    min_samples_leaf=1,
                                                    min_samples_split=2,
                                                    min_weight_fraction_leaf=0.0,
                                                    monotonic_cst=None,
                                                    random_state=1234,
                                                    splitter='best'),
                   learning_rate=1.0, n_estimators=10, random_state=1234)
2024-07-25 15:52:43,211:INFO:ensemble_model() successfully completed......................................
2024-07-25 15:52:44,237:INFO:PyCaret ClassificationExperiment
2024-07-25 15:52:44,237:INFO:Logging name: clf-default-name
2024-07-25 15:52:44,237:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:52:44,237:INFO:version 3.3.2
2024-07-25 15:52:44,237:INFO:Initializing setup()
2024-07-25 15:52:44,237:INFO:self.USI: b383
2024-07-25 15:52:44,238:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:52:44,238:INFO:Checking environment
2024-07-25 15:52:44,238:INFO:python_version: 3.9.19
2024-07-25 15:52:44,238:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:52:44,238:INFO:machine: AMD64
2024-07-25 15:52:44,238:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:52:44,238:INFO:Memory: svmem(total=8387862528, available=717434880, percent=91.4, used=7670427648, free=717434880)
2024-07-25 15:52:44,238:INFO:Physical Core: 2
2024-07-25 15:52:44,239:INFO:Logical Core: 4
2024-07-25 15:52:44,239:INFO:Checking libraries
2024-07-25 15:52:44,239:INFO:System:
2024-07-25 15:52:44,239:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:52:44,239:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:52:44,239:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:52:44,239:INFO:PyCaret required dependencies:
2024-07-25 15:52:44,240:INFO:                 pip: 24.0
2024-07-25 15:52:44,240:INFO:          setuptools: 69.5.1
2024-07-25 15:52:44,240:INFO:             pycaret: 3.3.2
2024-07-25 15:52:44,240:INFO:             IPython: 8.18.1
2024-07-25 15:52:44,240:INFO:          ipywidgets: 8.1.3
2024-07-25 15:52:44,240:INFO:                tqdm: 4.66.4
2024-07-25 15:52:44,240:INFO:               numpy: 1.26.4
2024-07-25 15:52:44,240:INFO:              pandas: 2.1.4
2024-07-25 15:52:44,240:INFO:              jinja2: 3.1.4
2024-07-25 15:52:44,240:INFO:               scipy: 1.11.4
2024-07-25 15:52:44,241:INFO:              joblib: 1.3.2
2024-07-25 15:52:44,241:INFO:             sklearn: 1.4.2
2024-07-25 15:52:44,241:INFO:                pyod: 2.0.1
2024-07-25 15:52:44,241:INFO:            imblearn: 0.12.3
2024-07-25 15:52:44,241:INFO:   category_encoders: 2.6.3
2024-07-25 15:52:44,241:INFO:            lightgbm: 4.4.0
2024-07-25 15:52:44,241:INFO:               numba: 0.60.0
2024-07-25 15:52:44,241:INFO:            requests: 2.32.3
2024-07-25 15:52:44,241:INFO:          matplotlib: 3.7.5
2024-07-25 15:52:44,242:INFO:          scikitplot: 0.3.7
2024-07-25 15:52:44,242:INFO:         yellowbrick: 1.5
2024-07-25 15:52:44,242:INFO:              plotly: 5.23.0
2024-07-25 15:52:44,242:INFO:    plotly-resampler: Not installed
2024-07-25 15:52:44,242:INFO:             kaleido: 0.2.1
2024-07-25 15:52:44,242:INFO:           schemdraw: 0.15
2024-07-25 15:52:44,242:INFO:         statsmodels: 0.14.2
2024-07-25 15:52:44,243:INFO:              sktime: 0.26.0
2024-07-25 15:52:44,243:INFO:               tbats: 1.1.3
2024-07-25 15:52:44,243:INFO:            pmdarima: 2.0.4
2024-07-25 15:52:44,243:INFO:              psutil: 6.0.0
2024-07-25 15:52:44,243:INFO:          markupsafe: 2.1.5
2024-07-25 15:52:44,243:INFO:             pickle5: Not installed
2024-07-25 15:52:44,244:INFO:         cloudpickle: 3.0.0
2024-07-25 15:52:44,244:INFO:         deprecation: 2.1.0
2024-07-25 15:52:44,244:INFO:              xxhash: 3.4.1
2024-07-25 15:52:44,244:INFO:           wurlitzer: Not installed
2024-07-25 15:52:44,244:INFO:PyCaret optional dependencies:
2024-07-25 15:52:44,245:INFO:                shap: Not installed
2024-07-25 15:52:44,245:INFO:           interpret: Not installed
2024-07-25 15:52:44,245:INFO:                umap: Not installed
2024-07-25 15:52:44,245:INFO:     ydata_profiling: Not installed
2024-07-25 15:52:44,246:INFO:  explainerdashboard: Not installed
2024-07-25 15:52:44,247:INFO:             autoviz: Not installed
2024-07-25 15:52:44,247:INFO:           fairlearn: Not installed
2024-07-25 15:52:44,247:INFO:          deepchecks: Not installed
2024-07-25 15:52:44,247:INFO:             xgboost: Not installed
2024-07-25 15:52:44,247:INFO:            catboost: Not installed
2024-07-25 15:52:44,247:INFO:              kmodes: Not installed
2024-07-25 15:52:44,248:INFO:             mlxtend: Not installed
2024-07-25 15:52:44,249:INFO:       statsforecast: Not installed
2024-07-25 15:52:44,249:INFO:        tune_sklearn: Not installed
2024-07-25 15:52:44,249:INFO:                 ray: Not installed
2024-07-25 15:52:44,249:INFO:            hyperopt: Not installed
2024-07-25 15:52:44,249:INFO:              optuna: Not installed
2024-07-25 15:52:44,249:INFO:               skopt: Not installed
2024-07-25 15:52:44,249:INFO:              mlflow: Not installed
2024-07-25 15:52:44,249:INFO:              gradio: Not installed
2024-07-25 15:52:44,250:INFO:             fastapi: Not installed
2024-07-25 15:52:44,250:INFO:             uvicorn: Not installed
2024-07-25 15:52:44,250:INFO:              m2cgen: Not installed
2024-07-25 15:52:44,250:INFO:           evidently: Not installed
2024-07-25 15:52:44,250:INFO:               fugue: Not installed
2024-07-25 15:52:44,250:INFO:           streamlit: Not installed
2024-07-25 15:52:44,250:INFO:             prophet: Not installed
2024-07-25 15:52:44,250:INFO:None
2024-07-25 15:52:44,250:INFO:Set up data.
2024-07-25 15:52:44,263:INFO:Set up folding strategy.
2024-07-25 15:52:44,266:INFO:Set up train/test split.
2024-07-25 15:52:44,275:INFO:Set up index.
2024-07-25 15:52:44,275:INFO:Assigning column types.
2024-07-25 15:52:44,287:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:52:44,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:44,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:44,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:52:44,558:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:44,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,595:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:52:44,678:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:44,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,797:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:52:44,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,835:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:52:44,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:44,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:45,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:45,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:45,061:INFO:Preparing preprocessing pipeline...
2024-07-25 15:52:45,077:INFO:Set up simple imputation.
2024-07-25 15:52:45,077:INFO:Set up column name cleaning.
2024-07-25 15:52:45,146:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:52:45,173:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:52:45,173:INFO:Creating final display dataframe.
2024-07-25 15:52:45,821:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              b383
2024-07-25 15:52:46,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:46,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:46,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:46,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:52:46,209:INFO:setup() successfully completed in 1.99s...............
2024-07-25 15:52:46,224:INFO:Initializing create_model()
2024-07-25 15:52:46,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:46,224:INFO:Checking exceptions
2024-07-25 15:52:46,288:INFO:Importing libraries
2024-07-25 15:52:46,288:INFO:Copying training dataset
2024-07-25 15:52:46,314:INFO:Defining folds
2024-07-25 15:52:46,314:INFO:Declaring metric variables
2024-07-25 15:52:46,329:INFO:Importing untrained model
2024-07-25 15:52:46,342:INFO:Logistic Regression Imported successfully
2024-07-25 15:52:46,371:INFO:Starting cross validation
2024-07-25 15:52:46,375:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:47,082:INFO:Calculating mean and std
2024-07-25 15:52:47,082:INFO:Creating metrics dataframe
2024-07-25 15:52:47,097:INFO:Finalizing model
2024-07-25 15:52:47,199:INFO:Uploading results into container
2024-07-25 15:52:47,201:INFO:Uploading model into container now
2024-07-25 15:52:47,246:INFO:_master_model_container: 1
2024-07-25 15:52:47,247:INFO:_display_container: 2
2024-07-25 15:52:47,248:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:52:47,248:INFO:create_model() successfully completed......................................
2024-07-25 15:52:47,335:INFO:Initializing create_model()
2024-07-25 15:52:47,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:47,336:INFO:Checking exceptions
2024-07-25 15:52:47,373:INFO:Importing libraries
2024-07-25 15:52:47,374:INFO:Copying training dataset
2024-07-25 15:52:47,394:INFO:Defining folds
2024-07-25 15:52:47,394:INFO:Declaring metric variables
2024-07-25 15:52:47,406:INFO:Importing untrained model
2024-07-25 15:52:47,425:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:52:47,474:INFO:Starting cross validation
2024-07-25 15:52:47,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:47,978:INFO:Calculating mean and std
2024-07-25 15:52:47,979:INFO:Creating metrics dataframe
2024-07-25 15:52:47,994:INFO:Finalizing model
2024-07-25 15:52:48,025:INFO:Uploading results into container
2024-07-25 15:52:48,025:INFO:Uploading model into container now
2024-07-25 15:52:48,079:INFO:_master_model_container: 2
2024-07-25 15:52:48,079:INFO:_display_container: 3
2024-07-25 15:52:48,081:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:52:48,081:INFO:create_model() successfully completed......................................
2024-07-25 15:52:48,169:INFO:Initializing create_model()
2024-07-25 15:52:48,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:48,169:INFO:Checking exceptions
2024-07-25 15:52:48,221:INFO:Importing libraries
2024-07-25 15:52:48,221:INFO:Copying training dataset
2024-07-25 15:52:48,289:INFO:Defining folds
2024-07-25 15:52:48,290:INFO:Declaring metric variables
2024-07-25 15:52:48,292:INFO:Importing untrained model
2024-07-25 15:52:48,349:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:52:48,381:INFO:Starting cross validation
2024-07-25 15:52:48,401:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:52,449:INFO:Calculating mean and std
2024-07-25 15:52:52,449:INFO:Creating metrics dataframe
2024-07-25 15:52:52,470:INFO:Finalizing model
2024-07-25 15:52:52,913:INFO:Uploading results into container
2024-07-25 15:52:52,918:INFO:Uploading model into container now
2024-07-25 15:52:52,956:INFO:_master_model_container: 3
2024-07-25 15:52:52,956:INFO:_display_container: 4
2024-07-25 15:52:52,956:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:52:52,956:INFO:create_model() successfully completed......................................
2024-07-25 15:52:53,039:INFO:Initializing blend_models()
2024-07-25 15:52:53,039:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator_list=[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:52:53,039:INFO:Checking exceptions
2024-07-25 15:52:53,089:INFO:Importing libraries
2024-07-25 15:52:53,090:INFO:Copying training dataset
2024-07-25 15:52:53,108:INFO:Getting model names
2024-07-25 15:52:53,124:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:53,149:INFO:Initializing create_model()
2024-07-25 15:52:53,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=1234,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0....
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F371D1F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:53,150:INFO:Checking exceptions
2024-07-25 15:52:53,150:INFO:Importing libraries
2024-07-25 15:52:53,150:INFO:Copying training dataset
2024-07-25 15:52:53,153:INFO:Defining folds
2024-07-25 15:52:53,153:INFO:Declaring metric variables
2024-07-25 15:52:53,169:INFO:Importing untrained model
2024-07-25 15:52:53,169:INFO:Declaring custom model
2024-07-25 15:52:53,184:INFO:Voting Classifier Imported successfully
2024-07-25 15:52:53,216:INFO:Starting cross validation
2024-07-25 15:52:53,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:52:56,917:INFO:Calculating mean and std
2024-07-25 15:52:56,920:INFO:Creating metrics dataframe
2024-07-25 15:52:56,937:INFO:Finalizing model
2024-07-25 15:52:57,468:INFO:Uploading results into container
2024-07-25 15:52:57,475:INFO:Uploading model into container now
2024-07-25 15:52:57,478:INFO:_master_model_container: 4
2024-07-25 15:52:57,478:INFO:_display_container: 5
2024-07-25 15:52:57,497:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=1234,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0....
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2024-07-25 15:52:57,498:INFO:create_model() successfully completed......................................
2024-07-25 15:52:57,566:INFO:SubProcess create_model() end ==================================
2024-07-25 15:52:57,599:INFO:_master_model_container: 4
2024-07-25 15:52:57,599:INFO:_display_container: 5
2024-07-25 15:52:57,599:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=1234,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0....
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2024-07-25 15:52:57,599:INFO:blend_models() successfully completed......................................
2024-07-25 15:52:57,927:INFO:Initializing blend_models()
2024-07-25 15:52:57,927:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator_list=[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=[0.3, 0.4, 0.3], fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:52:57,927:INFO:Checking exceptions
2024-07-25 15:52:57,994:INFO:Importing libraries
2024-07-25 15:52:57,995:INFO:Copying training dataset
2024-07-25 15:52:58,014:INFO:Getting model names
2024-07-25 15:52:58,029:INFO:SubProcess create_model() called ==================================
2024-07-25 15:52:58,050:INFO:Initializing create_model()
2024-07-25 15:52:58,050:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=1234,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0....
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=[0.3, 0.4, 0.3]), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EEF9BA60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:52:58,051:INFO:Checking exceptions
2024-07-25 15:52:58,051:INFO:Importing libraries
2024-07-25 15:52:58,051:INFO:Copying training dataset
2024-07-25 15:52:58,098:INFO:Defining folds
2024-07-25 15:52:58,099:INFO:Declaring metric variables
2024-07-25 15:52:58,115:INFO:Importing untrained model
2024-07-25 15:52:58,115:INFO:Declaring custom model
2024-07-25 15:52:58,170:INFO:Voting Classifier Imported successfully
2024-07-25 15:52:58,211:INFO:Starting cross validation
2024-07-25 15:52:58,216:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:01,745:INFO:Calculating mean and std
2024-07-25 15:53:01,745:INFO:Creating metrics dataframe
2024-07-25 15:53:01,762:INFO:Finalizing model
2024-07-25 15:53:02,256:INFO:Uploading results into container
2024-07-25 15:53:02,257:INFO:Uploading model into container now
2024-07-25 15:53:02,258:INFO:_master_model_container: 5
2024-07-25 15:53:02,258:INFO:_display_container: 6
2024-07-25 15:53:02,262:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=1234,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0....
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=[0.3, 0.4, 0.3])
2024-07-25 15:53:02,262:INFO:create_model() successfully completed......................................
2024-07-25 15:53:02,344:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:02,361:INFO:_master_model_container: 5
2024-07-25 15:53:02,361:INFO:_display_container: 6
2024-07-25 15:53:02,399:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=1234,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0....
                                                     max_depth=None,
                                                     max_features='sqrt',
                                                     max_leaf_nodes=None,
                                                     max_samples=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     monotonic_cst=None,
                                                     n_estimators=100,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=[0.3, 0.4, 0.3])
2024-07-25 15:53:02,399:INFO:blend_models() successfully completed......................................
2024-07-25 15:53:02,528:INFO:Initializing compare_models()
2024-07-25 15:53:02,528:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 15:53:02,528:INFO:Checking exceptions
2024-07-25 15:53:02,528:INFO:Preparing display monitor
2024-07-25 15:53:02,722:INFO:Initializing Logistic Regression
2024-07-25 15:53:02,722:INFO:Total runtime is 0.0 minutes
2024-07-25 15:53:02,727:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:02,727:INFO:Initializing create_model()
2024-07-25 15:53:02,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:02,727:INFO:Checking exceptions
2024-07-25 15:53:02,727:INFO:Importing libraries
2024-07-25 15:53:02,727:INFO:Copying training dataset
2024-07-25 15:53:02,745:INFO:Defining folds
2024-07-25 15:53:02,745:INFO:Declaring metric variables
2024-07-25 15:53:02,761:INFO:Importing untrained model
2024-07-25 15:53:02,765:INFO:Logistic Regression Imported successfully
2024-07-25 15:53:02,795:INFO:Starting cross validation
2024-07-25 15:53:02,800:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:03,427:INFO:Calculating mean and std
2024-07-25 15:53:03,427:INFO:Creating metrics dataframe
2024-07-25 15:53:03,427:INFO:Uploading results into container
2024-07-25 15:53:03,427:INFO:Uploading model into container now
2024-07-25 15:53:03,443:INFO:_master_model_container: 6
2024-07-25 15:53:03,444:INFO:_display_container: 7
2024-07-25 15:53:03,444:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:53:03,444:INFO:create_model() successfully completed......................................
2024-07-25 15:53:03,514:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:03,514:INFO:Creating metrics dataframe
2024-07-25 15:53:03,527:INFO:Initializing K Neighbors Classifier
2024-07-25 15:53:03,527:INFO:Total runtime is 0.013414736588795979 minutes
2024-07-25 15:53:03,543:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:03,543:INFO:Initializing create_model()
2024-07-25 15:53:03,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:03,543:INFO:Checking exceptions
2024-07-25 15:53:03,543:INFO:Importing libraries
2024-07-25 15:53:03,543:INFO:Copying training dataset
2024-07-25 15:53:03,560:INFO:Defining folds
2024-07-25 15:53:03,560:INFO:Declaring metric variables
2024-07-25 15:53:03,560:INFO:Importing untrained model
2024-07-25 15:53:03,576:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:53:03,598:INFO:Starting cross validation
2024-07-25 15:53:03,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:04,276:INFO:Calculating mean and std
2024-07-25 15:53:04,276:INFO:Creating metrics dataframe
2024-07-25 15:53:04,276:INFO:Uploading results into container
2024-07-25 15:53:04,276:INFO:Uploading model into container now
2024-07-25 15:53:04,276:INFO:_master_model_container: 7
2024-07-25 15:53:04,276:INFO:_display_container: 7
2024-07-25 15:53:04,293:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:53:04,293:INFO:create_model() successfully completed......................................
2024-07-25 15:53:04,379:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:04,379:INFO:Creating metrics dataframe
2024-07-25 15:53:04,398:INFO:Initializing Naive Bayes
2024-07-25 15:53:04,398:INFO:Total runtime is 0.027938715616861978 minutes
2024-07-25 15:53:04,407:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:04,408:INFO:Initializing create_model()
2024-07-25 15:53:04,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:04,409:INFO:Checking exceptions
2024-07-25 15:53:04,409:INFO:Importing libraries
2024-07-25 15:53:04,409:INFO:Copying training dataset
2024-07-25 15:53:04,409:INFO:Defining folds
2024-07-25 15:53:04,409:INFO:Declaring metric variables
2024-07-25 15:53:04,426:INFO:Importing untrained model
2024-07-25 15:53:04,442:INFO:Naive Bayes Imported successfully
2024-07-25 15:53:04,463:INFO:Starting cross validation
2024-07-25 15:53:04,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:04,858:INFO:Calculating mean and std
2024-07-25 15:53:04,861:INFO:Creating metrics dataframe
2024-07-25 15:53:04,867:INFO:Uploading results into container
2024-07-25 15:53:04,868:INFO:Uploading model into container now
2024-07-25 15:53:04,869:INFO:_master_model_container: 8
2024-07-25 15:53:04,869:INFO:_display_container: 7
2024-07-25 15:53:04,870:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 15:53:04,871:INFO:create_model() successfully completed......................................
2024-07-25 15:53:04,942:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:04,942:INFO:Creating metrics dataframe
2024-07-25 15:53:04,975:INFO:Initializing Decision Tree Classifier
2024-07-25 15:53:04,975:INFO:Total runtime is 0.03755447467168172 minutes
2024-07-25 15:53:04,975:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:04,975:INFO:Initializing create_model()
2024-07-25 15:53:04,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:04,975:INFO:Checking exceptions
2024-07-25 15:53:04,975:INFO:Importing libraries
2024-07-25 15:53:04,975:INFO:Copying training dataset
2024-07-25 15:53:04,999:INFO:Defining folds
2024-07-25 15:53:04,999:INFO:Declaring metric variables
2024-07-25 15:53:05,009:INFO:Importing untrained model
2024-07-25 15:53:05,026:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:53:05,042:INFO:Starting cross validation
2024-07-25 15:53:05,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:05,491:INFO:Calculating mean and std
2024-07-25 15:53:05,491:INFO:Creating metrics dataframe
2024-07-25 15:53:05,491:INFO:Uploading results into container
2024-07-25 15:53:05,491:INFO:Uploading model into container now
2024-07-25 15:53:05,491:INFO:_master_model_container: 9
2024-07-25 15:53:05,491:INFO:_display_container: 7
2024-07-25 15:53:05,491:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:53:05,491:INFO:create_model() successfully completed......................................
2024-07-25 15:53:05,574:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:05,574:INFO:Creating metrics dataframe
2024-07-25 15:53:05,608:INFO:Initializing SVM - Linear Kernel
2024-07-25 15:53:05,608:INFO:Total runtime is 0.048102120558420815 minutes
2024-07-25 15:53:05,624:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:05,624:INFO:Initializing create_model()
2024-07-25 15:53:05,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:05,624:INFO:Checking exceptions
2024-07-25 15:53:05,624:INFO:Importing libraries
2024-07-25 15:53:05,624:INFO:Copying training dataset
2024-07-25 15:53:05,641:INFO:Defining folds
2024-07-25 15:53:05,641:INFO:Declaring metric variables
2024-07-25 15:53:05,663:INFO:Importing untrained model
2024-07-25 15:53:05,674:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 15:53:05,693:INFO:Starting cross validation
2024-07-25 15:53:05,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:06,157:INFO:Calculating mean and std
2024-07-25 15:53:06,157:INFO:Creating metrics dataframe
2024-07-25 15:53:06,157:INFO:Uploading results into container
2024-07-25 15:53:06,157:INFO:Uploading model into container now
2024-07-25 15:53:06,157:INFO:_master_model_container: 10
2024-07-25 15:53:06,174:INFO:_display_container: 7
2024-07-25 15:53:06,178:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1234, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 15:53:06,179:INFO:create_model() successfully completed......................................
2024-07-25 15:53:06,257:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:06,257:INFO:Creating metrics dataframe
2024-07-25 15:53:06,274:INFO:Initializing Ridge Classifier
2024-07-25 15:53:06,289:INFO:Total runtime is 0.059459396203358966 minutes
2024-07-25 15:53:06,290:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:06,290:INFO:Initializing create_model()
2024-07-25 15:53:06,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:06,290:INFO:Checking exceptions
2024-07-25 15:53:06,290:INFO:Importing libraries
2024-07-25 15:53:06,290:INFO:Copying training dataset
2024-07-25 15:53:06,307:INFO:Defining folds
2024-07-25 15:53:06,307:INFO:Declaring metric variables
2024-07-25 15:53:06,324:INFO:Importing untrained model
2024-07-25 15:53:06,340:INFO:Ridge Classifier Imported successfully
2024-07-25 15:53:06,357:INFO:Starting cross validation
2024-07-25 15:53:06,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:06,836:INFO:Calculating mean and std
2024-07-25 15:53:06,841:INFO:Creating metrics dataframe
2024-07-25 15:53:06,849:INFO:Uploading results into container
2024-07-25 15:53:06,850:INFO:Uploading model into container now
2024-07-25 15:53:06,851:INFO:_master_model_container: 11
2024-07-25 15:53:06,851:INFO:_display_container: 7
2024-07-25 15:53:06,852:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:53:06,853:INFO:create_model() successfully completed......................................
2024-07-25 15:53:06,944:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:06,944:INFO:Creating metrics dataframe
2024-07-25 15:53:06,976:INFO:Initializing Random Forest Classifier
2024-07-25 15:53:06,976:INFO:Total runtime is 0.07090129454930623 minutes
2024-07-25 15:53:06,986:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:06,987:INFO:Initializing create_model()
2024-07-25 15:53:06,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:06,988:INFO:Checking exceptions
2024-07-25 15:53:06,988:INFO:Importing libraries
2024-07-25 15:53:06,988:INFO:Copying training dataset
2024-07-25 15:53:06,990:INFO:Defining folds
2024-07-25 15:53:06,990:INFO:Declaring metric variables
2024-07-25 15:53:07,015:INFO:Importing untrained model
2024-07-25 15:53:07,028:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:53:07,075:INFO:Starting cross validation
2024-07-25 15:53:07,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:11,013:INFO:Calculating mean and std
2024-07-25 15:53:11,013:INFO:Creating metrics dataframe
2024-07-25 15:53:11,013:INFO:Uploading results into container
2024-07-25 15:53:11,013:INFO:Uploading model into container now
2024-07-25 15:53:11,013:INFO:_master_model_container: 12
2024-07-25 15:53:11,029:INFO:_display_container: 7
2024-07-25 15:53:11,030:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:53:11,030:INFO:create_model() successfully completed......................................
2024-07-25 15:53:11,169:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:11,169:INFO:Creating metrics dataframe
2024-07-25 15:53:11,210:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 15:53:11,210:INFO:Total runtime is 0.1414699117342631 minutes
2024-07-25 15:53:11,210:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:11,210:INFO:Initializing create_model()
2024-07-25 15:53:11,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:11,226:INFO:Checking exceptions
2024-07-25 15:53:11,226:INFO:Importing libraries
2024-07-25 15:53:11,226:INFO:Copying training dataset
2024-07-25 15:53:11,226:INFO:Defining folds
2024-07-25 15:53:11,226:INFO:Declaring metric variables
2024-07-25 15:53:11,241:INFO:Importing untrained model
2024-07-25 15:53:11,257:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 15:53:11,286:INFO:Starting cross validation
2024-07-25 15:53:11,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:11,792:INFO:Calculating mean and std
2024-07-25 15:53:11,792:INFO:Creating metrics dataframe
2024-07-25 15:53:11,792:INFO:Uploading results into container
2024-07-25 15:53:11,792:INFO:Uploading model into container now
2024-07-25 15:53:11,792:INFO:_master_model_container: 13
2024-07-25 15:53:11,792:INFO:_display_container: 7
2024-07-25 15:53:11,792:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 15:53:11,792:INFO:create_model() successfully completed......................................
2024-07-25 15:53:11,874:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:11,874:INFO:Creating metrics dataframe
2024-07-25 15:53:11,921:INFO:Initializing Ada Boost Classifier
2024-07-25 15:53:11,921:INFO:Total runtime is 0.15332223574320475 minutes
2024-07-25 15:53:11,921:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:11,937:INFO:Initializing create_model()
2024-07-25 15:53:11,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:11,938:INFO:Checking exceptions
2024-07-25 15:53:11,938:INFO:Importing libraries
2024-07-25 15:53:11,938:INFO:Copying training dataset
2024-07-25 15:53:11,943:INFO:Defining folds
2024-07-25 15:53:11,943:INFO:Declaring metric variables
2024-07-25 15:53:11,958:INFO:Importing untrained model
2024-07-25 15:53:11,958:INFO:Ada Boost Classifier Imported successfully
2024-07-25 15:53:11,989:INFO:Starting cross validation
2024-07-25 15:53:11,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:12,057:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:12,071:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:12,078:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:12,118:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:13,022:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:13,037:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:13,054:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:13,071:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:13,861:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:13,877:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:14,734:INFO:Calculating mean and std
2024-07-25 15:53:14,734:INFO:Creating metrics dataframe
2024-07-25 15:53:14,745:INFO:Uploading results into container
2024-07-25 15:53:14,745:INFO:Uploading model into container now
2024-07-25 15:53:14,753:INFO:_master_model_container: 14
2024-07-25 15:53:14,753:INFO:_display_container: 7
2024-07-25 15:53:14,753:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1234)
2024-07-25 15:53:14,753:INFO:create_model() successfully completed......................................
2024-07-25 15:53:14,853:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:14,854:INFO:Creating metrics dataframe
2024-07-25 15:53:14,883:INFO:Initializing Gradient Boosting Classifier
2024-07-25 15:53:14,883:INFO:Total runtime is 0.2026925802230835 minutes
2024-07-25 15:53:14,902:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:14,902:INFO:Initializing create_model()
2024-07-25 15:53:14,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:14,902:INFO:Checking exceptions
2024-07-25 15:53:14,902:INFO:Importing libraries
2024-07-25 15:53:14,914:INFO:Copying training dataset
2024-07-25 15:53:14,917:INFO:Defining folds
2024-07-25 15:53:14,917:INFO:Declaring metric variables
2024-07-25 15:53:14,933:INFO:Importing untrained model
2024-07-25 15:53:14,956:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 15:53:14,973:INFO:Starting cross validation
2024-07-25 15:53:14,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:18,478:INFO:Calculating mean and std
2024-07-25 15:53:18,478:INFO:Creating metrics dataframe
2024-07-25 15:53:18,478:INFO:Uploading results into container
2024-07-25 15:53:18,478:INFO:Uploading model into container now
2024-07-25 15:53:18,478:INFO:_master_model_container: 15
2024-07-25 15:53:18,478:INFO:_display_container: 7
2024-07-25 15:53:18,494:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1234, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 15:53:18,494:INFO:create_model() successfully completed......................................
2024-07-25 15:53:18,585:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:18,585:INFO:Creating metrics dataframe
2024-07-25 15:53:18,634:INFO:Initializing Linear Discriminant Analysis
2024-07-25 15:53:18,634:INFO:Total runtime is 0.2652063528696696 minutes
2024-07-25 15:53:18,663:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:18,665:INFO:Initializing create_model()
2024-07-25 15:53:18,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:18,666:INFO:Checking exceptions
2024-07-25 15:53:18,666:INFO:Importing libraries
2024-07-25 15:53:18,666:INFO:Copying training dataset
2024-07-25 15:53:18,687:INFO:Defining folds
2024-07-25 15:53:18,687:INFO:Declaring metric variables
2024-07-25 15:53:18,705:INFO:Importing untrained model
2024-07-25 15:53:18,734:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:53:18,762:INFO:Starting cross validation
2024-07-25 15:53:18,779:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:19,480:INFO:Calculating mean and std
2024-07-25 15:53:19,491:INFO:Creating metrics dataframe
2024-07-25 15:53:19,505:INFO:Uploading results into container
2024-07-25 15:53:19,508:INFO:Uploading model into container now
2024-07-25 15:53:19,513:INFO:_master_model_container: 16
2024-07-25 15:53:19,513:INFO:_display_container: 7
2024-07-25 15:53:19,515:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 15:53:19,515:INFO:create_model() successfully completed......................................
2024-07-25 15:53:19,700:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:19,700:INFO:Creating metrics dataframe
2024-07-25 15:53:19,816:INFO:Initializing Extra Trees Classifier
2024-07-25 15:53:19,816:INFO:Total runtime is 0.2848988095919291 minutes
2024-07-25 15:53:19,816:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:19,816:INFO:Initializing create_model()
2024-07-25 15:53:19,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:19,816:INFO:Checking exceptions
2024-07-25 15:53:19,831:INFO:Importing libraries
2024-07-25 15:53:19,831:INFO:Copying training dataset
2024-07-25 15:53:19,831:INFO:Defining folds
2024-07-25 15:53:19,831:INFO:Declaring metric variables
2024-07-25 15:53:19,847:INFO:Importing untrained model
2024-07-25 15:53:19,863:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:53:19,880:INFO:Starting cross validation
2024-07-25 15:53:19,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:24,936:INFO:Calculating mean and std
2024-07-25 15:53:24,936:INFO:Creating metrics dataframe
2024-07-25 15:53:24,952:INFO:Uploading results into container
2024-07-25 15:53:24,952:INFO:Uploading model into container now
2024-07-25 15:53:24,952:INFO:_master_model_container: 17
2024-07-25 15:53:24,952:INFO:_display_container: 7
2024-07-25 15:53:24,952:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-07-25 15:53:24,952:INFO:create_model() successfully completed......................................
2024-07-25 15:53:25,137:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:25,138:INFO:Creating metrics dataframe
2024-07-25 15:53:25,175:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 15:53:25,175:INFO:Total runtime is 0.37422531843185425 minutes
2024-07-25 15:53:25,191:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:25,191:INFO:Initializing create_model()
2024-07-25 15:53:25,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:25,191:INFO:Checking exceptions
2024-07-25 15:53:25,191:INFO:Importing libraries
2024-07-25 15:53:25,191:INFO:Copying training dataset
2024-07-25 15:53:25,191:INFO:Defining folds
2024-07-25 15:53:25,207:INFO:Declaring metric variables
2024-07-25 15:53:25,213:INFO:Importing untrained model
2024-07-25 15:53:25,229:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 15:53:25,255:INFO:Starting cross validation
2024-07-25 15:53:25,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:27,035:INFO:Calculating mean and std
2024-07-25 15:53:27,046:INFO:Creating metrics dataframe
2024-07-25 15:53:27,052:INFO:Uploading results into container
2024-07-25 15:53:27,052:INFO:Uploading model into container now
2024-07-25 15:53:27,052:INFO:_master_model_container: 18
2024-07-25 15:53:27,052:INFO:_display_container: 7
2024-07-25 15:53:27,052:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1234, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 15:53:27,052:INFO:create_model() successfully completed......................................
2024-07-25 15:53:27,144:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:27,144:INFO:Creating metrics dataframe
2024-07-25 15:53:27,185:INFO:Initializing Dummy Classifier
2024-07-25 15:53:27,185:INFO:Total runtime is 0.4077268282572428 minutes
2024-07-25 15:53:27,185:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:27,201:INFO:Initializing create_model()
2024-07-25 15:53:27,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF09A4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:27,201:INFO:Checking exceptions
2024-07-25 15:53:27,201:INFO:Importing libraries
2024-07-25 15:53:27,201:INFO:Copying training dataset
2024-07-25 15:53:27,201:INFO:Defining folds
2024-07-25 15:53:27,201:INFO:Declaring metric variables
2024-07-25 15:53:27,217:INFO:Importing untrained model
2024-07-25 15:53:27,234:INFO:Dummy Classifier Imported successfully
2024-07-25 15:53:27,257:INFO:Starting cross validation
2024-07-25 15:53:27,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:27,420:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,440:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,468:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,505:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,726:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,785:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,800:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,874:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,988:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:27,988:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:53:28,036:INFO:Calculating mean and std
2024-07-25 15:53:28,037:INFO:Creating metrics dataframe
2024-07-25 15:53:28,037:INFO:Uploading results into container
2024-07-25 15:53:28,037:INFO:Uploading model into container now
2024-07-25 15:53:28,037:INFO:_master_model_container: 19
2024-07-25 15:53:28,037:INFO:_display_container: 7
2024-07-25 15:53:28,037:INFO:DummyClassifier(constant=None, random_state=1234, strategy='prior')
2024-07-25 15:53:28,049:INFO:create_model() successfully completed......................................
2024-07-25 15:53:28,136:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:28,136:INFO:Creating metrics dataframe
2024-07-25 15:53:28,186:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 15:53:28,203:INFO:Initializing create_model()
2024-07-25 15:53:28,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:28,203:INFO:Checking exceptions
2024-07-25 15:53:28,220:INFO:Importing libraries
2024-07-25 15:53:28,220:INFO:Copying training dataset
2024-07-25 15:53:28,235:INFO:Defining folds
2024-07-25 15:53:28,235:INFO:Declaring metric variables
2024-07-25 15:53:28,235:INFO:Importing untrained model
2024-07-25 15:53:28,235:INFO:Declaring custom model
2024-07-25 15:53:28,235:INFO:Ridge Classifier Imported successfully
2024-07-25 15:53:28,235:INFO:Cross validation set to False
2024-07-25 15:53:28,235:INFO:Fitting Model
2024-07-25 15:53:28,270:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:53:28,270:INFO:create_model() successfully completed......................................
2024-07-25 15:53:28,356:INFO:Initializing create_model()
2024-07-25 15:53:28,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:28,356:INFO:Checking exceptions
2024-07-25 15:53:28,356:INFO:Importing libraries
2024-07-25 15:53:28,356:INFO:Copying training dataset
2024-07-25 15:53:28,372:INFO:Defining folds
2024-07-25 15:53:28,372:INFO:Declaring metric variables
2024-07-25 15:53:28,372:INFO:Importing untrained model
2024-07-25 15:53:28,372:INFO:Declaring custom model
2024-07-25 15:53:28,372:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:53:28,384:INFO:Cross validation set to False
2024-07-25 15:53:28,385:INFO:Fitting Model
2024-07-25 15:53:28,402:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 15:53:28,402:INFO:create_model() successfully completed......................................
2024-07-25 15:53:28,503:INFO:Initializing create_model()
2024-07-25 15:53:28,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:28,503:INFO:Checking exceptions
2024-07-25 15:53:28,519:INFO:Importing libraries
2024-07-25 15:53:28,519:INFO:Copying training dataset
2024-07-25 15:53:28,519:INFO:Defining folds
2024-07-25 15:53:28,519:INFO:Declaring metric variables
2024-07-25 15:53:28,519:INFO:Importing untrained model
2024-07-25 15:53:28,519:INFO:Declaring custom model
2024-07-25 15:53:28,537:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:53:28,538:INFO:Cross validation set to False
2024-07-25 15:53:28,538:INFO:Fitting Model
2024-07-25 15:53:28,890:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-07-25 15:53:28,891:INFO:create_model() successfully completed......................................
2024-07-25 15:53:29,092:INFO:_master_model_container: 19
2024-07-25 15:53:29,092:INFO:_display_container: 7
2024-07-25 15:53:29,104:INFO:[RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)]
2024-07-25 15:53:29,104:INFO:compare_models() successfully completed......................................
2024-07-25 15:53:29,108:INFO:Initializing blend_models()
2024-07-25 15:53:29,108:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator_list=[RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:53:29,109:INFO:Checking exceptions
2024-07-25 15:53:29,110:INFO:Estimator RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001) doesn't support probabilities, falling back to 'hard'.
2024-07-25 15:53:29,200:INFO:Importing libraries
2024-07-25 15:53:29,202:INFO:Copying training dataset
2024-07-25 15:53:29,219:INFO:Getting model names
2024-07-25 15:53:29,241:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:29,291:INFO:Initializing create_model()
2024-07-25 15:53:29,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239F35462E0>, estimator=VotingClassifier(estimators=[('Ridge Classifier',
                              RidgeClassifier(alpha=1.0, class_weight=None,
                                              copy_X=True, fit_intercept=True,
                                              max_iter=None, positive=False,
                                              random_state=1234, solver='auto',
                                              tol=0.0001)),
                             ('Linear Discriminant Analysis',
                              LinearDiscriminantAnalysis(covariance_estimator=None,
                                                         n_components=None,
                                                         priors=None,
                                                         shrinkage=None,
                                                         solver='svd',
                                                         store_covari...
                                                   max_depth=None,
                                                   max_features='sqrt',
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   n_estimators=100, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=1234, verbose=0,
                                                   warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='hard', weights=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F39A4BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:29,291:INFO:Checking exceptions
2024-07-25 15:53:29,291:INFO:Importing libraries
2024-07-25 15:53:29,291:INFO:Copying training dataset
2024-07-25 15:53:29,318:INFO:Defining folds
2024-07-25 15:53:29,318:INFO:Declaring metric variables
2024-07-25 15:53:29,335:INFO:Importing untrained model
2024-07-25 15:53:29,335:INFO:Declaring custom model
2024-07-25 15:53:29,366:INFO:Voting Classifier Imported successfully
2024-07-25 15:53:29,384:INFO:Starting cross validation
2024-07-25 15:53:29,401:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:30,923:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:30,923:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:30,923:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:31,226:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:32,525:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:32,540:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:32,715:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:33,181:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:33,437:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:33,447:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: decision_function, predict_proba.

  warnings.warn(

2024-07-25 15:53:33,494:INFO:Calculating mean and std
2024-07-25 15:53:33,494:INFO:Creating metrics dataframe
2024-07-25 15:53:33,510:INFO:Finalizing model
2024-07-25 15:53:34,169:INFO:Uploading results into container
2024-07-25 15:53:34,172:INFO:Uploading model into container now
2024-07-25 15:53:34,174:INFO:_master_model_container: 20
2024-07-25 15:53:34,174:INFO:_display_container: 8
2024-07-25 15:53:34,188:INFO:VotingClassifier(estimators=[('Ridge Classifier',
                              RidgeClassifier(alpha=1.0, class_weight=None,
                                              copy_X=True, fit_intercept=True,
                                              max_iter=None, positive=False,
                                              random_state=1234, solver='auto',
                                              tol=0.0001)),
                             ('Linear Discriminant Analysis',
                              LinearDiscriminantAnalysis(covariance_estimator=None,
                                                         n_components=None,
                                                         priors=None,
                                                         shrinkage=None,
                                                         solver='svd',
                                                         store_covari...
                                                   max_depth=None,
                                                   max_features='sqrt',
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   n_estimators=100, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=1234, verbose=0,
                                                   warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='hard', weights=None)
2024-07-25 15:53:34,188:INFO:create_model() successfully completed......................................
2024-07-25 15:53:34,283:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:34,330:INFO:_master_model_container: 20
2024-07-25 15:53:34,330:INFO:_display_container: 8
2024-07-25 15:53:34,343:INFO:VotingClassifier(estimators=[('Ridge Classifier',
                              RidgeClassifier(alpha=1.0, class_weight=None,
                                              copy_X=True, fit_intercept=True,
                                              max_iter=None, positive=False,
                                              random_state=1234, solver='auto',
                                              tol=0.0001)),
                             ('Linear Discriminant Analysis',
                              LinearDiscriminantAnalysis(covariance_estimator=None,
                                                         n_components=None,
                                                         priors=None,
                                                         shrinkage=None,
                                                         solver='svd',
                                                         store_covari...
                                                   max_depth=None,
                                                   max_features='sqrt',
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.0,
                                                   min_samples_leaf=1,
                                                   min_samples_split=2,
                                                   min_weight_fraction_leaf=0.0,
                                                   monotonic_cst=None,
                                                   n_estimators=100, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=1234, verbose=0,
                                                   warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='hard', weights=None)
2024-07-25 15:53:34,343:INFO:blend_models() successfully completed......................................
2024-07-25 15:53:35,035:INFO:PyCaret ClassificationExperiment
2024-07-25 15:53:35,035:INFO:Logging name: clf-default-name
2024-07-25 15:53:35,035:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:53:35,035:INFO:version 3.3.2
2024-07-25 15:53:35,035:INFO:Initializing setup()
2024-07-25 15:53:35,035:INFO:self.USI: 228c
2024-07-25 15:53:35,035:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:53:35,035:INFO:Checking environment
2024-07-25 15:53:35,035:INFO:python_version: 3.9.19
2024-07-25 15:53:35,035:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:53:35,035:INFO:machine: AMD64
2024-07-25 15:53:35,035:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:53:35,035:INFO:Memory: svmem(total=8387862528, available=795688960, percent=90.5, used=7592173568, free=795688960)
2024-07-25 15:53:35,035:INFO:Physical Core: 2
2024-07-25 15:53:35,035:INFO:Logical Core: 4
2024-07-25 15:53:35,035:INFO:Checking libraries
2024-07-25 15:53:35,035:INFO:System:
2024-07-25 15:53:35,035:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:53:35,044:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:53:35,045:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:53:35,045:INFO:PyCaret required dependencies:
2024-07-25 15:53:35,045:INFO:                 pip: 24.0
2024-07-25 15:53:35,045:INFO:          setuptools: 69.5.1
2024-07-25 15:53:35,045:INFO:             pycaret: 3.3.2
2024-07-25 15:53:35,045:INFO:             IPython: 8.18.1
2024-07-25 15:53:35,045:INFO:          ipywidgets: 8.1.3
2024-07-25 15:53:35,045:INFO:                tqdm: 4.66.4
2024-07-25 15:53:35,045:INFO:               numpy: 1.26.4
2024-07-25 15:53:35,045:INFO:              pandas: 2.1.4
2024-07-25 15:53:35,045:INFO:              jinja2: 3.1.4
2024-07-25 15:53:35,045:INFO:               scipy: 1.11.4
2024-07-25 15:53:35,045:INFO:              joblib: 1.3.2
2024-07-25 15:53:35,045:INFO:             sklearn: 1.4.2
2024-07-25 15:53:35,045:INFO:                pyod: 2.0.1
2024-07-25 15:53:35,045:INFO:            imblearn: 0.12.3
2024-07-25 15:53:35,045:INFO:   category_encoders: 2.6.3
2024-07-25 15:53:35,045:INFO:            lightgbm: 4.4.0
2024-07-25 15:53:35,045:INFO:               numba: 0.60.0
2024-07-25 15:53:35,045:INFO:            requests: 2.32.3
2024-07-25 15:53:35,045:INFO:          matplotlib: 3.7.5
2024-07-25 15:53:35,045:INFO:          scikitplot: 0.3.7
2024-07-25 15:53:35,045:INFO:         yellowbrick: 1.5
2024-07-25 15:53:35,045:INFO:              plotly: 5.23.0
2024-07-25 15:53:35,045:INFO:    plotly-resampler: Not installed
2024-07-25 15:53:35,045:INFO:             kaleido: 0.2.1
2024-07-25 15:53:35,045:INFO:           schemdraw: 0.15
2024-07-25 15:53:35,045:INFO:         statsmodels: 0.14.2
2024-07-25 15:53:35,045:INFO:              sktime: 0.26.0
2024-07-25 15:53:35,045:INFO:               tbats: 1.1.3
2024-07-25 15:53:35,045:INFO:            pmdarima: 2.0.4
2024-07-25 15:53:35,045:INFO:              psutil: 6.0.0
2024-07-25 15:53:35,045:INFO:          markupsafe: 2.1.5
2024-07-25 15:53:35,045:INFO:             pickle5: Not installed
2024-07-25 15:53:35,045:INFO:         cloudpickle: 3.0.0
2024-07-25 15:53:35,045:INFO:         deprecation: 2.1.0
2024-07-25 15:53:35,045:INFO:              xxhash: 3.4.1
2024-07-25 15:53:35,045:INFO:           wurlitzer: Not installed
2024-07-25 15:53:35,045:INFO:PyCaret optional dependencies:
2024-07-25 15:53:35,045:INFO:                shap: Not installed
2024-07-25 15:53:35,045:INFO:           interpret: Not installed
2024-07-25 15:53:35,045:INFO:                umap: Not installed
2024-07-25 15:53:35,045:INFO:     ydata_profiling: Not installed
2024-07-25 15:53:35,045:INFO:  explainerdashboard: Not installed
2024-07-25 15:53:35,045:INFO:             autoviz: Not installed
2024-07-25 15:53:35,045:INFO:           fairlearn: Not installed
2024-07-25 15:53:35,045:INFO:          deepchecks: Not installed
2024-07-25 15:53:35,045:INFO:             xgboost: Not installed
2024-07-25 15:53:35,045:INFO:            catboost: Not installed
2024-07-25 15:53:35,045:INFO:              kmodes: Not installed
2024-07-25 15:53:35,045:INFO:             mlxtend: Not installed
2024-07-25 15:53:35,045:INFO:       statsforecast: Not installed
2024-07-25 15:53:35,045:INFO:        tune_sklearn: Not installed
2024-07-25 15:53:35,045:INFO:                 ray: Not installed
2024-07-25 15:53:35,045:INFO:            hyperopt: Not installed
2024-07-25 15:53:35,045:INFO:              optuna: Not installed
2024-07-25 15:53:35,045:INFO:               skopt: Not installed
2024-07-25 15:53:35,045:INFO:              mlflow: Not installed
2024-07-25 15:53:35,045:INFO:              gradio: Not installed
2024-07-25 15:53:35,045:INFO:             fastapi: Not installed
2024-07-25 15:53:35,045:INFO:             uvicorn: Not installed
2024-07-25 15:53:35,045:INFO:              m2cgen: Not installed
2024-07-25 15:53:35,045:INFO:           evidently: Not installed
2024-07-25 15:53:35,045:INFO:               fugue: Not installed
2024-07-25 15:53:35,045:INFO:           streamlit: Not installed
2024-07-25 15:53:35,045:INFO:             prophet: Not installed
2024-07-25 15:53:35,045:INFO:None
2024-07-25 15:53:35,045:INFO:Set up data.
2024-07-25 15:53:35,061:INFO:Set up folding strategy.
2024-07-25 15:53:35,061:INFO:Set up train/test split.
2024-07-25 15:53:35,061:INFO:Set up index.
2024-07-25 15:53:35,061:INFO:Assigning column types.
2024-07-25 15:53:35,077:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:53:35,170:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:53:35,171:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:53:35,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:35,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:35,451:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:53:35,454:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:53:35,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:35,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:35,561:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:53:35,729:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:53:35,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:35,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:36,217:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:53:36,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:36,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:36,264:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:53:36,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:36,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:36,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:36,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:36,519:INFO:Preparing preprocessing pipeline...
2024-07-25 15:53:36,534:INFO:Set up simple imputation.
2024-07-25 15:53:36,534:INFO:Set up column name cleaning.
2024-07-25 15:53:36,613:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:53:36,627:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:53:36,627:INFO:Creating final display dataframe.
2024-07-25 15:53:36,826:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              228c
2024-07-25 15:53:36,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:36,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:37,179:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:37,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:53:37,185:INFO:setup() successfully completed in 2.17s...............
2024-07-25 15:53:37,204:INFO:Initializing create_model()
2024-07-25 15:53:37,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:37,205:INFO:Checking exceptions
2024-07-25 15:53:37,275:INFO:Importing libraries
2024-07-25 15:53:37,276:INFO:Copying training dataset
2024-07-25 15:53:37,303:INFO:Defining folds
2024-07-25 15:53:37,303:INFO:Declaring metric variables
2024-07-25 15:53:37,338:INFO:Importing untrained model
2024-07-25 15:53:37,355:INFO:Logistic Regression Imported successfully
2024-07-25 15:53:37,388:INFO:Starting cross validation
2024-07-25 15:53:37,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:38,168:INFO:Calculating mean and std
2024-07-25 15:53:38,168:INFO:Creating metrics dataframe
2024-07-25 15:53:38,183:INFO:Finalizing model
2024-07-25 15:53:38,269:INFO:Uploading results into container
2024-07-25 15:53:38,269:INFO:Uploading model into container now
2024-07-25 15:53:38,299:INFO:_master_model_container: 1
2024-07-25 15:53:38,299:INFO:_display_container: 2
2024-07-25 15:53:38,299:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:53:38,299:INFO:create_model() successfully completed......................................
2024-07-25 15:53:38,421:INFO:Initializing create_model()
2024-07-25 15:53:38,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:38,422:INFO:Checking exceptions
2024-07-25 15:53:38,518:INFO:Importing libraries
2024-07-25 15:53:38,519:INFO:Copying training dataset
2024-07-25 15:53:38,538:INFO:Defining folds
2024-07-25 15:53:38,539:INFO:Declaring metric variables
2024-07-25 15:53:38,561:INFO:Importing untrained model
2024-07-25 15:53:38,578:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:53:38,608:INFO:Starting cross validation
2024-07-25 15:53:38,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:39,606:INFO:Calculating mean and std
2024-07-25 15:53:39,606:INFO:Creating metrics dataframe
2024-07-25 15:53:39,627:INFO:Finalizing model
2024-07-25 15:53:39,706:INFO:Uploading results into container
2024-07-25 15:53:39,706:INFO:Uploading model into container now
2024-07-25 15:53:39,807:INFO:_master_model_container: 2
2024-07-25 15:53:39,807:INFO:_display_container: 3
2024-07-25 15:53:39,807:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:53:39,807:INFO:create_model() successfully completed......................................
2024-07-25 15:53:39,957:INFO:Initializing create_model()
2024-07-25 15:53:39,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:39,957:INFO:Checking exceptions
2024-07-25 15:53:40,114:INFO:Importing libraries
2024-07-25 15:53:40,115:INFO:Copying training dataset
2024-07-25 15:53:40,138:INFO:Defining folds
2024-07-25 15:53:40,138:INFO:Declaring metric variables
2024-07-25 15:53:40,176:INFO:Importing untrained model
2024-07-25 15:53:40,213:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:53:40,259:INFO:Starting cross validation
2024-07-25 15:53:40,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:41,075:INFO:Calculating mean and std
2024-07-25 15:53:41,075:INFO:Creating metrics dataframe
2024-07-25 15:53:41,092:INFO:Finalizing model
2024-07-25 15:53:41,139:INFO:Uploading results into container
2024-07-25 15:53:41,142:INFO:Uploading model into container now
2024-07-25 15:53:41,197:INFO:_master_model_container: 3
2024-07-25 15:53:41,198:INFO:_display_container: 4
2024-07-25 15:53:41,199:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:53:41,199:INFO:create_model() successfully completed......................................
2024-07-25 15:53:41,312:INFO:Initializing stack_models()
2024-07-25 15:53:41,312:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator_list=[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:53:41,312:INFO:Checking exceptions
2024-07-25 15:53:41,326:INFO:Defining meta model
2024-07-25 15:53:41,434:INFO:Getting model names
2024-07-25 15:53:41,435:INFO:[('Logistic Regression', LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)), ('Decision Tree Classifier', DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')), ('K Neighbors Classifier', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'))]
2024-07-25 15:53:41,459:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:41,474:INFO:Initializing create_model()
2024-07-25 15:53:41,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=1.0, class_weight=None,
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=1234,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Decision Tree Classifier',
                                DecisionTreeClassifier(ccp_a...
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform'))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=1234,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F3623070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:41,474:INFO:Checking exceptions
2024-07-25 15:53:41,474:INFO:Importing libraries
2024-07-25 15:53:41,474:INFO:Copying training dataset
2024-07-25 15:53:41,514:INFO:Defining folds
2024-07-25 15:53:41,514:INFO:Declaring metric variables
2024-07-25 15:53:41,554:INFO:Importing untrained model
2024-07-25 15:53:41,554:INFO:Declaring custom model
2024-07-25 15:53:41,571:INFO:Stacking Classifier Imported successfully
2024-07-25 15:53:41,609:INFO:Starting cross validation
2024-07-25 15:53:41,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:45,263:INFO:Calculating mean and std
2024-07-25 15:53:45,273:INFO:Creating metrics dataframe
2024-07-25 15:53:45,291:INFO:Finalizing model
2024-07-25 15:53:45,751:INFO:Uploading results into container
2024-07-25 15:53:45,754:INFO:Uploading model into container now
2024-07-25 15:53:45,755:INFO:_master_model_container: 4
2024-07-25 15:53:45,755:INFO:_display_container: 5
2024-07-25 15:53:45,775:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=1.0, class_weight=None,
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=1234,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Decision Tree Classifier',
                                DecisionTreeClassifier(ccp_a...
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform'))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=1234,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2024-07-25 15:53:45,775:INFO:create_model() successfully completed......................................
2024-07-25 15:53:45,866:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:45,898:INFO:_master_model_container: 4
2024-07-25 15:53:45,900:INFO:_display_container: 5
2024-07-25 15:53:45,917:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=1.0, class_weight=None,
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=1234,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Decision Tree Classifier',
                                DecisionTreeClassifier(ccp_a...
                                                     n_jobs=-1, n_neighbors=5,
                                                     p=2, weights='uniform'))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=1234,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2024-07-25 15:53:45,918:INFO:stack_models() successfully completed......................................
2024-07-25 15:53:46,081:INFO:Initializing compare_models()
2024-07-25 15:53:46,081:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-25 15:53:46,081:INFO:Checking exceptions
2024-07-25 15:53:46,097:INFO:Preparing display monitor
2024-07-25 15:53:46,245:INFO:Initializing Logistic Regression
2024-07-25 15:53:46,246:INFO:Total runtime is 1.6629695892333984e-05 minutes
2024-07-25 15:53:46,261:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:46,262:INFO:Initializing create_model()
2024-07-25 15:53:46,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:46,263:INFO:Checking exceptions
2024-07-25 15:53:46,263:INFO:Importing libraries
2024-07-25 15:53:46,263:INFO:Copying training dataset
2024-07-25 15:53:46,323:INFO:Defining folds
2024-07-25 15:53:46,324:INFO:Declaring metric variables
2024-07-25 15:53:46,340:INFO:Importing untrained model
2024-07-25 15:53:46,361:INFO:Logistic Regression Imported successfully
2024-07-25 15:53:46,395:INFO:Starting cross validation
2024-07-25 15:53:46,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:47,302:INFO:Calculating mean and std
2024-07-25 15:53:47,302:INFO:Creating metrics dataframe
2024-07-25 15:53:47,302:INFO:Uploading results into container
2024-07-25 15:53:47,302:INFO:Uploading model into container now
2024-07-25 15:53:47,315:INFO:_master_model_container: 5
2024-07-25 15:53:47,316:INFO:_display_container: 6
2024-07-25 15:53:47,318:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:53:47,318:INFO:create_model() successfully completed......................................
2024-07-25 15:53:47,397:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:47,397:INFO:Creating metrics dataframe
2024-07-25 15:53:47,433:INFO:Initializing K Neighbors Classifier
2024-07-25 15:53:47,433:INFO:Total runtime is 0.019790220260620116 minutes
2024-07-25 15:53:47,435:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:47,435:INFO:Initializing create_model()
2024-07-25 15:53:47,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:47,435:INFO:Checking exceptions
2024-07-25 15:53:47,435:INFO:Importing libraries
2024-07-25 15:53:47,435:INFO:Copying training dataset
2024-07-25 15:53:47,467:INFO:Defining folds
2024-07-25 15:53:47,467:INFO:Declaring metric variables
2024-07-25 15:53:47,489:INFO:Importing untrained model
2024-07-25 15:53:47,506:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:53:47,553:INFO:Starting cross validation
2024-07-25 15:53:47,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:48,301:INFO:Calculating mean and std
2024-07-25 15:53:48,302:INFO:Creating metrics dataframe
2024-07-25 15:53:48,312:INFO:Uploading results into container
2024-07-25 15:53:48,315:INFO:Uploading model into container now
2024-07-25 15:53:48,315:INFO:_master_model_container: 6
2024-07-25 15:53:48,315:INFO:_display_container: 6
2024-07-25 15:53:48,315:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:53:48,315:INFO:create_model() successfully completed......................................
2024-07-25 15:53:48,401:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:48,401:INFO:Creating metrics dataframe
2024-07-25 15:53:48,417:INFO:Initializing Naive Bayes
2024-07-25 15:53:48,417:INFO:Total runtime is 0.036198596159617104 minutes
2024-07-25 15:53:48,433:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:48,433:INFO:Initializing create_model()
2024-07-25 15:53:48,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:48,433:INFO:Checking exceptions
2024-07-25 15:53:48,433:INFO:Importing libraries
2024-07-25 15:53:48,433:INFO:Copying training dataset
2024-07-25 15:53:48,483:INFO:Defining folds
2024-07-25 15:53:48,485:INFO:Declaring metric variables
2024-07-25 15:53:48,504:INFO:Importing untrained model
2024-07-25 15:53:48,514:INFO:Naive Bayes Imported successfully
2024-07-25 15:53:48,563:INFO:Starting cross validation
2024-07-25 15:53:48,563:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:49,180:INFO:Calculating mean and std
2024-07-25 15:53:49,180:INFO:Creating metrics dataframe
2024-07-25 15:53:49,180:INFO:Uploading results into container
2024-07-25 15:53:49,180:INFO:Uploading model into container now
2024-07-25 15:53:49,180:INFO:_master_model_container: 7
2024-07-25 15:53:49,180:INFO:_display_container: 6
2024-07-25 15:53:49,194:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-25 15:53:49,195:INFO:create_model() successfully completed......................................
2024-07-25 15:53:49,364:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:49,364:INFO:Creating metrics dataframe
2024-07-25 15:53:49,426:INFO:Initializing Decision Tree Classifier
2024-07-25 15:53:49,426:INFO:Total runtime is 0.05300808747609456 minutes
2024-07-25 15:53:49,426:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:49,426:INFO:Initializing create_model()
2024-07-25 15:53:49,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:49,426:INFO:Checking exceptions
2024-07-25 15:53:49,426:INFO:Importing libraries
2024-07-25 15:53:49,426:INFO:Copying training dataset
2024-07-25 15:53:49,456:INFO:Defining folds
2024-07-25 15:53:49,456:INFO:Declaring metric variables
2024-07-25 15:53:49,476:INFO:Importing untrained model
2024-07-25 15:53:49,497:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:53:49,532:INFO:Starting cross validation
2024-07-25 15:53:49,538:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:50,049:INFO:Calculating mean and std
2024-07-25 15:53:50,049:INFO:Creating metrics dataframe
2024-07-25 15:53:50,049:INFO:Uploading results into container
2024-07-25 15:53:50,049:INFO:Uploading model into container now
2024-07-25 15:53:50,065:INFO:_master_model_container: 8
2024-07-25 15:53:50,065:INFO:_display_container: 6
2024-07-25 15:53:50,067:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:53:50,067:INFO:create_model() successfully completed......................................
2024-07-25 15:53:50,149:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:50,149:INFO:Creating metrics dataframe
2024-07-25 15:53:50,164:INFO:Initializing SVM - Linear Kernel
2024-07-25 15:53:50,164:INFO:Total runtime is 0.06531667311986288 minutes
2024-07-25 15:53:50,180:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:50,180:INFO:Initializing create_model()
2024-07-25 15:53:50,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:50,180:INFO:Checking exceptions
2024-07-25 15:53:50,180:INFO:Importing libraries
2024-07-25 15:53:50,180:INFO:Copying training dataset
2024-07-25 15:53:50,209:INFO:Defining folds
2024-07-25 15:53:50,213:INFO:Declaring metric variables
2024-07-25 15:53:50,232:INFO:Importing untrained model
2024-07-25 15:53:50,247:INFO:SVM - Linear Kernel Imported successfully
2024-07-25 15:53:50,262:INFO:Starting cross validation
2024-07-25 15:53:50,281:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:50,768:INFO:Calculating mean and std
2024-07-25 15:53:50,768:INFO:Creating metrics dataframe
2024-07-25 15:53:50,768:INFO:Uploading results into container
2024-07-25 15:53:50,768:INFO:Uploading model into container now
2024-07-25 15:53:50,768:INFO:_master_model_container: 9
2024-07-25 15:53:50,781:INFO:_display_container: 6
2024-07-25 15:53:50,783:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1234, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-25 15:53:50,784:INFO:create_model() successfully completed......................................
2024-07-25 15:53:50,860:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:50,860:INFO:Creating metrics dataframe
2024-07-25 15:53:50,901:INFO:Initializing Ridge Classifier
2024-07-25 15:53:50,902:INFO:Total runtime is 0.07759907245635986 minutes
2024-07-25 15:53:50,902:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:50,902:INFO:Initializing create_model()
2024-07-25 15:53:50,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:50,902:INFO:Checking exceptions
2024-07-25 15:53:50,902:INFO:Importing libraries
2024-07-25 15:53:50,902:INFO:Copying training dataset
2024-07-25 15:53:50,918:INFO:Defining folds
2024-07-25 15:53:50,918:INFO:Declaring metric variables
2024-07-25 15:53:50,939:INFO:Importing untrained model
2024-07-25 15:53:50,962:INFO:Ridge Classifier Imported successfully
2024-07-25 15:53:51,001:INFO:Starting cross validation
2024-07-25 15:53:51,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:51,492:INFO:Calculating mean and std
2024-07-25 15:53:51,492:INFO:Creating metrics dataframe
2024-07-25 15:53:51,492:INFO:Uploading results into container
2024-07-25 15:53:51,492:INFO:Uploading model into container now
2024-07-25 15:53:51,492:INFO:_master_model_container: 10
2024-07-25 15:53:51,502:INFO:_display_container: 6
2024-07-25 15:53:51,504:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:53:51,505:INFO:create_model() successfully completed......................................
2024-07-25 15:53:51,576:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:51,576:INFO:Creating metrics dataframe
2024-07-25 15:53:51,608:INFO:Initializing Random Forest Classifier
2024-07-25 15:53:51,608:INFO:Total runtime is 0.08937202294667561 minutes
2024-07-25 15:53:51,623:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:51,623:INFO:Initializing create_model()
2024-07-25 15:53:51,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:51,623:INFO:Checking exceptions
2024-07-25 15:53:51,623:INFO:Importing libraries
2024-07-25 15:53:51,623:INFO:Copying training dataset
2024-07-25 15:53:51,647:INFO:Defining folds
2024-07-25 15:53:51,647:INFO:Declaring metric variables
2024-07-25 15:53:51,663:INFO:Importing untrained model
2024-07-25 15:53:51,687:INFO:Random Forest Classifier Imported successfully
2024-07-25 15:53:51,710:INFO:Starting cross validation
2024-07-25 15:53:51,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:55,224:INFO:Calculating mean and std
2024-07-25 15:53:55,224:INFO:Creating metrics dataframe
2024-07-25 15:53:55,224:INFO:Uploading results into container
2024-07-25 15:53:55,224:INFO:Uploading model into container now
2024-07-25 15:53:55,224:INFO:_master_model_container: 11
2024-07-25 15:53:55,224:INFO:_display_container: 6
2024-07-25 15:53:55,238:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1234, verbose=0,
                       warm_start=False)
2024-07-25 15:53:55,238:INFO:create_model() successfully completed......................................
2024-07-25 15:53:55,323:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:55,323:INFO:Creating metrics dataframe
2024-07-25 15:53:55,343:INFO:Initializing Quadratic Discriminant Analysis
2024-07-25 15:53:55,343:INFO:Total runtime is 0.15163309574127196 minutes
2024-07-25 15:53:55,359:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:55,359:INFO:Initializing create_model()
2024-07-25 15:53:55,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:55,359:INFO:Checking exceptions
2024-07-25 15:53:55,359:INFO:Importing libraries
2024-07-25 15:53:55,359:INFO:Copying training dataset
2024-07-25 15:53:55,374:INFO:Defining folds
2024-07-25 15:53:55,374:INFO:Declaring metric variables
2024-07-25 15:53:55,393:INFO:Importing untrained model
2024-07-25 15:53:55,406:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-25 15:53:55,445:INFO:Starting cross validation
2024-07-25 15:53:55,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:55,910:INFO:Calculating mean and std
2024-07-25 15:53:55,910:INFO:Creating metrics dataframe
2024-07-25 15:53:55,910:INFO:Uploading results into container
2024-07-25 15:53:55,910:INFO:Uploading model into container now
2024-07-25 15:53:55,924:INFO:_master_model_container: 12
2024-07-25 15:53:55,925:INFO:_display_container: 6
2024-07-25 15:53:55,928:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-25 15:53:55,928:INFO:create_model() successfully completed......................................
2024-07-25 15:53:56,009:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:56,009:INFO:Creating metrics dataframe
2024-07-25 15:53:56,042:INFO:Initializing Ada Boost Classifier
2024-07-25 15:53:56,042:INFO:Total runtime is 0.16328082879384356 minutes
2024-07-25 15:53:56,043:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:56,043:INFO:Initializing create_model()
2024-07-25 15:53:56,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:56,043:INFO:Checking exceptions
2024-07-25 15:53:56,043:INFO:Importing libraries
2024-07-25 15:53:56,043:INFO:Copying training dataset
2024-07-25 15:53:56,072:INFO:Defining folds
2024-07-25 15:53:56,073:INFO:Declaring metric variables
2024-07-25 15:53:56,098:INFO:Importing untrained model
2024-07-25 15:53:56,123:INFO:Ada Boost Classifier Imported successfully
2024-07-25 15:53:56,172:INFO:Starting cross validation
2024-07-25 15:53:56,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:53:56,273:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:56,273:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:56,289:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:56,305:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:56,923:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:56,970:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:56,985:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:57,009:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:57,667:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:57,682:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-25 15:53:58,237:INFO:Calculating mean and std
2024-07-25 15:53:58,242:INFO:Creating metrics dataframe
2024-07-25 15:53:58,250:INFO:Uploading results into container
2024-07-25 15:53:58,250:INFO:Uploading model into container now
2024-07-25 15:53:58,250:INFO:_master_model_container: 13
2024-07-25 15:53:58,250:INFO:_display_container: 6
2024-07-25 15:53:58,250:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1234)
2024-07-25 15:53:58,255:INFO:create_model() successfully completed......................................
2024-07-25 15:53:58,357:INFO:SubProcess create_model() end ==================================
2024-07-25 15:53:58,357:INFO:Creating metrics dataframe
2024-07-25 15:53:58,388:INFO:Initializing Gradient Boosting Classifier
2024-07-25 15:53:58,388:INFO:Total runtime is 0.20237600406010942 minutes
2024-07-25 15:53:58,408:INFO:SubProcess create_model() called ==================================
2024-07-25 15:53:58,408:INFO:Initializing create_model()
2024-07-25 15:53:58,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:53:58,408:INFO:Checking exceptions
2024-07-25 15:53:58,408:INFO:Importing libraries
2024-07-25 15:53:58,408:INFO:Copying training dataset
2024-07-25 15:53:58,423:INFO:Defining folds
2024-07-25 15:53:58,423:INFO:Declaring metric variables
2024-07-25 15:53:58,442:INFO:Importing untrained model
2024-07-25 15:53:58,468:INFO:Gradient Boosting Classifier Imported successfully
2024-07-25 15:53:58,504:INFO:Starting cross validation
2024-07-25 15:53:58,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:00,768:INFO:Calculating mean and std
2024-07-25 15:54:00,772:INFO:Creating metrics dataframe
2024-07-25 15:54:00,780:INFO:Uploading results into container
2024-07-25 15:54:00,780:INFO:Uploading model into container now
2024-07-25 15:54:00,780:INFO:_master_model_container: 14
2024-07-25 15:54:00,780:INFO:_display_container: 6
2024-07-25 15:54:00,788:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1234, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-25 15:54:00,788:INFO:create_model() successfully completed......................................
2024-07-25 15:54:00,867:INFO:SubProcess create_model() end ==================================
2024-07-25 15:54:00,867:INFO:Creating metrics dataframe
2024-07-25 15:54:00,912:INFO:Initializing Linear Discriminant Analysis
2024-07-25 15:54:00,912:INFO:Total runtime is 0.2444454749425252 minutes
2024-07-25 15:54:00,926:INFO:SubProcess create_model() called ==================================
2024-07-25 15:54:00,927:INFO:Initializing create_model()
2024-07-25 15:54:00,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:00,927:INFO:Checking exceptions
2024-07-25 15:54:00,927:INFO:Importing libraries
2024-07-25 15:54:00,927:INFO:Copying training dataset
2024-07-25 15:54:00,945:INFO:Defining folds
2024-07-25 15:54:00,946:INFO:Declaring metric variables
2024-07-25 15:54:00,969:INFO:Importing untrained model
2024-07-25 15:54:00,983:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:54:01,006:INFO:Starting cross validation
2024-07-25 15:54:01,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:01,484:INFO:Calculating mean and std
2024-07-25 15:54:01,487:INFO:Creating metrics dataframe
2024-07-25 15:54:01,487:INFO:Uploading results into container
2024-07-25 15:54:01,487:INFO:Uploading model into container now
2024-07-25 15:54:01,487:INFO:_master_model_container: 15
2024-07-25 15:54:01,487:INFO:_display_container: 6
2024-07-25 15:54:01,487:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 15:54:01,487:INFO:create_model() successfully completed......................................
2024-07-25 15:54:01,587:INFO:SubProcess create_model() end ==================================
2024-07-25 15:54:01,587:INFO:Creating metrics dataframe
2024-07-25 15:54:01,633:INFO:Initializing Extra Trees Classifier
2024-07-25 15:54:01,633:INFO:Total runtime is 0.256469710667928 minutes
2024-07-25 15:54:01,650:INFO:SubProcess create_model() called ==================================
2024-07-25 15:54:01,650:INFO:Initializing create_model()
2024-07-25 15:54:01,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:01,650:INFO:Checking exceptions
2024-07-25 15:54:01,650:INFO:Importing libraries
2024-07-25 15:54:01,650:INFO:Copying training dataset
2024-07-25 15:54:01,667:INFO:Defining folds
2024-07-25 15:54:01,667:INFO:Declaring metric variables
2024-07-25 15:54:01,683:INFO:Importing untrained model
2024-07-25 15:54:01,695:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:54:01,720:INFO:Starting cross validation
2024-07-25 15:54:01,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:04,767:INFO:Calculating mean and std
2024-07-25 15:54:04,767:INFO:Creating metrics dataframe
2024-07-25 15:54:04,767:INFO:Uploading results into container
2024-07-25 15:54:04,767:INFO:Uploading model into container now
2024-07-25 15:54:04,767:INFO:_master_model_container: 16
2024-07-25 15:54:04,778:INFO:_display_container: 6
2024-07-25 15:54:04,782:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-07-25 15:54:04,782:INFO:create_model() successfully completed......................................
2024-07-25 15:54:04,862:INFO:SubProcess create_model() end ==================================
2024-07-25 15:54:04,862:INFO:Creating metrics dataframe
2024-07-25 15:54:04,901:INFO:Initializing Light Gradient Boosting Machine
2024-07-25 15:54:04,901:INFO:Total runtime is 0.310923433303833 minutes
2024-07-25 15:54:04,916:INFO:SubProcess create_model() called ==================================
2024-07-25 15:54:04,916:INFO:Initializing create_model()
2024-07-25 15:54:04,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:04,916:INFO:Checking exceptions
2024-07-25 15:54:04,916:INFO:Importing libraries
2024-07-25 15:54:04,916:INFO:Copying training dataset
2024-07-25 15:54:04,916:INFO:Defining folds
2024-07-25 15:54:04,932:INFO:Declaring metric variables
2024-07-25 15:54:04,948:INFO:Importing untrained model
2024-07-25 15:54:04,968:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 15:54:05,005:INFO:Starting cross validation
2024-07-25 15:54:05,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:06,189:INFO:Calculating mean and std
2024-07-25 15:54:06,193:INFO:Creating metrics dataframe
2024-07-25 15:54:06,200:INFO:Uploading results into container
2024-07-25 15:54:06,200:INFO:Uploading model into container now
2024-07-25 15:54:06,200:INFO:_master_model_container: 17
2024-07-25 15:54:06,200:INFO:_display_container: 6
2024-07-25 15:54:06,209:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1234, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 15:54:06,210:INFO:create_model() successfully completed......................................
2024-07-25 15:54:06,312:INFO:SubProcess create_model() end ==================================
2024-07-25 15:54:06,312:INFO:Creating metrics dataframe
2024-07-25 15:54:06,349:INFO:Initializing Dummy Classifier
2024-07-25 15:54:06,349:INFO:Total runtime is 0.33506297667821244 minutes
2024-07-25 15:54:06,362:INFO:SubProcess create_model() called ==================================
2024-07-25 15:54:06,362:INFO:Initializing create_model()
2024-07-25 15:54:06,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239EF2C3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:06,362:INFO:Checking exceptions
2024-07-25 15:54:06,362:INFO:Importing libraries
2024-07-25 15:54:06,362:INFO:Copying training dataset
2024-07-25 15:54:06,462:INFO:Defining folds
2024-07-25 15:54:06,462:INFO:Declaring metric variables
2024-07-25 15:54:06,489:INFO:Importing untrained model
2024-07-25 15:54:06,536:INFO:Dummy Classifier Imported successfully
2024-07-25 15:54:06,561:INFO:Starting cross validation
2024-07-25 15:54:06,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:06,761:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:06,798:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:06,828:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:06,845:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:06,945:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:06,945:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:06,962:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:06,994:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:07,061:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:07,061:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:07,111:INFO:Calculating mean and std
2024-07-25 15:54:07,120:INFO:Creating metrics dataframe
2024-07-25 15:54:07,129:INFO:Uploading results into container
2024-07-25 15:54:07,129:INFO:Uploading model into container now
2024-07-25 15:54:07,129:INFO:_master_model_container: 18
2024-07-25 15:54:07,129:INFO:_display_container: 6
2024-07-25 15:54:07,129:INFO:DummyClassifier(constant=None, random_state=1234, strategy='prior')
2024-07-25 15:54:07,129:INFO:create_model() successfully completed......................................
2024-07-25 15:54:07,212:INFO:SubProcess create_model() end ==================================
2024-07-25 15:54:07,213:INFO:Creating metrics dataframe
2024-07-25 15:54:07,265:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-25 15:54:07,283:INFO:Initializing create_model()
2024-07-25 15:54:07,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:07,283:INFO:Checking exceptions
2024-07-25 15:54:07,299:INFO:Importing libraries
2024-07-25 15:54:07,299:INFO:Copying training dataset
2024-07-25 15:54:07,299:INFO:Defining folds
2024-07-25 15:54:07,299:INFO:Declaring metric variables
2024-07-25 15:54:07,312:INFO:Importing untrained model
2024-07-25 15:54:07,312:INFO:Declaring custom model
2024-07-25 15:54:07,315:INFO:Ridge Classifier Imported successfully
2024-07-25 15:54:07,319:INFO:Cross validation set to False
2024-07-25 15:54:07,320:INFO:Fitting Model
2024-07-25 15:54:07,349:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)
2024-07-25 15:54:07,349:INFO:create_model() successfully completed......................................
2024-07-25 15:54:07,453:INFO:Initializing create_model()
2024-07-25 15:54:07,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:07,454:INFO:Checking exceptions
2024-07-25 15:54:07,460:INFO:Importing libraries
2024-07-25 15:54:07,460:INFO:Copying training dataset
2024-07-25 15:54:07,465:INFO:Defining folds
2024-07-25 15:54:07,465:INFO:Declaring metric variables
2024-07-25 15:54:07,465:INFO:Importing untrained model
2024-07-25 15:54:07,465:INFO:Declaring custom model
2024-07-25 15:54:07,478:INFO:Linear Discriminant Analysis Imported successfully
2024-07-25 15:54:07,482:INFO:Cross validation set to False
2024-07-25 15:54:07,482:INFO:Fitting Model
2024-07-25 15:54:07,494:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-25 15:54:07,494:INFO:create_model() successfully completed......................................
2024-07-25 15:54:07,603:INFO:Initializing create_model()
2024-07-25 15:54:07,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:07,603:INFO:Checking exceptions
2024-07-25 15:54:07,606:INFO:Importing libraries
2024-07-25 15:54:07,606:INFO:Copying training dataset
2024-07-25 15:54:07,614:INFO:Defining folds
2024-07-25 15:54:07,614:INFO:Declaring metric variables
2024-07-25 15:54:07,614:INFO:Importing untrained model
2024-07-25 15:54:07,614:INFO:Declaring custom model
2024-07-25 15:54:07,614:INFO:Extra Trees Classifier Imported successfully
2024-07-25 15:54:07,614:INFO:Cross validation set to False
2024-07-25 15:54:07,614:INFO:Fitting Model
2024-07-25 15:54:07,930:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)
2024-07-25 15:54:07,930:INFO:create_model() successfully completed......................................
2024-07-25 15:54:08,162:INFO:_master_model_container: 18
2024-07-25 15:54:08,162:INFO:_display_container: 6
2024-07-25 15:54:08,162:INFO:[RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)]
2024-07-25 15:54:08,162:INFO:compare_models() successfully completed......................................
2024-07-25 15:54:08,162:INFO:Initializing stack_models()
2024-07-25 15:54:08,162:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator_list=[RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:54:08,162:INFO:Checking exceptions
2024-07-25 15:54:08,179:INFO:Defining meta model
2024-07-25 15:54:08,249:INFO:Getting model names
2024-07-25 15:54:08,250:INFO:[('Ridge Classifier', RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1234, solver='auto',
                tol=0.0001)), ('Linear Discriminant Analysis', LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)), ('Extra Trees Classifier', ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1234, verbose=0,
                     warm_start=False))]
2024-07-25 15:54:08,306:INFO:SubProcess create_model() called ==================================
2024-07-25 15:54:08,386:INFO:Initializing create_model()
2024-07-25 15:54:08,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239ED6F0520>, estimator=StackingClassifier(cv=5,
                   estimators=[('Ridge Classifier',
                                RidgeClassifier(alpha=1.0, class_weight=None,
                                                copy_X=True, fit_intercept=True,
                                                max_iter=None, positive=False,
                                                random_state=1234,
                                                solver='auto', tol=0.0001)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis(covariance_estimator=None,
                                                           n_components=None,
                                                           priors=None,
                                                           shrinkage=None,
                                                           solver='svd',
                                                           store...
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=1234,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239ED6F07C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:08,386:INFO:Checking exceptions
2024-07-25 15:54:08,386:INFO:Importing libraries
2024-07-25 15:54:08,387:INFO:Copying training dataset
2024-07-25 15:54:08,449:INFO:Defining folds
2024-07-25 15:54:08,449:INFO:Declaring metric variables
2024-07-25 15:54:08,460:INFO:Importing untrained model
2024-07-25 15:54:08,460:INFO:Declaring custom model
2024-07-25 15:54:08,533:INFO:Stacking Classifier Imported successfully
2024-07-25 15:54:08,576:INFO:Starting cross validation
2024-07-25 15:54:08,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:21,180:INFO:Calculating mean and std
2024-07-25 15:54:21,186:INFO:Creating metrics dataframe
2024-07-25 15:54:21,201:INFO:Finalizing model
2024-07-25 15:54:23,137:INFO:Uploading results into container
2024-07-25 15:54:23,138:INFO:Uploading model into container now
2024-07-25 15:54:23,138:INFO:_master_model_container: 19
2024-07-25 15:54:23,138:INFO:_display_container: 7
2024-07-25 15:54:23,169:INFO:StackingClassifier(cv=5,
                   estimators=[('Ridge Classifier',
                                RidgeClassifier(alpha=1.0, class_weight=None,
                                                copy_X=True, fit_intercept=True,
                                                max_iter=None, positive=False,
                                                random_state=1234,
                                                solver='auto', tol=0.0001)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis(covariance_estimator=None,
                                                           n_components=None,
                                                           priors=None,
                                                           shrinkage=None,
                                                           solver='svd',
                                                           store...
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=1234,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2024-07-25 15:54:23,169:INFO:create_model() successfully completed......................................
2024-07-25 15:54:23,248:INFO:SubProcess create_model() end ==================================
2024-07-25 15:54:23,288:INFO:_master_model_container: 19
2024-07-25 15:54:23,288:INFO:_display_container: 7
2024-07-25 15:54:23,314:INFO:StackingClassifier(cv=5,
                   estimators=[('Ridge Classifier',
                                RidgeClassifier(alpha=1.0, class_weight=None,
                                                copy_X=True, fit_intercept=True,
                                                max_iter=None, positive=False,
                                                random_state=1234,
                                                solver='auto', tol=0.0001)),
                               ('Linear Discriminant Analysis',
                                LinearDiscriminantAnalysis(covariance_estimator=None,
                                                           n_components=None,
                                                           priors=None,
                                                           shrinkage=None,
                                                           solver='svd',
                                                           store...
                                                     random_state=1234,
                                                     verbose=0,
                                                     warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=1234,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2024-07-25 15:54:23,314:INFO:stack_models() successfully completed......................................
2024-07-25 15:54:24,492:INFO:PyCaret ClassificationExperiment
2024-07-25 15:54:24,492:INFO:Logging name: clf-default-name
2024-07-25 15:54:24,492:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:54:24,492:INFO:version 3.3.2
2024-07-25 15:54:24,492:INFO:Initializing setup()
2024-07-25 15:54:24,492:INFO:self.USI: 5c85
2024-07-25 15:54:24,492:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:54:24,492:INFO:Checking environment
2024-07-25 15:54:24,492:INFO:python_version: 3.9.19
2024-07-25 15:54:24,492:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:54:24,492:INFO:machine: AMD64
2024-07-25 15:54:24,492:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:54:24,492:INFO:Memory: svmem(total=8387862528, available=1142902784, percent=86.4, used=7244959744, free=1142902784)
2024-07-25 15:54:24,492:INFO:Physical Core: 2
2024-07-25 15:54:24,492:INFO:Logical Core: 4
2024-07-25 15:54:24,492:INFO:Checking libraries
2024-07-25 15:54:24,492:INFO:System:
2024-07-25 15:54:24,492:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:54:24,492:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:54:24,492:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:54:24,492:INFO:PyCaret required dependencies:
2024-07-25 15:54:24,492:INFO:                 pip: 24.0
2024-07-25 15:54:24,492:INFO:          setuptools: 69.5.1
2024-07-25 15:54:24,492:INFO:             pycaret: 3.3.2
2024-07-25 15:54:24,492:INFO:             IPython: 8.18.1
2024-07-25 15:54:24,492:INFO:          ipywidgets: 8.1.3
2024-07-25 15:54:24,492:INFO:                tqdm: 4.66.4
2024-07-25 15:54:24,492:INFO:               numpy: 1.26.4
2024-07-25 15:54:24,492:INFO:              pandas: 2.1.4
2024-07-25 15:54:24,492:INFO:              jinja2: 3.1.4
2024-07-25 15:54:24,492:INFO:               scipy: 1.11.4
2024-07-25 15:54:24,492:INFO:              joblib: 1.3.2
2024-07-25 15:54:24,492:INFO:             sklearn: 1.4.2
2024-07-25 15:54:24,492:INFO:                pyod: 2.0.1
2024-07-25 15:54:24,492:INFO:            imblearn: 0.12.3
2024-07-25 15:54:24,492:INFO:   category_encoders: 2.6.3
2024-07-25 15:54:24,492:INFO:            lightgbm: 4.4.0
2024-07-25 15:54:24,492:INFO:               numba: 0.60.0
2024-07-25 15:54:24,492:INFO:            requests: 2.32.3
2024-07-25 15:54:24,492:INFO:          matplotlib: 3.7.5
2024-07-25 15:54:24,492:INFO:          scikitplot: 0.3.7
2024-07-25 15:54:24,492:INFO:         yellowbrick: 1.5
2024-07-25 15:54:24,492:INFO:              plotly: 5.23.0
2024-07-25 15:54:24,492:INFO:    plotly-resampler: Not installed
2024-07-25 15:54:24,492:INFO:             kaleido: 0.2.1
2024-07-25 15:54:24,492:INFO:           schemdraw: 0.15
2024-07-25 15:54:24,492:INFO:         statsmodels: 0.14.2
2024-07-25 15:54:24,492:INFO:              sktime: 0.26.0
2024-07-25 15:54:24,492:INFO:               tbats: 1.1.3
2024-07-25 15:54:24,492:INFO:            pmdarima: 2.0.4
2024-07-25 15:54:24,492:INFO:              psutil: 6.0.0
2024-07-25 15:54:24,492:INFO:          markupsafe: 2.1.5
2024-07-25 15:54:24,492:INFO:             pickle5: Not installed
2024-07-25 15:54:24,492:INFO:         cloudpickle: 3.0.0
2024-07-25 15:54:24,492:INFO:         deprecation: 2.1.0
2024-07-25 15:54:24,492:INFO:              xxhash: 3.4.1
2024-07-25 15:54:24,492:INFO:           wurlitzer: Not installed
2024-07-25 15:54:24,492:INFO:PyCaret optional dependencies:
2024-07-25 15:54:24,492:INFO:                shap: Not installed
2024-07-25 15:54:24,492:INFO:           interpret: Not installed
2024-07-25 15:54:24,492:INFO:                umap: Not installed
2024-07-25 15:54:24,492:INFO:     ydata_profiling: Not installed
2024-07-25 15:54:24,492:INFO:  explainerdashboard: Not installed
2024-07-25 15:54:24,492:INFO:             autoviz: Not installed
2024-07-25 15:54:24,492:INFO:           fairlearn: Not installed
2024-07-25 15:54:24,492:INFO:          deepchecks: Not installed
2024-07-25 15:54:24,492:INFO:             xgboost: Not installed
2024-07-25 15:54:24,492:INFO:            catboost: Not installed
2024-07-25 15:54:24,492:INFO:              kmodes: Not installed
2024-07-25 15:54:24,492:INFO:             mlxtend: Not installed
2024-07-25 15:54:24,492:INFO:       statsforecast: Not installed
2024-07-25 15:54:24,492:INFO:        tune_sklearn: Not installed
2024-07-25 15:54:24,492:INFO:                 ray: Not installed
2024-07-25 15:54:24,492:INFO:            hyperopt: Not installed
2024-07-25 15:54:24,492:INFO:              optuna: Not installed
2024-07-25 15:54:24,492:INFO:               skopt: Not installed
2024-07-25 15:54:24,492:INFO:              mlflow: Not installed
2024-07-25 15:54:24,492:INFO:              gradio: Not installed
2024-07-25 15:54:24,492:INFO:             fastapi: Not installed
2024-07-25 15:54:24,492:INFO:             uvicorn: Not installed
2024-07-25 15:54:24,492:INFO:              m2cgen: Not installed
2024-07-25 15:54:24,492:INFO:           evidently: Not installed
2024-07-25 15:54:24,492:INFO:               fugue: Not installed
2024-07-25 15:54:24,492:INFO:           streamlit: Not installed
2024-07-25 15:54:24,492:INFO:             prophet: Not installed
2024-07-25 15:54:24,492:INFO:None
2024-07-25 15:54:24,492:INFO:Set up data.
2024-07-25 15:54:24,513:INFO:Set up folding strategy.
2024-07-25 15:54:24,513:INFO:Set up train/test split.
2024-07-25 15:54:24,513:INFO:Set up index.
2024-07-25 15:54:24,513:INFO:Assigning column types.
2024-07-25 15:54:24,531:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:54:24,583:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:54:24,583:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:54:24,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,676:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:54:24,676:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:54:24,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,707:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:54:24,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:54:24,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,861:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:54:24,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,892:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:54:24,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:24,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:25,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:25,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:25,095:INFO:Preparing preprocessing pipeline...
2024-07-25 15:54:25,095:INFO:Set up simple imputation.
2024-07-25 15:54:25,095:INFO:Set up column name cleaning.
2024-07-25 15:54:25,159:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:54:25,179:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:54:25,179:INFO:Creating final display dataframe.
2024-07-25 15:54:25,343:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5c85
2024-07-25 15:54:25,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:25,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:25,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:25,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:25,640:INFO:setup() successfully completed in 1.18s...............
2024-07-25 15:54:25,658:INFO:Initializing create_model()
2024-07-25 15:54:25,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF30A670>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:25,658:INFO:Checking exceptions
2024-07-25 15:54:25,693:INFO:Importing libraries
2024-07-25 15:54:25,693:INFO:Copying training dataset
2024-07-25 15:54:25,726:INFO:Defining folds
2024-07-25 15:54:25,726:INFO:Declaring metric variables
2024-07-25 15:54:25,736:INFO:Importing untrained model
2024-07-25 15:54:25,749:INFO:Logistic Regression Imported successfully
2024-07-25 15:54:25,775:INFO:Starting cross validation
2024-07-25 15:54:25,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:26,452:INFO:Calculating mean and std
2024-07-25 15:54:26,455:INFO:Creating metrics dataframe
2024-07-25 15:54:26,474:INFO:Finalizing model
2024-07-25 15:54:26,555:INFO:Uploading results into container
2024-07-25 15:54:26,555:INFO:Uploading model into container now
2024-07-25 15:54:26,659:INFO:_master_model_container: 1
2024-07-25 15:54:26,659:INFO:_display_container: 2
2024-07-25 15:54:26,659:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-25 15:54:26,659:INFO:create_model() successfully completed......................................
2024-07-25 15:54:26,768:INFO:Initializing create_model()
2024-07-25 15:54:26,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF30A670>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:26,770:INFO:Checking exceptions
2024-07-25 15:54:26,816:INFO:Importing libraries
2024-07-25 15:54:26,816:INFO:Copying training dataset
2024-07-25 15:54:26,833:INFO:Defining folds
2024-07-25 15:54:26,833:INFO:Declaring metric variables
2024-07-25 15:54:26,846:INFO:Importing untrained model
2024-07-25 15:54:26,860:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:54:26,876:INFO:Starting cross validation
2024-07-25 15:54:26,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:27,313:INFO:Calculating mean and std
2024-07-25 15:54:27,313:INFO:Creating metrics dataframe
2024-07-25 15:54:27,313:INFO:Finalizing model
2024-07-25 15:54:27,365:INFO:Uploading results into container
2024-07-25 15:54:27,365:INFO:Uploading model into container now
2024-07-25 15:54:27,413:INFO:_master_model_container: 2
2024-07-25 15:54:27,413:INFO:_display_container: 3
2024-07-25 15:54:27,413:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')
2024-07-25 15:54:27,413:INFO:create_model() successfully completed......................................
2024-07-25 15:54:27,484:INFO:Initializing create_model()
2024-07-25 15:54:27,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF30A670>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:27,484:INFO:Checking exceptions
2024-07-25 15:54:27,540:INFO:Importing libraries
2024-07-25 15:54:27,541:INFO:Copying training dataset
2024-07-25 15:54:27,561:INFO:Defining folds
2024-07-25 15:54:27,562:INFO:Declaring metric variables
2024-07-25 15:54:27,575:INFO:Importing untrained model
2024-07-25 15:54:27,589:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:27,613:INFO:Starting cross validation
2024-07-25 15:54:27,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:28,298:INFO:Calculating mean and std
2024-07-25 15:54:28,298:INFO:Creating metrics dataframe
2024-07-25 15:54:28,313:INFO:Finalizing model
2024-07-25 15:54:28,345:INFO:Uploading results into container
2024-07-25 15:54:28,345:INFO:Uploading model into container now
2024-07-25 15:54:28,396:INFO:_master_model_container: 3
2024-07-25 15:54:28,396:INFO:_display_container: 4
2024-07-25 15:54:28,396:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:54:28,396:INFO:create_model() successfully completed......................................
2024-07-25 15:54:28,475:INFO:Initializing create_model()
2024-07-25 15:54:28,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF30A670>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:28,475:INFO:Checking exceptions
2024-07-25 15:54:28,519:INFO:Importing libraries
2024-07-25 15:54:28,520:INFO:Copying training dataset
2024-07-25 15:54:28,544:INFO:Defining folds
2024-07-25 15:54:28,544:INFO:Declaring metric variables
2024-07-25 15:54:28,556:INFO:Importing untrained model
2024-07-25 15:54:28,570:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-25 15:54:28,625:INFO:Starting cross validation
2024-07-25 15:54:28,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:30,537:INFO:Calculating mean and std
2024-07-25 15:54:30,537:INFO:Creating metrics dataframe
2024-07-25 15:54:30,566:INFO:Finalizing model
2024-07-25 15:54:30,608:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-25 15:54:30,608:INFO:[LightGBM] [Info] Number of positive: 187, number of negative: 350
2024-07-25 15:54:30,609:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000130 seconds.
2024-07-25 15:54:30,609:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-25 15:54:30,609:INFO:[LightGBM] [Info] Total Bins 612
2024-07-25 15:54:30,609:INFO:[LightGBM] [Info] Number of data points in the train set: 537, number of used features: 8
2024-07-25 15:54:30,609:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.348231 -> initscore=-0.626825
2024-07-25 15:54:30,609:INFO:[LightGBM] [Info] Start training from score -0.626825
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:30,721:INFO:Uploading results into container
2024-07-25 15:54:30,721:INFO:Uploading model into container now
2024-07-25 15:54:30,790:INFO:_master_model_container: 4
2024-07-25 15:54:30,790:INFO:_display_container: 5
2024-07-25 15:54:30,790:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1234, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-25 15:54:30,790:INFO:create_model() successfully completed......................................
2024-07-25 15:54:30,902:INFO:Initializing stack_models()
2024-07-25 15:54:30,902:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF30A670>, estimator_list=[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best'), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')], meta_model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1234, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-25 15:54:30,902:INFO:Checking exceptions
2024-07-25 15:54:30,902:INFO:Defining meta model
2024-07-25 15:54:30,995:INFO:Getting model names
2024-07-25 15:54:30,998:INFO:[('Logistic Regression', LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1234, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)), ('Decision Tree Classifier', DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1234, splitter='best')), ('K Neighbors Classifier', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'))]
2024-07-25 15:54:31,025:INFO:SubProcess create_model() called ==================================
2024-07-25 15:54:31,053:INFO:Initializing create_model()
2024-07-25 15:54:31,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF30A670>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=1.0, class_weight=None,
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=1234,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Decision Tree Classifier',
                                DecisionTreeClassifier(ccp_a...
                                                  colsample_bytree=1.0,
                                                  importance_type='split',
                                                  learning_rate=0.1,
                                                  max_depth=-1,
                                                  min_child_samples=20,
                                                  min_child_weight=0.001,
                                                  min_split_gain=0.0,
                                                  n_estimators=100, n_jobs=-1,
                                                  num_leaves=31, objective=None,
                                                  random_state=1234,
                                                  reg_alpha=0.0, reg_lambda=0.0,
                                                  subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239DADA8880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:31,053:INFO:Checking exceptions
2024-07-25 15:54:31,053:INFO:Importing libraries
2024-07-25 15:54:31,053:INFO:Copying training dataset
2024-07-25 15:54:31,092:INFO:Defining folds
2024-07-25 15:54:31,092:INFO:Declaring metric variables
2024-07-25 15:54:31,170:INFO:Importing untrained model
2024-07-25 15:54:31,170:INFO:Declaring custom model
2024-07-25 15:54:31,251:INFO:Stacking Classifier Imported successfully
2024-07-25 15:54:31,339:INFO:Starting cross validation
2024-07-25 15:54:31,341:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:35,783:INFO:Calculating mean and std
2024-07-25 15:54:35,783:INFO:Creating metrics dataframe
2024-07-25 15:54:35,809:INFO:Finalizing model
2024-07-25 15:54:36,303:INFO:[LightGBM] [Info] Number of positive: 187, number of negative: 350
2024-07-25 15:54:36,303:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000088 seconds.
2024-07-25 15:54:36,303:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-25 15:54:36,303:INFO:[LightGBM] [Info] Total Bins 188
2024-07-25 15:54:36,303:INFO:[LightGBM] [Info] Number of data points in the train set: 537, number of used features: 3
2024-07-25 15:54:36,303:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.348231 -> initscore=-0.626825
2024-07-25 15:54:36,303:INFO:[LightGBM] [Info] Start training from score -0.626825
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-25 15:54:36,404:INFO:Uploading results into container
2024-07-25 15:54:36,404:INFO:Uploading model into container now
2024-07-25 15:54:36,404:INFO:_master_model_container: 5
2024-07-25 15:54:36,404:INFO:_display_container: 6
2024-07-25 15:54:36,448:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=1.0, class_weight=None,
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=1234,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Decision Tree Classifier',
                                DecisionTreeClassifier(ccp_a...
                                                  colsample_bytree=1.0,
                                                  importance_type='split',
                                                  learning_rate=0.1,
                                                  max_depth=-1,
                                                  min_child_samples=20,
                                                  min_child_weight=0.001,
                                                  min_split_gain=0.0,
                                                  n_estimators=100, n_jobs=-1,
                                                  num_leaves=31, objective=None,
                                                  random_state=1234,
                                                  reg_alpha=0.0, reg_lambda=0.0,
                                                  subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2024-07-25 15:54:36,448:INFO:create_model() successfully completed......................................
2024-07-25 15:54:36,533:INFO:SubProcess create_model() end ==================================
2024-07-25 15:54:36,567:INFO:_master_model_container: 5
2024-07-25 15:54:36,567:INFO:_display_container: 6
2024-07-25 15:54:36,598:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=1.0, class_weight=None,
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=1234,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False)),
                               ('Decision Tree Classifier',
                                DecisionTreeClassifier(ccp_a...
                                                  colsample_bytree=1.0,
                                                  importance_type='split',
                                                  learning_rate=0.1,
                                                  max_depth=-1,
                                                  min_child_samples=20,
                                                  min_child_weight=0.001,
                                                  min_split_gain=0.0,
                                                  n_estimators=100, n_jobs=-1,
                                                  num_leaves=31, objective=None,
                                                  random_state=1234,
                                                  reg_alpha=0.0, reg_lambda=0.0,
                                                  subsample=1.0,
                                                  subsample_for_bin=200000,
                                                  subsample_freq=0),
                   n_jobs=-1, passthrough=False, stack_method='auto',
                   verbose=0)
2024-07-25 15:54:36,598:INFO:stack_models() successfully completed......................................
2024-07-25 15:54:37,463:INFO:PyCaret ClassificationExperiment
2024-07-25 15:54:37,464:INFO:Logging name: clf-default-name
2024-07-25 15:54:37,464:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:54:37,464:INFO:version 3.3.2
2024-07-25 15:54:37,464:INFO:Initializing setup()
2024-07-25 15:54:37,464:INFO:self.USI: 9888
2024-07-25 15:54:37,464:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:54:37,464:INFO:Checking environment
2024-07-25 15:54:37,464:INFO:python_version: 3.9.19
2024-07-25 15:54:37,464:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:54:37,464:INFO:machine: AMD64
2024-07-25 15:54:37,464:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:54:37,464:INFO:Memory: svmem(total=8387862528, available=1064472576, percent=87.3, used=7323389952, free=1064472576)
2024-07-25 15:54:37,464:INFO:Physical Core: 2
2024-07-25 15:54:37,464:INFO:Logical Core: 4
2024-07-25 15:54:37,464:INFO:Checking libraries
2024-07-25 15:54:37,464:INFO:System:
2024-07-25 15:54:37,464:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:54:37,464:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:54:37,464:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:54:37,464:INFO:PyCaret required dependencies:
2024-07-25 15:54:37,464:INFO:                 pip: 24.0
2024-07-25 15:54:37,464:INFO:          setuptools: 69.5.1
2024-07-25 15:54:37,464:INFO:             pycaret: 3.3.2
2024-07-25 15:54:37,464:INFO:             IPython: 8.18.1
2024-07-25 15:54:37,464:INFO:          ipywidgets: 8.1.3
2024-07-25 15:54:37,464:INFO:                tqdm: 4.66.4
2024-07-25 15:54:37,464:INFO:               numpy: 1.26.4
2024-07-25 15:54:37,464:INFO:              pandas: 2.1.4
2024-07-25 15:54:37,464:INFO:              jinja2: 3.1.4
2024-07-25 15:54:37,464:INFO:               scipy: 1.11.4
2024-07-25 15:54:37,464:INFO:              joblib: 1.3.2
2024-07-25 15:54:37,464:INFO:             sklearn: 1.4.2
2024-07-25 15:54:37,464:INFO:                pyod: 2.0.1
2024-07-25 15:54:37,464:INFO:            imblearn: 0.12.3
2024-07-25 15:54:37,464:INFO:   category_encoders: 2.6.3
2024-07-25 15:54:37,464:INFO:            lightgbm: 4.4.0
2024-07-25 15:54:37,464:INFO:               numba: 0.60.0
2024-07-25 15:54:37,464:INFO:            requests: 2.32.3
2024-07-25 15:54:37,464:INFO:          matplotlib: 3.7.5
2024-07-25 15:54:37,464:INFO:          scikitplot: 0.3.7
2024-07-25 15:54:37,464:INFO:         yellowbrick: 1.5
2024-07-25 15:54:37,464:INFO:              plotly: 5.23.0
2024-07-25 15:54:37,464:INFO:    plotly-resampler: Not installed
2024-07-25 15:54:37,464:INFO:             kaleido: 0.2.1
2024-07-25 15:54:37,464:INFO:           schemdraw: 0.15
2024-07-25 15:54:37,464:INFO:         statsmodels: 0.14.2
2024-07-25 15:54:37,464:INFO:              sktime: 0.26.0
2024-07-25 15:54:37,464:INFO:               tbats: 1.1.3
2024-07-25 15:54:37,464:INFO:            pmdarima: 2.0.4
2024-07-25 15:54:37,464:INFO:              psutil: 6.0.0
2024-07-25 15:54:37,464:INFO:          markupsafe: 2.1.5
2024-07-25 15:54:37,464:INFO:             pickle5: Not installed
2024-07-25 15:54:37,464:INFO:         cloudpickle: 3.0.0
2024-07-25 15:54:37,464:INFO:         deprecation: 2.1.0
2024-07-25 15:54:37,464:INFO:              xxhash: 3.4.1
2024-07-25 15:54:37,464:INFO:           wurlitzer: Not installed
2024-07-25 15:54:37,464:INFO:PyCaret optional dependencies:
2024-07-25 15:54:37,464:INFO:                shap: Not installed
2024-07-25 15:54:37,464:INFO:           interpret: Not installed
2024-07-25 15:54:37,464:INFO:                umap: Not installed
2024-07-25 15:54:37,464:INFO:     ydata_profiling: Not installed
2024-07-25 15:54:37,464:INFO:  explainerdashboard: Not installed
2024-07-25 15:54:37,464:INFO:             autoviz: Not installed
2024-07-25 15:54:37,464:INFO:           fairlearn: Not installed
2024-07-25 15:54:37,464:INFO:          deepchecks: Not installed
2024-07-25 15:54:37,464:INFO:             xgboost: Not installed
2024-07-25 15:54:37,464:INFO:            catboost: Not installed
2024-07-25 15:54:37,464:INFO:              kmodes: Not installed
2024-07-25 15:54:37,464:INFO:             mlxtend: Not installed
2024-07-25 15:54:37,464:INFO:       statsforecast: Not installed
2024-07-25 15:54:37,464:INFO:        tune_sklearn: Not installed
2024-07-25 15:54:37,464:INFO:                 ray: Not installed
2024-07-25 15:54:37,464:INFO:            hyperopt: Not installed
2024-07-25 15:54:37,464:INFO:              optuna: Not installed
2024-07-25 15:54:37,464:INFO:               skopt: Not installed
2024-07-25 15:54:37,464:INFO:              mlflow: Not installed
2024-07-25 15:54:37,464:INFO:              gradio: Not installed
2024-07-25 15:54:37,464:INFO:             fastapi: Not installed
2024-07-25 15:54:37,464:INFO:             uvicorn: Not installed
2024-07-25 15:54:37,464:INFO:              m2cgen: Not installed
2024-07-25 15:54:37,464:INFO:           evidently: Not installed
2024-07-25 15:54:37,464:INFO:               fugue: Not installed
2024-07-25 15:54:37,464:INFO:           streamlit: Not installed
2024-07-25 15:54:37,464:INFO:             prophet: Not installed
2024-07-25 15:54:37,464:INFO:None
2024-07-25 15:54:37,464:INFO:Set up data.
2024-07-25 15:54:37,480:INFO:Set up folding strategy.
2024-07-25 15:54:37,480:INFO:Set up train/test split.
2024-07-25 15:54:37,480:INFO:Set up index.
2024-07-25 15:54:37,480:INFO:Assigning column types.
2024-07-25 15:54:37,496:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:54:37,563:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:54:37,563:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:54:37,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:37,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:37,677:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:54:37,677:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:54:37,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:37,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:37,708:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:54:37,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:54:37,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:37,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:37,915:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:54:37,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:37,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:37,947:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:54:38,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:38,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:38,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:38,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:38,166:INFO:Preparing preprocessing pipeline...
2024-07-25 15:54:38,166:INFO:Set up simple imputation.
2024-07-25 15:54:38,166:INFO:Set up column name cleaning.
2024-07-25 15:54:38,234:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:54:38,250:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:54:38,250:INFO:Creating final display dataframe.
2024-07-25 15:54:38,430:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              9888
2024-07-25 15:54:38,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:38,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:38,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:38,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:54:38,669:INFO:setup() successfully completed in 1.22s...............
2024-07-25 15:54:38,669:INFO:Initializing create_model()
2024-07-25 15:54:38,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:38,669:INFO:Checking exceptions
2024-07-25 15:54:38,713:INFO:Importing libraries
2024-07-25 15:54:38,713:INFO:Copying training dataset
2024-07-25 15:54:38,772:INFO:Defining folds
2024-07-25 15:54:38,773:INFO:Declaring metric variables
2024-07-25 15:54:38,788:INFO:Importing untrained model
2024-07-25 15:54:38,799:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:38,863:INFO:Starting cross validation
2024-07-25 15:54:38,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:39,617:INFO:Calculating mean and std
2024-07-25 15:54:39,617:INFO:Creating metrics dataframe
2024-07-25 15:54:39,623:INFO:Finalizing model
2024-07-25 15:54:39,662:INFO:Uploading results into container
2024-07-25 15:54:39,662:INFO:Uploading model into container now
2024-07-25 15:54:39,693:INFO:_master_model_container: 1
2024-07-25 15:54:39,709:INFO:_display_container: 2
2024-07-25 15:54:39,709:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-25 15:54:39,709:INFO:create_model() successfully completed......................................
2024-07-25 15:54:39,835:INFO:Initializing optimize_threshold()
2024-07-25 15:54:39,835:INFO:optimize_threshold(return_data=False, plot_kwargs=None, shgo_kwargs={}, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), optimize=Accuracy, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, verbose=True)
2024-07-25 15:54:39,835:INFO:Importing libraries
2024-07-25 15:54:39,835:INFO:Checking exceptions
2024-07-25 15:54:39,848:INFO:defining variables
2024-07-25 15:54:39,850:INFO:starting optimization
2024-07-25 15:54:39,894:INFO:Initializing create_model()
2024-07-25 15:54:39,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:39,894:INFO:Checking exceptions
2024-07-25 15:54:39,894:INFO:Importing libraries
2024-07-25 15:54:39,894:INFO:Copying training dataset
2024-07-25 15:54:39,911:INFO:Defining folds
2024-07-25 15:54:39,911:INFO:Declaring metric variables
2024-07-25 15:54:39,911:INFO:Importing untrained model
2024-07-25 15:54:39,911:INFO:Declaring custom model
2024-07-25 15:54:39,911:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:39,911:INFO:Starting cross validation
2024-07-25 15:54:39,911:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:40,739:INFO:Calculating mean and std
2024-07-25 15:54:40,739:INFO:Creating metrics dataframe
2024-07-25 15:54:40,739:INFO:Finalizing model
2024-07-25 15:54:40,785:INFO:Uploading results into container
2024-07-25 15:54:40,785:INFO:Uploading model into container now
2024-07-25 15:54:40,785:INFO:_master_model_container: 2
2024-07-25 15:54:40,785:INFO:_display_container: 3
2024-07-25 15:54:40,801:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.375,
                                     weights='uniform')
2024-07-25 15:54:40,801:INFO:create_model() successfully completed......................................
2024-07-25 15:54:40,896:INFO:Threshold: 0.375. Accuracy: 0.6666
2024-07-25 15:54:40,896:INFO:Initializing create_model()
2024-07-25 15:54:40,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:40,896:INFO:Checking exceptions
2024-07-25 15:54:40,896:INFO:Importing libraries
2024-07-25 15:54:40,896:INFO:Copying training dataset
2024-07-25 15:54:40,918:INFO:Defining folds
2024-07-25 15:54:40,918:INFO:Declaring metric variables
2024-07-25 15:54:40,918:INFO:Importing untrained model
2024-07-25 15:54:40,918:INFO:Declaring custom model
2024-07-25 15:54:40,918:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:40,918:INFO:Starting cross validation
2024-07-25 15:54:40,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:41,628:INFO:Calculating mean and std
2024-07-25 15:54:41,628:INFO:Creating metrics dataframe
2024-07-25 15:54:41,628:INFO:Finalizing model
2024-07-25 15:54:41,644:INFO:Uploading results into container
2024-07-25 15:54:41,644:INFO:Uploading model into container now
2024-07-25 15:54:41,659:INFO:_master_model_container: 3
2024-07-25 15:54:41,659:INFO:_display_container: 3
2024-07-25 15:54:41,664:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.125,
                                     weights='uniform')
2024-07-25 15:54:41,664:INFO:create_model() successfully completed......................................
2024-07-25 15:54:41,743:INFO:Threshold: 0.125. Accuracy: 0.5456
2024-07-25 15:54:41,743:INFO:Initializing create_model()
2024-07-25 15:54:41,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:41,743:INFO:Checking exceptions
2024-07-25 15:54:41,743:INFO:Importing libraries
2024-07-25 15:54:41,743:INFO:Copying training dataset
2024-07-25 15:54:41,759:INFO:Defining folds
2024-07-25 15:54:41,759:INFO:Declaring metric variables
2024-07-25 15:54:41,759:INFO:Importing untrained model
2024-07-25 15:54:41,759:INFO:Declaring custom model
2024-07-25 15:54:41,759:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:41,759:INFO:Starting cross validation
2024-07-25 15:54:41,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:42,410:INFO:Calculating mean and std
2024-07-25 15:54:42,410:INFO:Creating metrics dataframe
2024-07-25 15:54:42,410:INFO:Finalizing model
2024-07-25 15:54:42,443:INFO:Uploading results into container
2024-07-25 15:54:42,443:INFO:Uploading model into container now
2024-07-25 15:54:42,443:INFO:_master_model_container: 4
2024-07-25 15:54:42,443:INFO:_display_container: 3
2024-07-25 15:54:42,443:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5,
                                     weights='uniform')
2024-07-25 15:54:42,443:INFO:create_model() successfully completed......................................
2024-07-25 15:54:42,526:INFO:Threshold: 0.5. Accuracy: 0.6984
2024-07-25 15:54:42,526:INFO:Initializing create_model()
2024-07-25 15:54:42,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:42,526:INFO:Checking exceptions
2024-07-25 15:54:42,526:INFO:Importing libraries
2024-07-25 15:54:42,526:INFO:Copying training dataset
2024-07-25 15:54:42,542:INFO:Defining folds
2024-07-25 15:54:42,542:INFO:Declaring metric variables
2024-07-25 15:54:42,542:INFO:Importing untrained model
2024-07-25 15:54:42,542:INFO:Declaring custom model
2024-07-25 15:54:42,542:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:42,542:INFO:Starting cross validation
2024-07-25 15:54:42,542:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:43,364:INFO:Calculating mean and std
2024-07-25 15:54:43,364:INFO:Creating metrics dataframe
2024-07-25 15:54:43,364:INFO:Finalizing model
2024-07-25 15:54:43,401:INFO:Uploading results into container
2024-07-25 15:54:43,402:INFO:Uploading model into container now
2024-07-25 15:54:43,402:INFO:_master_model_container: 5
2024-07-25 15:54:43,402:INFO:_display_container: 3
2024-07-25 15:54:43,402:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.25,
                                     weights='uniform')
2024-07-25 15:54:43,402:INFO:create_model() successfully completed......................................
2024-07-25 15:54:43,488:INFO:Threshold: 0.25. Accuracy: 0.6666
2024-07-25 15:54:43,488:INFO:Initializing create_model()
2024-07-25 15:54:43,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:43,488:INFO:Checking exceptions
2024-07-25 15:54:43,488:INFO:Importing libraries
2024-07-25 15:54:43,488:INFO:Copying training dataset
2024-07-25 15:54:43,509:INFO:Defining folds
2024-07-25 15:54:43,509:INFO:Declaring metric variables
2024-07-25 15:54:43,509:INFO:Importing untrained model
2024-07-25 15:54:43,509:INFO:Declaring custom model
2024-07-25 15:54:43,509:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:43,509:INFO:Starting cross validation
2024-07-25 15:54:43,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:44,174:INFO:Calculating mean and std
2024-07-25 15:54:44,174:INFO:Creating metrics dataframe
2024-07-25 15:54:44,174:INFO:Finalizing model
2024-07-25 15:54:44,205:INFO:Uploading results into container
2024-07-25 15:54:44,205:INFO:Uploading model into container now
2024-07-25 15:54:44,205:INFO:_master_model_container: 6
2024-07-25 15:54:44,205:INFO:_display_container: 3
2024-07-25 15:54:44,205:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.625,
                                     weights='uniform')
2024-07-25 15:54:44,205:INFO:create_model() successfully completed......................................
2024-07-25 15:54:44,290:INFO:Threshold: 0.625. Accuracy: 0.7077
2024-07-25 15:54:44,290:INFO:Initializing create_model()
2024-07-25 15:54:44,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.75, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:44,290:INFO:Checking exceptions
2024-07-25 15:54:44,290:INFO:Importing libraries
2024-07-25 15:54:44,290:INFO:Copying training dataset
2024-07-25 15:54:44,306:INFO:Defining folds
2024-07-25 15:54:44,306:INFO:Declaring metric variables
2024-07-25 15:54:44,306:INFO:Importing untrained model
2024-07-25 15:54:44,306:INFO:Declaring custom model
2024-07-25 15:54:44,306:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:44,306:INFO:Starting cross validation
2024-07-25 15:54:44,306:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:45,140:INFO:Calculating mean and std
2024-07-25 15:54:45,143:INFO:Creating metrics dataframe
2024-07-25 15:54:45,147:INFO:Finalizing model
2024-07-25 15:54:45,172:INFO:Uploading results into container
2024-07-25 15:54:45,172:INFO:Uploading model into container now
2024-07-25 15:54:45,172:INFO:_master_model_container: 7
2024-07-25 15:54:45,172:INFO:_display_container: 3
2024-07-25 15:54:45,172:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.75,
                                     weights='uniform')
2024-07-25 15:54:45,172:INFO:create_model() successfully completed......................................
2024-07-25 15:54:45,273:INFO:Threshold: 0.75. Accuracy: 0.7077
2024-07-25 15:54:45,274:INFO:Initializing create_model()
2024-07-25 15:54:45,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:45,275:INFO:Checking exceptions
2024-07-25 15:54:45,278:INFO:Importing libraries
2024-07-25 15:54:45,278:INFO:Copying training dataset
2024-07-25 15:54:45,291:INFO:Defining folds
2024-07-25 15:54:45,291:INFO:Declaring metric variables
2024-07-25 15:54:45,292:INFO:Importing untrained model
2024-07-25 15:54:45,292:INFO:Declaring custom model
2024-07-25 15:54:45,293:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:45,293:INFO:Starting cross validation
2024-07-25 15:54:45,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:45,791:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:46,086:INFO:Calculating mean and std
2024-07-25 15:54:46,086:INFO:Creating metrics dataframe
2024-07-25 15:54:46,086:INFO:Finalizing model
2024-07-25 15:54:46,128:INFO:Uploading results into container
2024-07-25 15:54:46,128:INFO:Uploading model into container now
2024-07-25 15:54:46,128:INFO:_master_model_container: 8
2024-07-25 15:54:46,128:INFO:_display_container: 3
2024-07-25 15:54:46,128:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.875,
                                     weights='uniform')
2024-07-25 15:54:46,128:INFO:create_model() successfully completed......................................
2024-07-25 15:54:46,223:INFO:Threshold: 0.875. Accuracy: 0.6724
2024-07-25 15:54:46,223:INFO:Initializing create_model()
2024-07-25 15:54:46,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:46,223:INFO:Checking exceptions
2024-07-25 15:54:46,223:INFO:Importing libraries
2024-07-25 15:54:46,223:INFO:Copying training dataset
2024-07-25 15:54:46,239:INFO:Defining folds
2024-07-25 15:54:46,239:INFO:Declaring metric variables
2024-07-25 15:54:46,239:INFO:Importing untrained model
2024-07-25 15:54:46,239:INFO:Declaring custom model
2024-07-25 15:54:46,239:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:46,239:INFO:Starting cross validation
2024-07-25 15:54:46,239:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:46,909:INFO:Calculating mean and std
2024-07-25 15:54:46,909:INFO:Creating metrics dataframe
2024-07-25 15:54:46,909:INFO:Finalizing model
2024-07-25 15:54:46,930:INFO:Uploading results into container
2024-07-25 15:54:46,930:INFO:Uploading model into container now
2024-07-25 15:54:46,930:INFO:_master_model_container: 9
2024-07-25 15:54:46,930:INFO:_display_container: 3
2024-07-25 15:54:46,930:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.0,
                                     weights='uniform')
2024-07-25 15:54:46,930:INFO:create_model() successfully completed......................................
2024-07-25 15:54:47,026:INFO:Threshold: 0.0. Accuracy: 0.3482
2024-07-25 15:54:47,026:INFO:Initializing create_model()
2024-07-25 15:54:47,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.21875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:47,026:INFO:Checking exceptions
2024-07-25 15:54:47,026:INFO:Importing libraries
2024-07-25 15:54:47,026:INFO:Copying training dataset
2024-07-25 15:54:47,042:INFO:Defining folds
2024-07-25 15:54:47,042:INFO:Declaring metric variables
2024-07-25 15:54:47,042:INFO:Importing untrained model
2024-07-25 15:54:47,042:INFO:Declaring custom model
2024-07-25 15:54:47,042:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:47,042:INFO:Starting cross validation
2024-07-25 15:54:47,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:47,822:INFO:Calculating mean and std
2024-07-25 15:54:47,824:INFO:Creating metrics dataframe
2024-07-25 15:54:47,825:INFO:Finalizing model
2024-07-25 15:54:47,853:INFO:Uploading results into container
2024-07-25 15:54:47,853:INFO:Uploading model into container now
2024-07-25 15:54:47,853:INFO:_master_model_container: 10
2024-07-25 15:54:47,853:INFO:_display_container: 3
2024-07-25 15:54:47,853:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.21875,
                                     weights='uniform')
2024-07-25 15:54:47,853:INFO:create_model() successfully completed......................................
2024-07-25 15:54:47,954:INFO:Threshold: 0.21875. Accuracy: 0.6666
2024-07-25 15:54:47,954:INFO:Initializing create_model()
2024-07-25 15:54:47,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.09375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:47,954:INFO:Checking exceptions
2024-07-25 15:54:47,954:INFO:Importing libraries
2024-07-25 15:54:47,954:INFO:Copying training dataset
2024-07-25 15:54:47,954:INFO:Defining folds
2024-07-25 15:54:47,954:INFO:Declaring metric variables
2024-07-25 15:54:47,954:INFO:Importing untrained model
2024-07-25 15:54:47,954:INFO:Declaring custom model
2024-07-25 15:54:47,970:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:47,970:INFO:Starting cross validation
2024-07-25 15:54:47,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:48,669:INFO:Calculating mean and std
2024-07-25 15:54:48,671:INFO:Creating metrics dataframe
2024-07-25 15:54:48,671:INFO:Finalizing model
2024-07-25 15:54:48,686:INFO:Uploading results into container
2024-07-25 15:54:48,686:INFO:Uploading model into container now
2024-07-25 15:54:48,686:INFO:_master_model_container: 11
2024-07-25 15:54:48,702:INFO:_display_container: 3
2024-07-25 15:54:48,702:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.09375,
                                     weights='uniform')
2024-07-25 15:54:48,702:INFO:create_model() successfully completed......................................
2024-07-25 15:54:48,788:INFO:Threshold: 0.09375. Accuracy: 0.5456
2024-07-25 15:54:48,788:INFO:Initializing create_model()
2024-07-25 15:54:48,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.3125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:48,788:INFO:Checking exceptions
2024-07-25 15:54:48,788:INFO:Importing libraries
2024-07-25 15:54:48,788:INFO:Copying training dataset
2024-07-25 15:54:48,805:INFO:Defining folds
2024-07-25 15:54:48,805:INFO:Declaring metric variables
2024-07-25 15:54:48,805:INFO:Importing untrained model
2024-07-25 15:54:48,805:INFO:Declaring custom model
2024-07-25 15:54:48,805:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:48,805:INFO:Starting cross validation
2024-07-25 15:54:48,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:49,537:INFO:Calculating mean and std
2024-07-25 15:54:49,537:INFO:Creating metrics dataframe
2024-07-25 15:54:49,537:INFO:Finalizing model
2024-07-25 15:54:49,572:INFO:Uploading results into container
2024-07-25 15:54:49,572:INFO:Uploading model into container now
2024-07-25 15:54:49,572:INFO:_master_model_container: 12
2024-07-25 15:54:49,572:INFO:_display_container: 3
2024-07-25 15:54:49,572:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.3125,
                                     weights='uniform')
2024-07-25 15:54:49,572:INFO:create_model() successfully completed......................................
2024-07-25 15:54:49,668:INFO:Threshold: 0.3125. Accuracy: 0.6666
2024-07-25 15:54:49,668:INFO:Initializing create_model()
2024-07-25 15:54:49,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.1875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:49,668:INFO:Checking exceptions
2024-07-25 15:54:49,668:INFO:Importing libraries
2024-07-25 15:54:49,668:INFO:Copying training dataset
2024-07-25 15:54:49,684:INFO:Defining folds
2024-07-25 15:54:49,684:INFO:Declaring metric variables
2024-07-25 15:54:49,684:INFO:Importing untrained model
2024-07-25 15:54:49,684:INFO:Declaring custom model
2024-07-25 15:54:49,684:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:49,684:INFO:Starting cross validation
2024-07-25 15:54:49,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:50,537:INFO:Calculating mean and std
2024-07-25 15:54:50,537:INFO:Creating metrics dataframe
2024-07-25 15:54:50,537:INFO:Finalizing model
2024-07-25 15:54:50,569:INFO:Uploading results into container
2024-07-25 15:54:50,569:INFO:Uploading model into container now
2024-07-25 15:54:50,569:INFO:_master_model_container: 13
2024-07-25 15:54:50,569:INFO:_display_container: 3
2024-07-25 15:54:50,569:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.1875,
                                     weights='uniform')
2024-07-25 15:54:50,569:INFO:create_model() successfully completed......................................
2024-07-25 15:54:50,656:INFO:Threshold: 0.1875. Accuracy: 0.5456
2024-07-25 15:54:50,656:INFO:Initializing create_model()
2024-07-25 15:54:50,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.34375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:50,656:INFO:Checking exceptions
2024-07-25 15:54:50,672:INFO:Importing libraries
2024-07-25 15:54:50,672:INFO:Copying training dataset
2024-07-25 15:54:50,672:INFO:Defining folds
2024-07-25 15:54:50,672:INFO:Declaring metric variables
2024-07-25 15:54:50,672:INFO:Importing untrained model
2024-07-25 15:54:50,672:INFO:Declaring custom model
2024-07-25 15:54:50,682:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:50,684:INFO:Starting cross validation
2024-07-25 15:54:50,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:51,684:INFO:Calculating mean and std
2024-07-25 15:54:51,686:INFO:Creating metrics dataframe
2024-07-25 15:54:51,688:INFO:Finalizing model
2024-07-25 15:54:51,720:INFO:Uploading results into container
2024-07-25 15:54:51,721:INFO:Uploading model into container now
2024-07-25 15:54:51,721:INFO:_master_model_container: 14
2024-07-25 15:54:51,721:INFO:_display_container: 3
2024-07-25 15:54:51,721:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.34375,
                                     weights='uniform')
2024-07-25 15:54:51,721:INFO:create_model() successfully completed......................................
2024-07-25 15:54:51,803:INFO:Threshold: 0.34375. Accuracy: 0.6666
2024-07-25 15:54:51,803:INFO:Initializing create_model()
2024-07-25 15:54:51,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.4375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:51,803:INFO:Checking exceptions
2024-07-25 15:54:51,803:INFO:Importing libraries
2024-07-25 15:54:51,803:INFO:Copying training dataset
2024-07-25 15:54:51,819:INFO:Defining folds
2024-07-25 15:54:51,819:INFO:Declaring metric variables
2024-07-25 15:54:51,819:INFO:Importing untrained model
2024-07-25 15:54:51,819:INFO:Declaring custom model
2024-07-25 15:54:51,819:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:51,819:INFO:Starting cross validation
2024-07-25 15:54:51,819:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:53,014:INFO:Calculating mean and std
2024-07-25 15:54:53,016:INFO:Creating metrics dataframe
2024-07-25 15:54:53,021:INFO:Finalizing model
2024-07-25 15:54:53,084:INFO:Uploading results into container
2024-07-25 15:54:53,084:INFO:Uploading model into container now
2024-07-25 15:54:53,084:INFO:_master_model_container: 15
2024-07-25 15:54:53,084:INFO:_display_container: 3
2024-07-25 15:54:53,084:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.4375,
                                     weights='uniform')
2024-07-25 15:54:53,084:INFO:create_model() successfully completed......................................
2024-07-25 15:54:53,283:INFO:Threshold: 0.4375. Accuracy: 0.6984
2024-07-25 15:54:53,285:INFO:Initializing create_model()
2024-07-25 15:54:53,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.46875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:53,286:INFO:Checking exceptions
2024-07-25 15:54:53,291:INFO:Importing libraries
2024-07-25 15:54:53,291:INFO:Copying training dataset
2024-07-25 15:54:53,317:INFO:Defining folds
2024-07-25 15:54:53,317:INFO:Declaring metric variables
2024-07-25 15:54:53,317:INFO:Importing untrained model
2024-07-25 15:54:53,317:INFO:Declaring custom model
2024-07-25 15:54:53,335:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:53,337:INFO:Starting cross validation
2024-07-25 15:54:53,342:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:54,454:INFO:Calculating mean and std
2024-07-25 15:54:54,454:INFO:Creating metrics dataframe
2024-07-25 15:54:54,454:INFO:Finalizing model
2024-07-25 15:54:54,469:INFO:Uploading results into container
2024-07-25 15:54:54,485:INFO:Uploading model into container now
2024-07-25 15:54:54,485:INFO:_master_model_container: 16
2024-07-25 15:54:54,485:INFO:_display_container: 3
2024-07-25 15:54:54,485:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.46875,
                                     weights='uniform')
2024-07-25 15:54:54,485:INFO:create_model() successfully completed......................................
2024-07-25 15:54:54,582:INFO:Threshold: 0.46875. Accuracy: 0.6984
2024-07-25 15:54:54,582:INFO:Initializing create_model()
2024-07-25 15:54:54,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:54,598:INFO:Checking exceptions
2024-07-25 15:54:54,640:INFO:Importing libraries
2024-07-25 15:54:54,640:INFO:Copying training dataset
2024-07-25 15:54:54,651:INFO:Defining folds
2024-07-25 15:54:54,651:INFO:Declaring metric variables
2024-07-25 15:54:54,651:INFO:Importing untrained model
2024-07-25 15:54:54,651:INFO:Declaring custom model
2024-07-25 15:54:54,651:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:54,651:INFO:Starting cross validation
2024-07-25 15:54:54,666:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:55,447:INFO:Calculating mean and std
2024-07-25 15:54:55,447:INFO:Creating metrics dataframe
2024-07-25 15:54:55,447:INFO:Finalizing model
2024-07-25 15:54:55,482:INFO:Uploading results into container
2024-07-25 15:54:55,482:INFO:Uploading model into container now
2024-07-25 15:54:55,482:INFO:_master_model_container: 17
2024-07-25 15:54:55,482:INFO:_display_container: 3
2024-07-25 15:54:55,482:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5625,
                                     weights='uniform')
2024-07-25 15:54:55,482:INFO:create_model() successfully completed......................................
2024-07-25 15:54:55,567:INFO:Threshold: 0.5625. Accuracy: 0.6984
2024-07-25 15:54:55,567:INFO:Initializing create_model()
2024-07-25 15:54:55,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.59375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:55,567:INFO:Checking exceptions
2024-07-25 15:54:55,567:INFO:Importing libraries
2024-07-25 15:54:55,567:INFO:Copying training dataset
2024-07-25 15:54:55,583:INFO:Defining folds
2024-07-25 15:54:55,583:INFO:Declaring metric variables
2024-07-25 15:54:55,583:INFO:Importing untrained model
2024-07-25 15:54:55,583:INFO:Declaring custom model
2024-07-25 15:54:55,583:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:55,583:INFO:Starting cross validation
2024-07-25 15:54:55,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:56,306:INFO:Calculating mean and std
2024-07-25 15:54:56,306:INFO:Creating metrics dataframe
2024-07-25 15:54:56,314:INFO:Finalizing model
2024-07-25 15:54:56,349:INFO:Uploading results into container
2024-07-25 15:54:56,349:INFO:Uploading model into container now
2024-07-25 15:54:56,349:INFO:_master_model_container: 18
2024-07-25 15:54:56,349:INFO:_display_container: 3
2024-07-25 15:54:56,349:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.59375,
                                     weights='uniform')
2024-07-25 15:54:56,349:INFO:create_model() successfully completed......................................
2024-07-25 15:54:56,429:INFO:Threshold: 0.59375. Accuracy: 0.6984
2024-07-25 15:54:56,429:INFO:Initializing create_model()
2024-07-25 15:54:56,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.6875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:56,429:INFO:Checking exceptions
2024-07-25 15:54:56,445:INFO:Importing libraries
2024-07-25 15:54:56,445:INFO:Copying training dataset
2024-07-25 15:54:56,449:INFO:Defining folds
2024-07-25 15:54:56,449:INFO:Declaring metric variables
2024-07-25 15:54:56,449:INFO:Importing untrained model
2024-07-25 15:54:56,449:INFO:Declaring custom model
2024-07-25 15:54:56,449:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:56,449:INFO:Starting cross validation
2024-07-25 15:54:56,449:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:57,210:INFO:Calculating mean and std
2024-07-25 15:54:57,212:INFO:Creating metrics dataframe
2024-07-25 15:54:57,215:INFO:Finalizing model
2024-07-25 15:54:57,230:INFO:Uploading results into container
2024-07-25 15:54:57,230:INFO:Uploading model into container now
2024-07-25 15:54:57,230:INFO:_master_model_container: 19
2024-07-25 15:54:57,230:INFO:_display_container: 3
2024-07-25 15:54:57,230:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.6875,
                                     weights='uniform')
2024-07-25 15:54:57,230:INFO:create_model() successfully completed......................................
2024-07-25 15:54:57,329:INFO:Threshold: 0.6875. Accuracy: 0.7077
2024-07-25 15:54:57,329:INFO:Initializing create_model()
2024-07-25 15:54:57,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.71875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:57,329:INFO:Checking exceptions
2024-07-25 15:54:57,329:INFO:Importing libraries
2024-07-25 15:54:57,329:INFO:Copying training dataset
2024-07-25 15:54:57,344:INFO:Defining folds
2024-07-25 15:54:57,344:INFO:Declaring metric variables
2024-07-25 15:54:57,344:INFO:Importing untrained model
2024-07-25 15:54:57,344:INFO:Declaring custom model
2024-07-25 15:54:57,344:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:57,344:INFO:Starting cross validation
2024-07-25 15:54:57,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:58,107:INFO:Calculating mean and std
2024-07-25 15:54:58,107:INFO:Creating metrics dataframe
2024-07-25 15:54:58,107:INFO:Finalizing model
2024-07-25 15:54:58,138:INFO:Uploading results into container
2024-07-25 15:54:58,138:INFO:Uploading model into container now
2024-07-25 15:54:58,138:INFO:_master_model_container: 20
2024-07-25 15:54:58,138:INFO:_display_container: 3
2024-07-25 15:54:58,138:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.71875,
                                     weights='uniform')
2024-07-25 15:54:58,138:INFO:create_model() successfully completed......................................
2024-07-25 15:54:58,240:INFO:Threshold: 0.71875. Accuracy: 0.7077
2024-07-25 15:54:58,240:INFO:Initializing create_model()
2024-07-25 15:54:58,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.8125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:58,240:INFO:Checking exceptions
2024-07-25 15:54:58,240:INFO:Importing libraries
2024-07-25 15:54:58,240:INFO:Copying training dataset
2024-07-25 15:54:58,257:INFO:Defining folds
2024-07-25 15:54:58,257:INFO:Declaring metric variables
2024-07-25 15:54:58,257:INFO:Importing untrained model
2024-07-25 15:54:58,257:INFO:Declaring custom model
2024-07-25 15:54:58,257:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:58,257:INFO:Starting cross validation
2024-07-25 15:54:58,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:58,775:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:59,010:INFO:Calculating mean and std
2024-07-25 15:54:59,014:INFO:Creating metrics dataframe
2024-07-25 15:54:59,014:INFO:Finalizing model
2024-07-25 15:54:59,040:INFO:Uploading results into container
2024-07-25 15:54:59,040:INFO:Uploading model into container now
2024-07-25 15:54:59,040:INFO:_master_model_container: 21
2024-07-25 15:54:59,040:INFO:_display_container: 3
2024-07-25 15:54:59,040:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.8125,
                                     weights='uniform')
2024-07-25 15:54:59,040:INFO:create_model() successfully completed......................................
2024-07-25 15:54:59,125:INFO:Threshold: 0.8125. Accuracy: 0.6724
2024-07-25 15:54:59,125:INFO:Initializing create_model()
2024-07-25 15:54:59,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.84375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:54:59,125:INFO:Checking exceptions
2024-07-25 15:54:59,143:INFO:Importing libraries
2024-07-25 15:54:59,144:INFO:Copying training dataset
2024-07-25 15:54:59,144:INFO:Defining folds
2024-07-25 15:54:59,144:INFO:Declaring metric variables
2024-07-25 15:54:59,144:INFO:Importing untrained model
2024-07-25 15:54:59,144:INFO:Declaring custom model
2024-07-25 15:54:59,144:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:54:59,144:INFO:Starting cross validation
2024-07-25 15:54:59,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:54:59,690:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:54:59,923:INFO:Calculating mean and std
2024-07-25 15:54:59,923:INFO:Creating metrics dataframe
2024-07-25 15:54:59,923:INFO:Finalizing model
2024-07-25 15:54:59,939:INFO:Uploading results into container
2024-07-25 15:54:59,939:INFO:Uploading model into container now
2024-07-25 15:54:59,939:INFO:_master_model_container: 22
2024-07-25 15:54:59,939:INFO:_display_container: 3
2024-07-25 15:54:59,955:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.84375,
                                     weights='uniform')
2024-07-25 15:54:59,955:INFO:create_model() successfully completed......................................
2024-07-25 15:55:00,044:INFO:Threshold: 0.84375. Accuracy: 0.6724
2024-07-25 15:55:00,044:INFO:Initializing create_model()
2024-07-25 15:55:00,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.9375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:00,044:INFO:Checking exceptions
2024-07-25 15:55:00,044:INFO:Importing libraries
2024-07-25 15:55:00,044:INFO:Copying training dataset
2024-07-25 15:55:00,060:INFO:Defining folds
2024-07-25 15:55:00,060:INFO:Declaring metric variables
2024-07-25 15:55:00,060:INFO:Importing untrained model
2024-07-25 15:55:00,060:INFO:Declaring custom model
2024-07-25 15:55:00,060:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:00,060:INFO:Starting cross validation
2024-07-25 15:55:00,060:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:00,555:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:00,774:INFO:Calculating mean and std
2024-07-25 15:55:00,775:INFO:Creating metrics dataframe
2024-07-25 15:55:00,775:INFO:Finalizing model
2024-07-25 15:55:00,810:INFO:Uploading results into container
2024-07-25 15:55:00,810:INFO:Uploading model into container now
2024-07-25 15:55:00,810:INFO:_master_model_container: 23
2024-07-25 15:55:00,810:INFO:_display_container: 3
2024-07-25 15:55:00,810:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.9375,
                                     weights='uniform')
2024-07-25 15:55:00,810:INFO:create_model() successfully completed......................................
2024-07-25 15:55:00,908:INFO:Threshold: 0.9375. Accuracy: 0.6724
2024-07-25 15:55:00,908:INFO:Initializing create_model()
2024-07-25 15:55:00,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:00,908:INFO:Checking exceptions
2024-07-25 15:55:00,908:INFO:Importing libraries
2024-07-25 15:55:00,908:INFO:Copying training dataset
2024-07-25 15:55:00,924:INFO:Defining folds
2024-07-25 15:55:00,926:INFO:Declaring metric variables
2024-07-25 15:55:00,927:INFO:Importing untrained model
2024-07-25 15:55:00,927:INFO:Declaring custom model
2024-07-25 15:55:00,928:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:00,928:INFO:Starting cross validation
2024-07-25 15:55:00,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:01,719:INFO:Calculating mean and std
2024-07-25 15:55:01,719:INFO:Creating metrics dataframe
2024-07-25 15:55:01,719:INFO:Finalizing model
2024-07-25 15:55:01,735:INFO:Uploading results into container
2024-07-25 15:55:01,750:INFO:Uploading model into container now
2024-07-25 15:55:01,750:INFO:_master_model_container: 24
2024-07-25 15:55:01,750:INFO:_display_container: 3
2024-07-25 15:55:01,750:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.0625,
                                     weights='uniform')
2024-07-25 15:55:01,750:INFO:create_model() successfully completed......................................
2024-07-25 15:55:01,828:INFO:Threshold: 0.0625. Accuracy: 0.5456
2024-07-25 15:55:01,844:INFO:Initializing create_model()
2024-07-25 15:55:01,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.96875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:01,844:INFO:Checking exceptions
2024-07-25 15:55:01,844:INFO:Importing libraries
2024-07-25 15:55:01,844:INFO:Copying training dataset
2024-07-25 15:55:01,860:INFO:Defining folds
2024-07-25 15:55:01,860:INFO:Declaring metric variables
2024-07-25 15:55:01,860:INFO:Importing untrained model
2024-07-25 15:55:01,860:INFO:Declaring custom model
2024-07-25 15:55:01,860:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:01,860:INFO:Starting cross validation
2024-07-25 15:55:01,860:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:02,358:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:02,574:INFO:Calculating mean and std
2024-07-25 15:55:02,574:INFO:Creating metrics dataframe
2024-07-25 15:55:02,574:INFO:Finalizing model
2024-07-25 15:55:02,609:INFO:Uploading results into container
2024-07-25 15:55:02,609:INFO:Uploading model into container now
2024-07-25 15:55:02,609:INFO:_master_model_container: 25
2024-07-25 15:55:02,609:INFO:_display_container: 3
2024-07-25 15:55:02,609:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.96875,
                                     weights='uniform')
2024-07-25 15:55:02,609:INFO:create_model() successfully completed......................................
2024-07-25 15:55:02,687:INFO:Threshold: 0.96875. Accuracy: 0.6724
2024-07-25 15:55:02,705:INFO:Initializing create_model()
2024-07-25 15:55:02,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.484375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:02,705:INFO:Checking exceptions
2024-07-25 15:55:02,705:INFO:Importing libraries
2024-07-25 15:55:02,705:INFO:Copying training dataset
2024-07-25 15:55:02,727:INFO:Defining folds
2024-07-25 15:55:02,727:INFO:Declaring metric variables
2024-07-25 15:55:02,727:INFO:Importing untrained model
2024-07-25 15:55:02,727:INFO:Declaring custom model
2024-07-25 15:55:02,727:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:02,727:INFO:Starting cross validation
2024-07-25 15:55:02,727:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:03,437:INFO:Calculating mean and std
2024-07-25 15:55:03,437:INFO:Creating metrics dataframe
2024-07-25 15:55:03,437:INFO:Finalizing model
2024-07-25 15:55:03,473:INFO:Uploading results into container
2024-07-25 15:55:03,473:INFO:Uploading model into container now
2024-07-25 15:55:03,473:INFO:_master_model_container: 26
2024-07-25 15:55:03,473:INFO:_display_container: 3
2024-07-25 15:55:03,473:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.484375,
                                     weights='uniform')
2024-07-25 15:55:03,473:INFO:create_model() successfully completed......................................
2024-07-25 15:55:03,553:INFO:Threshold: 0.484375. Accuracy: 0.6984
2024-07-25 15:55:03,553:INFO:Initializing create_model()
2024-07-25 15:55:03,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.53125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:03,553:INFO:Checking exceptions
2024-07-25 15:55:03,574:INFO:Importing libraries
2024-07-25 15:55:03,574:INFO:Copying training dataset
2024-07-25 15:55:03,574:INFO:Defining folds
2024-07-25 15:55:03,574:INFO:Declaring metric variables
2024-07-25 15:55:03,574:INFO:Importing untrained model
2024-07-25 15:55:03,574:INFO:Declaring custom model
2024-07-25 15:55:03,574:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:03,574:INFO:Starting cross validation
2024-07-25 15:55:03,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:04,269:INFO:Calculating mean and std
2024-07-25 15:55:04,269:INFO:Creating metrics dataframe
2024-07-25 15:55:04,269:INFO:Finalizing model
2024-07-25 15:55:04,302:INFO:Uploading results into container
2024-07-25 15:55:04,302:INFO:Uploading model into container now
2024-07-25 15:55:04,302:INFO:_master_model_container: 27
2024-07-25 15:55:04,302:INFO:_display_container: 3
2024-07-25 15:55:04,302:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.53125,
                                     weights='uniform')
2024-07-25 15:55:04,302:INFO:create_model() successfully completed......................................
2024-07-25 15:55:04,385:INFO:Threshold: 0.53125. Accuracy: 0.6984
2024-07-25 15:55:04,385:INFO:Initializing create_model()
2024-07-25 15:55:04,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.546875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:04,385:INFO:Checking exceptions
2024-07-25 15:55:04,385:INFO:Importing libraries
2024-07-25 15:55:04,385:INFO:Copying training dataset
2024-07-25 15:55:04,402:INFO:Defining folds
2024-07-25 15:55:04,402:INFO:Declaring metric variables
2024-07-25 15:55:04,402:INFO:Importing untrained model
2024-07-25 15:55:04,402:INFO:Declaring custom model
2024-07-25 15:55:04,402:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:04,402:INFO:Starting cross validation
2024-07-25 15:55:04,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:05,184:INFO:Calculating mean and std
2024-07-25 15:55:05,184:INFO:Creating metrics dataframe
2024-07-25 15:55:05,192:INFO:Finalizing model
2024-07-25 15:55:05,221:INFO:Uploading results into container
2024-07-25 15:55:05,221:INFO:Uploading model into container now
2024-07-25 15:55:05,221:INFO:_master_model_container: 28
2024-07-25 15:55:05,221:INFO:_display_container: 3
2024-07-25 15:55:05,221:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.546875,
                                     weights='uniform')
2024-07-25 15:55:05,221:INFO:create_model() successfully completed......................................
2024-07-25 15:55:05,301:INFO:Threshold: 0.546875. Accuracy: 0.6984
2024-07-25 15:55:05,301:INFO:Initializing create_model()
2024-07-25 15:55:05,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.609375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:05,301:INFO:Checking exceptions
2024-07-25 15:55:05,319:INFO:Importing libraries
2024-07-25 15:55:05,319:INFO:Copying training dataset
2024-07-25 15:55:05,321:INFO:Defining folds
2024-07-25 15:55:05,321:INFO:Declaring metric variables
2024-07-25 15:55:05,321:INFO:Importing untrained model
2024-07-25 15:55:05,321:INFO:Declaring custom model
2024-07-25 15:55:05,321:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:05,321:INFO:Starting cross validation
2024-07-25 15:55:05,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:06,075:INFO:Calculating mean and std
2024-07-25 15:55:06,075:INFO:Creating metrics dataframe
2024-07-25 15:55:06,075:INFO:Finalizing model
2024-07-25 15:55:06,120:INFO:Uploading results into container
2024-07-25 15:55:06,120:INFO:Uploading model into container now
2024-07-25 15:55:06,120:INFO:_master_model_container: 29
2024-07-25 15:55:06,120:INFO:_display_container: 3
2024-07-25 15:55:06,120:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.609375,
                                     weights='uniform')
2024-07-25 15:55:06,120:INFO:create_model() successfully completed......................................
2024-07-25 15:55:06,221:INFO:Threshold: 0.609375. Accuracy: 0.7077
2024-07-25 15:55:06,221:INFO:Initializing create_model()
2024-07-25 15:55:06,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.671875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:06,221:INFO:Checking exceptions
2024-07-25 15:55:06,233:INFO:Importing libraries
2024-07-25 15:55:06,233:INFO:Copying training dataset
2024-07-25 15:55:06,233:INFO:Defining folds
2024-07-25 15:55:06,233:INFO:Declaring metric variables
2024-07-25 15:55:06,233:INFO:Importing untrained model
2024-07-25 15:55:06,233:INFO:Declaring custom model
2024-07-25 15:55:06,233:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:06,233:INFO:Starting cross validation
2024-07-25 15:55:06,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:07,169:INFO:Calculating mean and std
2024-07-25 15:55:07,170:INFO:Creating metrics dataframe
2024-07-25 15:55:07,170:INFO:Finalizing model
2024-07-25 15:55:07,202:INFO:Uploading results into container
2024-07-25 15:55:07,202:INFO:Uploading model into container now
2024-07-25 15:55:07,202:INFO:_master_model_container: 30
2024-07-25 15:55:07,202:INFO:_display_container: 3
2024-07-25 15:55:07,218:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.671875,
                                     weights='uniform')
2024-07-25 15:55:07,218:INFO:create_model() successfully completed......................................
2024-07-25 15:55:07,302:INFO:Threshold: 0.671875. Accuracy: 0.7077
2024-07-25 15:55:07,302:INFO:Initializing create_model()
2024-07-25 15:55:07,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.78125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:07,302:INFO:Checking exceptions
2024-07-25 15:55:07,302:INFO:Importing libraries
2024-07-25 15:55:07,302:INFO:Copying training dataset
2024-07-25 15:55:07,317:INFO:Defining folds
2024-07-25 15:55:07,317:INFO:Declaring metric variables
2024-07-25 15:55:07,317:INFO:Importing untrained model
2024-07-25 15:55:07,317:INFO:Declaring custom model
2024-07-25 15:55:07,317:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:07,317:INFO:Starting cross validation
2024-07-25 15:55:07,317:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:08,038:INFO:Calculating mean and std
2024-07-25 15:55:08,038:INFO:Creating metrics dataframe
2024-07-25 15:55:08,038:INFO:Finalizing model
2024-07-25 15:55:08,067:INFO:Uploading results into container
2024-07-25 15:55:08,067:INFO:Uploading model into container now
2024-07-25 15:55:08,067:INFO:_master_model_container: 31
2024-07-25 15:55:08,067:INFO:_display_container: 3
2024-07-25 15:55:08,067:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.78125,
                                     weights='uniform')
2024-07-25 15:55:08,067:INFO:create_model() successfully completed......................................
2024-07-25 15:55:08,151:INFO:Threshold: 0.78125. Accuracy: 0.7077
2024-07-25 15:55:08,151:INFO:Initializing create_model()
2024-07-25 15:55:08,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.03125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:08,151:INFO:Checking exceptions
2024-07-25 15:55:08,151:INFO:Importing libraries
2024-07-25 15:55:08,151:INFO:Copying training dataset
2024-07-25 15:55:08,167:INFO:Defining folds
2024-07-25 15:55:08,167:INFO:Declaring metric variables
2024-07-25 15:55:08,167:INFO:Importing untrained model
2024-07-25 15:55:08,167:INFO:Declaring custom model
2024-07-25 15:55:08,167:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:08,167:INFO:Starting cross validation
2024-07-25 15:55:08,167:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:08,881:INFO:Calculating mean and std
2024-07-25 15:55:08,883:INFO:Creating metrics dataframe
2024-07-25 15:55:08,884:INFO:Finalizing model
2024-07-25 15:55:08,900:INFO:Uploading results into container
2024-07-25 15:55:08,900:INFO:Uploading model into container now
2024-07-25 15:55:08,900:INFO:_master_model_container: 32
2024-07-25 15:55:08,900:INFO:_display_container: 3
2024-07-25 15:55:08,918:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.03125,
                                     weights='uniform')
2024-07-25 15:55:08,918:INFO:create_model() successfully completed......................................
2024-07-25 15:55:09,000:INFO:Threshold: 0.03125. Accuracy: 0.5456
2024-07-25 15:55:09,000:INFO:Initializing create_model()
2024-07-25 15:55:09,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:09,000:INFO:Checking exceptions
2024-07-25 15:55:09,000:INFO:Importing libraries
2024-07-25 15:55:09,000:INFO:Copying training dataset
2024-07-25 15:55:09,000:INFO:Defining folds
2024-07-25 15:55:09,000:INFO:Declaring metric variables
2024-07-25 15:55:09,000:INFO:Importing untrained model
2024-07-25 15:55:09,016:INFO:Declaring custom model
2024-07-25 15:55:09,018:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:09,019:INFO:Starting cross validation
2024-07-25 15:55:09,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:09,681:INFO:Calculating mean and std
2024-07-25 15:55:09,684:INFO:Creating metrics dataframe
2024-07-25 15:55:09,687:INFO:Finalizing model
2024-07-25 15:55:09,716:INFO:Uploading results into container
2024-07-25 15:55:09,716:INFO:Uploading model into container now
2024-07-25 15:55:09,716:INFO:_master_model_container: 33
2024-07-25 15:55:09,716:INFO:_display_container: 3
2024-07-25 15:55:09,716:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.734375,
                                     weights='uniform')
2024-07-25 15:55:09,716:INFO:create_model() successfully completed......................................
2024-07-25 15:55:09,817:INFO:Threshold: 0.734375. Accuracy: 0.7077
2024-07-25 15:55:09,817:INFO:Initializing create_model()
2024-07-25 15:55:09,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.65625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:09,817:INFO:Checking exceptions
2024-07-25 15:55:09,817:INFO:Importing libraries
2024-07-25 15:55:09,817:INFO:Copying training dataset
2024-07-25 15:55:09,833:INFO:Defining folds
2024-07-25 15:55:09,833:INFO:Declaring metric variables
2024-07-25 15:55:09,833:INFO:Importing untrained model
2024-07-25 15:55:09,833:INFO:Declaring custom model
2024-07-25 15:55:09,833:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:09,833:INFO:Starting cross validation
2024-07-25 15:55:09,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:10,504:INFO:Calculating mean and std
2024-07-25 15:55:10,504:INFO:Creating metrics dataframe
2024-07-25 15:55:10,504:INFO:Finalizing model
2024-07-25 15:55:10,535:INFO:Uploading results into container
2024-07-25 15:55:10,535:INFO:Uploading model into container now
2024-07-25 15:55:10,535:INFO:_master_model_container: 34
2024-07-25 15:55:10,535:INFO:_display_container: 3
2024-07-25 15:55:10,535:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.65625,
                                     weights='uniform')
2024-07-25 15:55:10,535:INFO:create_model() successfully completed......................................
2024-07-25 15:55:10,616:INFO:Threshold: 0.65625. Accuracy: 0.7077
2024-07-25 15:55:10,616:INFO:Initializing create_model()
2024-07-25 15:55:10,616:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.796875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:10,616:INFO:Checking exceptions
2024-07-25 15:55:10,632:INFO:Importing libraries
2024-07-25 15:55:10,632:INFO:Copying training dataset
2024-07-25 15:55:10,632:INFO:Defining folds
2024-07-25 15:55:10,632:INFO:Declaring metric variables
2024-07-25 15:55:10,632:INFO:Importing untrained model
2024-07-25 15:55:10,632:INFO:Declaring custom model
2024-07-25 15:55:10,632:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:10,632:INFO:Starting cross validation
2024-07-25 15:55:10,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:11,300:INFO:Calculating mean and std
2024-07-25 15:55:11,300:INFO:Creating metrics dataframe
2024-07-25 15:55:11,300:INFO:Finalizing model
2024-07-25 15:55:11,316:INFO:Uploading results into container
2024-07-25 15:55:11,316:INFO:Uploading model into container now
2024-07-25 15:55:11,316:INFO:_master_model_container: 35
2024-07-25 15:55:11,331:INFO:_display_container: 3
2024-07-25 15:55:11,331:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.796875,
                                     weights='uniform')
2024-07-25 15:55:11,331:INFO:create_model() successfully completed......................................
2024-07-25 15:55:11,411:INFO:Threshold: 0.796875. Accuracy: 0.7077
2024-07-25 15:55:11,411:INFO:Initializing create_model()
2024-07-25 15:55:11,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.859375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:11,411:INFO:Checking exceptions
2024-07-25 15:55:11,411:INFO:Importing libraries
2024-07-25 15:55:11,411:INFO:Copying training dataset
2024-07-25 15:55:11,431:INFO:Defining folds
2024-07-25 15:55:11,431:INFO:Declaring metric variables
2024-07-25 15:55:11,431:INFO:Importing untrained model
2024-07-25 15:55:11,431:INFO:Declaring custom model
2024-07-25 15:55:11,431:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:11,431:INFO:Starting cross validation
2024-07-25 15:55:11,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:11,894:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:12,111:INFO:Calculating mean and std
2024-07-25 15:55:12,111:INFO:Creating metrics dataframe
2024-07-25 15:55:12,111:INFO:Finalizing model
2024-07-25 15:55:12,147:INFO:Uploading results into container
2024-07-25 15:55:12,147:INFO:Uploading model into container now
2024-07-25 15:55:12,147:INFO:_master_model_container: 36
2024-07-25 15:55:12,147:INFO:_display_container: 3
2024-07-25 15:55:12,147:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.859375,
                                     weights='uniform')
2024-07-25 15:55:12,147:INFO:create_model() successfully completed......................................
2024-07-25 15:55:12,227:INFO:Threshold: 0.859375. Accuracy: 0.6724
2024-07-25 15:55:12,227:INFO:Initializing create_model()
2024-07-25 15:55:12,227:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.90625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:12,227:INFO:Checking exceptions
2024-07-25 15:55:12,246:INFO:Importing libraries
2024-07-25 15:55:12,246:INFO:Copying training dataset
2024-07-25 15:55:12,248:INFO:Defining folds
2024-07-25 15:55:12,248:INFO:Declaring metric variables
2024-07-25 15:55:12,248:INFO:Importing untrained model
2024-07-25 15:55:12,248:INFO:Declaring custom model
2024-07-25 15:55:12,248:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:12,248:INFO:Starting cross validation
2024-07-25 15:55:12,248:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:12,731:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:12,945:INFO:Calculating mean and std
2024-07-25 15:55:12,945:INFO:Creating metrics dataframe
2024-07-25 15:55:12,945:INFO:Finalizing model
2024-07-25 15:55:12,976:INFO:Uploading results into container
2024-07-25 15:55:12,976:INFO:Uploading model into container now
2024-07-25 15:55:12,976:INFO:_master_model_container: 37
2024-07-25 15:55:12,976:INFO:_display_container: 3
2024-07-25 15:55:12,976:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.90625,
                                     weights='uniform')
2024-07-25 15:55:12,976:INFO:create_model() successfully completed......................................
2024-07-25 15:55:13,071:INFO:Threshold: 0.90625. Accuracy: 0.6724
2024-07-25 15:55:13,071:INFO:Initializing create_model()
2024-07-25 15:55:13,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.921875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:13,071:INFO:Checking exceptions
2024-07-25 15:55:13,071:INFO:Importing libraries
2024-07-25 15:55:13,071:INFO:Copying training dataset
2024-07-25 15:55:13,086:INFO:Defining folds
2024-07-25 15:55:13,086:INFO:Declaring metric variables
2024-07-25 15:55:13,086:INFO:Importing untrained model
2024-07-25 15:55:13,086:INFO:Declaring custom model
2024-07-25 15:55:13,086:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:13,086:INFO:Starting cross validation
2024-07-25 15:55:13,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:13,510:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:13,778:INFO:Calculating mean and std
2024-07-25 15:55:13,778:INFO:Creating metrics dataframe
2024-07-25 15:55:13,778:INFO:Finalizing model
2024-07-25 15:55:13,809:INFO:Uploading results into container
2024-07-25 15:55:13,809:INFO:Uploading model into container now
2024-07-25 15:55:13,809:INFO:_master_model_container: 38
2024-07-25 15:55:13,809:INFO:_display_container: 3
2024-07-25 15:55:13,809:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.921875,
                                     weights='uniform')
2024-07-25 15:55:13,809:INFO:create_model() successfully completed......................................
2024-07-25 15:55:13,911:INFO:Threshold: 0.921875. Accuracy: 0.6724
2024-07-25 15:55:13,911:INFO:Initializing create_model()
2024-07-25 15:55:13,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.984375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:13,911:INFO:Checking exceptions
2024-07-25 15:55:13,911:INFO:Importing libraries
2024-07-25 15:55:13,911:INFO:Copying training dataset
2024-07-25 15:55:13,911:INFO:Defining folds
2024-07-25 15:55:13,911:INFO:Declaring metric variables
2024-07-25 15:55:13,911:INFO:Importing untrained model
2024-07-25 15:55:13,911:INFO:Declaring custom model
2024-07-25 15:55:13,927:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:13,927:INFO:Starting cross validation
2024-07-25 15:55:13,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:14,410:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:14,645:INFO:Calculating mean and std
2024-07-25 15:55:14,645:INFO:Creating metrics dataframe
2024-07-25 15:55:14,645:INFO:Finalizing model
2024-07-25 15:55:14,678:INFO:Uploading results into container
2024-07-25 15:55:14,678:INFO:Uploading model into container now
2024-07-25 15:55:14,678:INFO:_master_model_container: 39
2024-07-25 15:55:14,678:INFO:_display_container: 3
2024-07-25 15:55:14,678:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.984375,
                                     weights='uniform')
2024-07-25 15:55:14,678:INFO:create_model() successfully completed......................................
2024-07-25 15:55:14,764:INFO:Threshold: 0.984375. Accuracy: 0.6724
2024-07-25 15:55:14,764:INFO:Initializing create_model()
2024-07-25 15:55:14,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.15625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:14,764:INFO:Checking exceptions
2024-07-25 15:55:14,764:INFO:Importing libraries
2024-07-25 15:55:14,764:INFO:Copying training dataset
2024-07-25 15:55:14,780:INFO:Defining folds
2024-07-25 15:55:14,780:INFO:Declaring metric variables
2024-07-25 15:55:14,780:INFO:Importing untrained model
2024-07-25 15:55:14,780:INFO:Declaring custom model
2024-07-25 15:55:14,780:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:14,780:INFO:Starting cross validation
2024-07-25 15:55:14,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:15,628:INFO:Calculating mean and std
2024-07-25 15:55:15,628:INFO:Creating metrics dataframe
2024-07-25 15:55:15,628:INFO:Finalizing model
2024-07-25 15:55:15,661:INFO:Uploading results into container
2024-07-25 15:55:15,661:INFO:Uploading model into container now
2024-07-25 15:55:15,661:INFO:_master_model_container: 40
2024-07-25 15:55:15,661:INFO:_display_container: 3
2024-07-25 15:55:15,661:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.15625,
                                     weights='uniform')
2024-07-25 15:55:15,661:INFO:create_model() successfully completed......................................
2024-07-25 15:55:15,760:INFO:Threshold: 0.15625. Accuracy: 0.5456
2024-07-25 15:55:15,760:INFO:Initializing create_model()
2024-07-25 15:55:15,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.046875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:15,760:INFO:Checking exceptions
2024-07-25 15:55:15,760:INFO:Importing libraries
2024-07-25 15:55:15,760:INFO:Copying training dataset
2024-07-25 15:55:15,775:INFO:Defining folds
2024-07-25 15:55:15,775:INFO:Declaring metric variables
2024-07-25 15:55:15,775:INFO:Importing untrained model
2024-07-25 15:55:15,775:INFO:Declaring custom model
2024-07-25 15:55:15,775:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:15,775:INFO:Starting cross validation
2024-07-25 15:55:15,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:16,479:INFO:Calculating mean and std
2024-07-25 15:55:16,479:INFO:Creating metrics dataframe
2024-07-25 15:55:16,479:INFO:Finalizing model
2024-07-25 15:55:16,508:INFO:Uploading results into container
2024-07-25 15:55:16,508:INFO:Uploading model into container now
2024-07-25 15:55:16,508:INFO:_master_model_container: 41
2024-07-25 15:55:16,508:INFO:_display_container: 3
2024-07-25 15:55:16,508:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.046875,
                                     weights='uniform')
2024-07-25 15:55:16,508:INFO:create_model() successfully completed......................................
2024-07-25 15:55:16,609:INFO:Threshold: 0.046875. Accuracy: 0.5456
2024-07-25 15:55:16,610:INFO:Initializing create_model()
2024-07-25 15:55:16,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.171875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:16,610:INFO:Checking exceptions
2024-07-25 15:55:16,614:INFO:Importing libraries
2024-07-25 15:55:16,614:INFO:Copying training dataset
2024-07-25 15:55:16,620:INFO:Defining folds
2024-07-25 15:55:16,620:INFO:Declaring metric variables
2024-07-25 15:55:16,620:INFO:Importing untrained model
2024-07-25 15:55:16,620:INFO:Declaring custom model
2024-07-25 15:55:16,620:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:16,620:INFO:Starting cross validation
2024-07-25 15:55:16,620:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:17,313:INFO:Calculating mean and std
2024-07-25 15:55:17,313:INFO:Creating metrics dataframe
2024-07-25 15:55:17,313:INFO:Finalizing model
2024-07-25 15:55:17,341:INFO:Uploading results into container
2024-07-25 15:55:17,341:INFO:Uploading model into container now
2024-07-25 15:55:17,341:INFO:_master_model_container: 42
2024-07-25 15:55:17,341:INFO:_display_container: 3
2024-07-25 15:55:17,341:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.171875,
                                     weights='uniform')
2024-07-25 15:55:17,341:INFO:create_model() successfully completed......................................
2024-07-25 15:55:17,442:INFO:Threshold: 0.171875. Accuracy: 0.5456
2024-07-25 15:55:17,442:INFO:Initializing create_model()
2024-07-25 15:55:17,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.109375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:17,442:INFO:Checking exceptions
2024-07-25 15:55:17,442:INFO:Importing libraries
2024-07-25 15:55:17,442:INFO:Copying training dataset
2024-07-25 15:55:17,458:INFO:Defining folds
2024-07-25 15:55:17,458:INFO:Declaring metric variables
2024-07-25 15:55:17,458:INFO:Importing untrained model
2024-07-25 15:55:17,458:INFO:Declaring custom model
2024-07-25 15:55:17,458:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:17,458:INFO:Starting cross validation
2024-07-25 15:55:17,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:18,141:INFO:Calculating mean and std
2024-07-25 15:55:18,143:INFO:Creating metrics dataframe
2024-07-25 15:55:18,145:INFO:Finalizing model
2024-07-25 15:55:18,174:INFO:Uploading results into container
2024-07-25 15:55:18,177:INFO:Uploading model into container now
2024-07-25 15:55:18,177:INFO:_master_model_container: 43
2024-07-25 15:55:18,177:INFO:_display_container: 3
2024-07-25 15:55:18,177:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.109375,
                                     weights='uniform')
2024-07-25 15:55:18,177:INFO:create_model() successfully completed......................................
2024-07-25 15:55:18,273:INFO:Threshold: 0.109375. Accuracy: 0.5456
2024-07-25 15:55:18,273:INFO:Initializing create_model()
2024-07-25 15:55:18,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:18,273:INFO:Checking exceptions
2024-07-25 15:55:18,273:INFO:Importing libraries
2024-07-25 15:55:18,273:INFO:Copying training dataset
2024-07-25 15:55:18,273:INFO:Defining folds
2024-07-25 15:55:18,289:INFO:Declaring metric variables
2024-07-25 15:55:18,289:INFO:Importing untrained model
2024-07-25 15:55:18,289:INFO:Declaring custom model
2024-07-25 15:55:18,289:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:18,289:INFO:Starting cross validation
2024-07-25 15:55:18,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:19,127:INFO:Calculating mean and std
2024-07-25 15:55:19,131:INFO:Creating metrics dataframe
2024-07-25 15:55:19,133:INFO:Finalizing model
2024-07-25 15:55:19,148:INFO:Uploading results into container
2024-07-25 15:55:19,148:INFO:Uploading model into container now
2024-07-25 15:55:19,148:INFO:_master_model_container: 44
2024-07-25 15:55:19,148:INFO:_display_container: 3
2024-07-25 15:55:19,164:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.234375,
                                     weights='uniform')
2024-07-25 15:55:19,164:INFO:create_model() successfully completed......................................
2024-07-25 15:55:19,239:INFO:Threshold: 0.234375. Accuracy: 0.6666
2024-07-25 15:55:19,239:INFO:Initializing create_model()
2024-07-25 15:55:19,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.28125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:19,239:INFO:Checking exceptions
2024-07-25 15:55:19,253:INFO:Importing libraries
2024-07-25 15:55:19,253:INFO:Copying training dataset
2024-07-25 15:55:19,269:INFO:Defining folds
2024-07-25 15:55:19,269:INFO:Declaring metric variables
2024-07-25 15:55:19,269:INFO:Importing untrained model
2024-07-25 15:55:19,269:INFO:Declaring custom model
2024-07-25 15:55:19,269:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:19,269:INFO:Starting cross validation
2024-07-25 15:55:19,269:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:19,946:INFO:Calculating mean and std
2024-07-25 15:55:19,947:INFO:Creating metrics dataframe
2024-07-25 15:55:19,953:INFO:Finalizing model
2024-07-25 15:55:19,968:INFO:Uploading results into container
2024-07-25 15:55:19,968:INFO:Uploading model into container now
2024-07-25 15:55:19,968:INFO:_master_model_container: 45
2024-07-25 15:55:19,968:INFO:_display_container: 3
2024-07-25 15:55:19,968:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.28125,
                                     weights='uniform')
2024-07-25 15:55:19,968:INFO:create_model() successfully completed......................................
2024-07-25 15:55:20,055:INFO:Threshold: 0.28125. Accuracy: 0.6666
2024-07-25 15:55:20,055:INFO:Initializing create_model()
2024-07-25 15:55:20,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.296875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:20,055:INFO:Checking exceptions
2024-07-25 15:55:20,055:INFO:Importing libraries
2024-07-25 15:55:20,055:INFO:Copying training dataset
2024-07-25 15:55:20,068:INFO:Defining folds
2024-07-25 15:55:20,068:INFO:Declaring metric variables
2024-07-25 15:55:20,068:INFO:Importing untrained model
2024-07-25 15:55:20,068:INFO:Declaring custom model
2024-07-25 15:55:20,068:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:20,068:INFO:Starting cross validation
2024-07-25 15:55:20,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:20,751:INFO:Calculating mean and std
2024-07-25 15:55:20,751:INFO:Creating metrics dataframe
2024-07-25 15:55:20,751:INFO:Finalizing model
2024-07-25 15:55:20,786:INFO:Uploading results into container
2024-07-25 15:55:20,786:INFO:Uploading model into container now
2024-07-25 15:55:20,786:INFO:_master_model_container: 46
2024-07-25 15:55:20,786:INFO:_display_container: 3
2024-07-25 15:55:20,786:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.296875,
                                     weights='uniform')
2024-07-25 15:55:20,786:INFO:create_model() successfully completed......................................
2024-07-25 15:55:20,868:INFO:Threshold: 0.296875. Accuracy: 0.6666
2024-07-25 15:55:20,884:INFO:Initializing create_model()
2024-07-25 15:55:20,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.359375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:20,884:INFO:Checking exceptions
2024-07-25 15:55:20,884:INFO:Importing libraries
2024-07-25 15:55:20,884:INFO:Copying training dataset
2024-07-25 15:55:20,902:INFO:Defining folds
2024-07-25 15:55:20,902:INFO:Declaring metric variables
2024-07-25 15:55:20,903:INFO:Importing untrained model
2024-07-25 15:55:20,903:INFO:Declaring custom model
2024-07-25 15:55:20,906:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:20,906:INFO:Starting cross validation
2024-07-25 15:55:20,906:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:21,567:INFO:Calculating mean and std
2024-07-25 15:55:21,567:INFO:Creating metrics dataframe
2024-07-25 15:55:21,567:INFO:Finalizing model
2024-07-25 15:55:21,600:INFO:Uploading results into container
2024-07-25 15:55:21,600:INFO:Uploading model into container now
2024-07-25 15:55:21,600:INFO:_master_model_container: 47
2024-07-25 15:55:21,600:INFO:_display_container: 3
2024-07-25 15:55:21,600:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.359375,
                                     weights='uniform')
2024-07-25 15:55:21,600:INFO:create_model() successfully completed......................................
2024-07-25 15:55:21,683:INFO:Threshold: 0.359375. Accuracy: 0.6666
2024-07-25 15:55:21,683:INFO:Initializing create_model()
2024-07-25 15:55:21,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.40625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:21,683:INFO:Checking exceptions
2024-07-25 15:55:21,700:INFO:Importing libraries
2024-07-25 15:55:21,700:INFO:Copying training dataset
2024-07-25 15:55:21,700:INFO:Defining folds
2024-07-25 15:55:21,700:INFO:Declaring metric variables
2024-07-25 15:55:21,700:INFO:Importing untrained model
2024-07-25 15:55:21,700:INFO:Declaring custom model
2024-07-25 15:55:21,700:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:21,700:INFO:Starting cross validation
2024-07-25 15:55:21,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:22,366:INFO:Calculating mean and std
2024-07-25 15:55:22,368:INFO:Creating metrics dataframe
2024-07-25 15:55:22,370:INFO:Finalizing model
2024-07-25 15:55:22,400:INFO:Uploading results into container
2024-07-25 15:55:22,401:INFO:Uploading model into container now
2024-07-25 15:55:22,403:INFO:_master_model_container: 48
2024-07-25 15:55:22,403:INFO:_display_container: 3
2024-07-25 15:55:22,403:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.40625,
                                     weights='uniform')
2024-07-25 15:55:22,403:INFO:create_model() successfully completed......................................
2024-07-25 15:55:22,483:INFO:Threshold: 0.40625. Accuracy: 0.6984
2024-07-25 15:55:22,483:INFO:Initializing create_model()
2024-07-25 15:55:22,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.421875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:22,483:INFO:Checking exceptions
2024-07-25 15:55:22,499:INFO:Importing libraries
2024-07-25 15:55:22,499:INFO:Copying training dataset
2024-07-25 15:55:22,499:INFO:Defining folds
2024-07-25 15:55:22,499:INFO:Declaring metric variables
2024-07-25 15:55:22,499:INFO:Importing untrained model
2024-07-25 15:55:22,499:INFO:Declaring custom model
2024-07-25 15:55:22,515:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:22,516:INFO:Starting cross validation
2024-07-25 15:55:22,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:23,182:INFO:Calculating mean and std
2024-07-25 15:55:23,182:INFO:Creating metrics dataframe
2024-07-25 15:55:23,182:INFO:Finalizing model
2024-07-25 15:55:23,215:INFO:Uploading results into container
2024-07-25 15:55:23,215:INFO:Uploading model into container now
2024-07-25 15:55:23,215:INFO:_master_model_container: 49
2024-07-25 15:55:23,215:INFO:_display_container: 3
2024-07-25 15:55:23,215:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.421875,
                                     weights='uniform')
2024-07-25 15:55:23,215:INFO:create_model() successfully completed......................................
2024-07-25 15:55:23,298:INFO:Threshold: 0.421875. Accuracy: 0.6984
2024-07-25 15:55:23,298:INFO:Initializing create_model()
2024-07-25 15:55:23,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.765625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:23,298:INFO:Checking exceptions
2024-07-25 15:55:23,298:INFO:Importing libraries
2024-07-25 15:55:23,298:INFO:Copying training dataset
2024-07-25 15:55:23,315:INFO:Defining folds
2024-07-25 15:55:23,315:INFO:Declaring metric variables
2024-07-25 15:55:23,315:INFO:Importing untrained model
2024-07-25 15:55:23,315:INFO:Declaring custom model
2024-07-25 15:55:23,315:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:23,315:INFO:Starting cross validation
2024-07-25 15:55:23,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:24,007:INFO:Calculating mean and std
2024-07-25 15:55:24,008:INFO:Creating metrics dataframe
2024-07-25 15:55:24,012:INFO:Finalizing model
2024-07-25 15:55:24,031:INFO:Uploading results into container
2024-07-25 15:55:24,031:INFO:Uploading model into container now
2024-07-25 15:55:24,031:INFO:_master_model_container: 50
2024-07-25 15:55:24,031:INFO:_display_container: 3
2024-07-25 15:55:24,031:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.765625,
                                     weights='uniform')
2024-07-25 15:55:24,031:INFO:create_model() successfully completed......................................
2024-07-25 15:55:24,118:INFO:Threshold: 0.765625. Accuracy: 0.7077
2024-07-25 15:55:24,118:INFO:Initializing create_model()
2024-07-25 15:55:24,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.828125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:24,118:INFO:Checking exceptions
2024-07-25 15:55:24,118:INFO:Importing libraries
2024-07-25 15:55:24,118:INFO:Copying training dataset
2024-07-25 15:55:24,131:INFO:Defining folds
2024-07-25 15:55:24,131:INFO:Declaring metric variables
2024-07-25 15:55:24,131:INFO:Importing untrained model
2024-07-25 15:55:24,131:INFO:Declaring custom model
2024-07-25 15:55:24,131:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:24,131:INFO:Starting cross validation
2024-07-25 15:55:24,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:24,564:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:24,830:INFO:Calculating mean and std
2024-07-25 15:55:24,833:INFO:Creating metrics dataframe
2024-07-25 15:55:24,837:INFO:Finalizing model
2024-07-25 15:55:24,863:INFO:Uploading results into container
2024-07-25 15:55:24,863:INFO:Uploading model into container now
2024-07-25 15:55:24,863:INFO:_master_model_container: 51
2024-07-25 15:55:24,863:INFO:_display_container: 3
2024-07-25 15:55:24,880:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.828125,
                                     weights='uniform')
2024-07-25 15:55:24,880:INFO:create_model() successfully completed......................................
2024-07-25 15:55:24,963:INFO:Threshold: 0.828125. Accuracy: 0.6724
2024-07-25 15:55:24,963:INFO:Initializing create_model()
2024-07-25 15:55:24,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.890625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:24,963:INFO:Checking exceptions
2024-07-25 15:55:24,963:INFO:Importing libraries
2024-07-25 15:55:24,963:INFO:Copying training dataset
2024-07-25 15:55:24,963:INFO:Defining folds
2024-07-25 15:55:24,963:INFO:Declaring metric variables
2024-07-25 15:55:24,963:INFO:Importing untrained model
2024-07-25 15:55:24,963:INFO:Declaring custom model
2024-07-25 15:55:24,980:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:24,980:INFO:Starting cross validation
2024-07-25 15:55:24,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:25,463:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:25,662:INFO:Calculating mean and std
2024-07-25 15:55:25,662:INFO:Creating metrics dataframe
2024-07-25 15:55:25,662:INFO:Finalizing model
2024-07-25 15:55:25,695:INFO:Uploading results into container
2024-07-25 15:55:25,697:INFO:Uploading model into container now
2024-07-25 15:55:25,699:INFO:_master_model_container: 52
2024-07-25 15:55:25,699:INFO:_display_container: 3
2024-07-25 15:55:25,700:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.890625,
                                     weights='uniform')
2024-07-25 15:55:25,700:INFO:create_model() successfully completed......................................
2024-07-25 15:55:25,779:INFO:Threshold: 0.890625. Accuracy: 0.6724
2024-07-25 15:55:25,779:INFO:Initializing create_model()
2024-07-25 15:55:25,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.953125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:25,779:INFO:Checking exceptions
2024-07-25 15:55:25,779:INFO:Importing libraries
2024-07-25 15:55:25,779:INFO:Copying training dataset
2024-07-25 15:55:25,797:INFO:Defining folds
2024-07-25 15:55:25,797:INFO:Declaring metric variables
2024-07-25 15:55:25,798:INFO:Importing untrained model
2024-07-25 15:55:25,798:INFO:Declaring custom model
2024-07-25 15:55:25,799:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:25,800:INFO:Starting cross validation
2024-07-25 15:55:25,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:26,278:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:26,479:INFO:Calculating mean and std
2024-07-25 15:55:26,482:INFO:Creating metrics dataframe
2024-07-25 15:55:26,486:INFO:Finalizing model
2024-07-25 15:55:26,515:INFO:Uploading results into container
2024-07-25 15:55:26,515:INFO:Uploading model into container now
2024-07-25 15:55:26,515:INFO:_master_model_container: 53
2024-07-25 15:55:26,515:INFO:_display_container: 3
2024-07-25 15:55:26,515:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.953125,
                                     weights='uniform')
2024-07-25 15:55:26,515:INFO:create_model() successfully completed......................................
2024-07-25 15:55:26,611:INFO:Threshold: 0.953125. Accuracy: 0.6724
2024-07-25 15:55:26,613:INFO:Initializing create_model()
2024-07-25 15:55:26,613:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.3359375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:26,614:INFO:Checking exceptions
2024-07-25 15:55:26,615:INFO:Importing libraries
2024-07-25 15:55:26,615:INFO:Copying training dataset
2024-07-25 15:55:26,615:INFO:Defining folds
2024-07-25 15:55:26,615:INFO:Declaring metric variables
2024-07-25 15:55:26,615:INFO:Importing untrained model
2024-07-25 15:55:26,615:INFO:Declaring custom model
2024-07-25 15:55:26,615:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:26,628:INFO:Starting cross validation
2024-07-25 15:55:26,628:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:27,294:INFO:Calculating mean and std
2024-07-25 15:55:27,294:INFO:Creating metrics dataframe
2024-07-25 15:55:27,294:INFO:Finalizing model
2024-07-25 15:55:27,327:INFO:Uploading results into container
2024-07-25 15:55:27,329:INFO:Uploading model into container now
2024-07-25 15:55:27,330:INFO:_master_model_container: 54
2024-07-25 15:55:27,330:INFO:_display_container: 3
2024-07-25 15:55:27,334:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.3359375,
                                     weights='uniform')
2024-07-25 15:55:27,334:INFO:create_model() successfully completed......................................
2024-07-25 15:55:27,411:INFO:Threshold: 0.3359375. Accuracy: 0.6666
2024-07-25 15:55:27,411:INFO:Initializing create_model()
2024-07-25 15:55:27,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.390625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:27,411:INFO:Checking exceptions
2024-07-25 15:55:27,427:INFO:Importing libraries
2024-07-25 15:55:27,427:INFO:Copying training dataset
2024-07-25 15:55:27,427:INFO:Defining folds
2024-07-25 15:55:27,427:INFO:Declaring metric variables
2024-07-25 15:55:27,427:INFO:Importing untrained model
2024-07-25 15:55:27,427:INFO:Declaring custom model
2024-07-25 15:55:27,444:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:27,444:INFO:Starting cross validation
2024-07-25 15:55:27,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:28,160:INFO:Calculating mean and std
2024-07-25 15:55:28,160:INFO:Creating metrics dataframe
2024-07-25 15:55:28,160:INFO:Finalizing model
2024-07-25 15:55:28,191:INFO:Uploading results into container
2024-07-25 15:55:28,193:INFO:Uploading model into container now
2024-07-25 15:55:28,194:INFO:_master_model_container: 55
2024-07-25 15:55:28,195:INFO:_display_container: 3
2024-07-25 15:55:28,196:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.390625,
                                     weights='uniform')
2024-07-25 15:55:28,196:INFO:create_model() successfully completed......................................
2024-07-25 15:55:28,290:INFO:Threshold: 0.390625. Accuracy: 0.6666
2024-07-25 15:55:28,291:INFO:Initializing create_model()
2024-07-25 15:55:28,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.3984375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:28,292:INFO:Checking exceptions
2024-07-25 15:55:28,297:INFO:Importing libraries
2024-07-25 15:55:28,297:INFO:Copying training dataset
2024-07-25 15:55:28,297:INFO:Defining folds
2024-07-25 15:55:28,297:INFO:Declaring metric variables
2024-07-25 15:55:28,297:INFO:Importing untrained model
2024-07-25 15:55:28,297:INFO:Declaring custom model
2024-07-25 15:55:28,297:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:28,297:INFO:Starting cross validation
2024-07-25 15:55:28,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:28,975:INFO:Calculating mean and std
2024-07-25 15:55:28,976:INFO:Creating metrics dataframe
2024-07-25 15:55:28,980:INFO:Finalizing model
2024-07-25 15:55:28,992:INFO:Uploading results into container
2024-07-25 15:55:28,992:INFO:Uploading model into container now
2024-07-25 15:55:28,992:INFO:_master_model_container: 56
2024-07-25 15:55:28,992:INFO:_display_container: 3
2024-07-25 15:55:28,992:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.3984375,
                                     weights='uniform')
2024-07-25 15:55:28,992:INFO:create_model() successfully completed......................................
2024-07-25 15:55:29,090:INFO:Threshold: 0.3984375. Accuracy: 0.6666
2024-07-25 15:55:29,092:INFO:Initializing create_model()
2024-07-25 15:55:29,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.453125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:29,092:INFO:Checking exceptions
2024-07-25 15:55:29,092:INFO:Importing libraries
2024-07-25 15:55:29,092:INFO:Copying training dataset
2024-07-25 15:55:29,092:INFO:Defining folds
2024-07-25 15:55:29,092:INFO:Declaring metric variables
2024-07-25 15:55:29,092:INFO:Importing untrained model
2024-07-25 15:55:29,092:INFO:Declaring custom model
2024-07-25 15:55:29,092:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:29,092:INFO:Starting cross validation
2024-07-25 15:55:29,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:29,758:INFO:Calculating mean and std
2024-07-25 15:55:29,762:INFO:Creating metrics dataframe
2024-07-25 15:55:29,765:INFO:Finalizing model
2024-07-25 15:55:29,797:INFO:Uploading results into container
2024-07-25 15:55:29,797:INFO:Uploading model into container now
2024-07-25 15:55:29,797:INFO:_master_model_container: 57
2024-07-25 15:55:29,797:INFO:_display_container: 3
2024-07-25 15:55:29,797:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.453125,
                                     weights='uniform')
2024-07-25 15:55:29,797:INFO:create_model() successfully completed......................................
2024-07-25 15:55:29,888:INFO:Threshold: 0.453125. Accuracy: 0.6984
2024-07-25 15:55:29,889:INFO:Initializing create_model()
2024-07-25 15:55:29,890:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.515625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:29,891:INFO:Checking exceptions
2024-07-25 15:55:29,895:INFO:Importing libraries
2024-07-25 15:55:29,896:INFO:Copying training dataset
2024-07-25 15:55:29,908:INFO:Defining folds
2024-07-25 15:55:29,908:INFO:Declaring metric variables
2024-07-25 15:55:29,908:INFO:Importing untrained model
2024-07-25 15:55:29,908:INFO:Declaring custom model
2024-07-25 15:55:29,908:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:29,908:INFO:Starting cross validation
2024-07-25 15:55:29,908:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:30,557:INFO:Calculating mean and std
2024-07-25 15:55:30,557:INFO:Creating metrics dataframe
2024-07-25 15:55:30,557:INFO:Finalizing model
2024-07-25 15:55:30,574:INFO:Uploading results into container
2024-07-25 15:55:30,590:INFO:Uploading model into container now
2024-07-25 15:55:30,591:INFO:_master_model_container: 58
2024-07-25 15:55:30,591:INFO:_display_container: 3
2024-07-25 15:55:30,591:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.515625,
                                     weights='uniform')
2024-07-25 15:55:30,591:INFO:create_model() successfully completed......................................
2024-07-25 15:55:30,674:INFO:Threshold: 0.515625. Accuracy: 0.6984
2024-07-25 15:55:30,674:INFO:Initializing create_model()
2024-07-25 15:55:30,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.578125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:30,674:INFO:Checking exceptions
2024-07-25 15:55:30,690:INFO:Importing libraries
2024-07-25 15:55:30,690:INFO:Copying training dataset
2024-07-25 15:55:30,690:INFO:Defining folds
2024-07-25 15:55:30,690:INFO:Declaring metric variables
2024-07-25 15:55:30,690:INFO:Importing untrained model
2024-07-25 15:55:30,690:INFO:Declaring custom model
2024-07-25 15:55:30,690:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:30,690:INFO:Starting cross validation
2024-07-25 15:55:30,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:31,374:INFO:Calculating mean and std
2024-07-25 15:55:31,377:INFO:Creating metrics dataframe
2024-07-25 15:55:31,381:INFO:Finalizing model
2024-07-25 15:55:31,407:INFO:Uploading results into container
2024-07-25 15:55:31,407:INFO:Uploading model into container now
2024-07-25 15:55:31,423:INFO:_master_model_container: 59
2024-07-25 15:55:31,423:INFO:_display_container: 3
2024-07-25 15:55:31,423:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.578125,
                                     weights='uniform')
2024-07-25 15:55:31,423:INFO:create_model() successfully completed......................................
2024-07-25 15:55:31,528:INFO:Threshold: 0.578125. Accuracy: 0.6984
2024-07-25 15:55:31,528:INFO:Initializing create_model()
2024-07-25 15:55:31,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.015625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:31,540:INFO:Checking exceptions
2024-07-25 15:55:31,542:INFO:Importing libraries
2024-07-25 15:55:31,542:INFO:Copying training dataset
2024-07-25 15:55:31,559:INFO:Defining folds
2024-07-25 15:55:31,559:INFO:Declaring metric variables
2024-07-25 15:55:31,559:INFO:Importing untrained model
2024-07-25 15:55:31,559:INFO:Declaring custom model
2024-07-25 15:55:31,559:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:31,559:INFO:Starting cross validation
2024-07-25 15:55:31,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:32,427:INFO:Calculating mean and std
2024-07-25 15:55:32,427:INFO:Creating metrics dataframe
2024-07-25 15:55:32,427:INFO:Finalizing model
2024-07-25 15:55:32,461:INFO:Uploading results into container
2024-07-25 15:55:32,461:INFO:Uploading model into container now
2024-07-25 15:55:32,461:INFO:_master_model_container: 60
2024-07-25 15:55:32,461:INFO:_display_container: 3
2024-07-25 15:55:32,461:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.015625,
                                     weights='uniform')
2024-07-25 15:55:32,461:INFO:create_model() successfully completed......................................
2024-07-25 15:55:32,583:INFO:Threshold: 0.015625. Accuracy: 0.5456
2024-07-25 15:55:32,583:INFO:Initializing create_model()
2024-07-25 15:55:32,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:32,583:INFO:Checking exceptions
2024-07-25 15:55:32,583:INFO:Importing libraries
2024-07-25 15:55:32,583:INFO:Copying training dataset
2024-07-25 15:55:32,599:INFO:Defining folds
2024-07-25 15:55:32,599:INFO:Declaring metric variables
2024-07-25 15:55:32,599:INFO:Importing untrained model
2024-07-25 15:55:32,599:INFO:Declaring custom model
2024-07-25 15:55:32,599:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:32,599:INFO:Starting cross validation
2024-07-25 15:55:32,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:33,708:INFO:Calculating mean and std
2024-07-25 15:55:33,708:INFO:Creating metrics dataframe
2024-07-25 15:55:33,708:INFO:Finalizing model
2024-07-25 15:55:33,742:INFO:Uploading results into container
2024-07-25 15:55:33,742:INFO:Uploading model into container now
2024-07-25 15:55:33,742:INFO:_master_model_container: 61
2024-07-25 15:55:33,742:INFO:_display_container: 3
2024-07-25 15:55:33,742:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5234375,
                                     weights='uniform')
2024-07-25 15:55:33,742:INFO:create_model() successfully completed......................................
2024-07-25 15:55:33,825:INFO:Threshold: 0.5234375. Accuracy: 0.6984
2024-07-25 15:55:33,841:INFO:Initializing create_model()
2024-07-25 15:55:33,841:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.4609375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:33,841:INFO:Checking exceptions
2024-07-25 15:55:33,841:INFO:Importing libraries
2024-07-25 15:55:33,841:INFO:Copying training dataset
2024-07-25 15:55:33,850:INFO:Defining folds
2024-07-25 15:55:33,850:INFO:Declaring metric variables
2024-07-25 15:55:33,850:INFO:Importing untrained model
2024-07-25 15:55:33,850:INFO:Declaring custom model
2024-07-25 15:55:33,866:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:33,866:INFO:Starting cross validation
2024-07-25 15:55:33,866:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:34,590:INFO:Calculating mean and std
2024-07-25 15:55:34,590:INFO:Creating metrics dataframe
2024-07-25 15:55:34,590:INFO:Finalizing model
2024-07-25 15:55:34,621:INFO:Uploading results into container
2024-07-25 15:55:34,621:INFO:Uploading model into container now
2024-07-25 15:55:34,621:INFO:_master_model_container: 62
2024-07-25 15:55:34,621:INFO:_display_container: 3
2024-07-25 15:55:34,621:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.4609375,
                                     weights='uniform')
2024-07-25 15:55:34,621:INFO:create_model() successfully completed......................................
2024-07-25 15:55:34,707:INFO:Threshold: 0.4609375. Accuracy: 0.6984
2024-07-25 15:55:34,707:INFO:Initializing create_model()
2024-07-25 15:55:34,707:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5859375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:34,707:INFO:Checking exceptions
2024-07-25 15:55:34,723:INFO:Importing libraries
2024-07-25 15:55:34,723:INFO:Copying training dataset
2024-07-25 15:55:34,723:INFO:Defining folds
2024-07-25 15:55:34,723:INFO:Declaring metric variables
2024-07-25 15:55:34,723:INFO:Importing untrained model
2024-07-25 15:55:34,723:INFO:Declaring custom model
2024-07-25 15:55:34,723:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:34,723:INFO:Starting cross validation
2024-07-25 15:55:34,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:35,401:INFO:Calculating mean and std
2024-07-25 15:55:35,401:INFO:Creating metrics dataframe
2024-07-25 15:55:35,401:INFO:Finalizing model
2024-07-25 15:55:35,440:INFO:Uploading results into container
2024-07-25 15:55:35,440:INFO:Uploading model into container now
2024-07-25 15:55:35,440:INFO:_master_model_container: 63
2024-07-25 15:55:35,440:INFO:_display_container: 3
2024-07-25 15:55:35,440:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5859375,
                                     weights='uniform')
2024-07-25 15:55:35,440:INFO:create_model() successfully completed......................................
2024-07-25 15:55:35,537:INFO:Threshold: 0.5859375. Accuracy: 0.6984
2024-07-25 15:55:35,538:INFO:Initializing create_model()
2024-07-25 15:55:35,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.640625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:35,539:INFO:Checking exceptions
2024-07-25 15:55:35,540:INFO:Importing libraries
2024-07-25 15:55:35,540:INFO:Copying training dataset
2024-07-25 15:55:35,540:INFO:Defining folds
2024-07-25 15:55:35,540:INFO:Declaring metric variables
2024-07-25 15:55:35,540:INFO:Importing untrained model
2024-07-25 15:55:35,540:INFO:Declaring custom model
2024-07-25 15:55:35,540:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:35,540:INFO:Starting cross validation
2024-07-25 15:55:35,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:36,240:INFO:Calculating mean and std
2024-07-25 15:55:36,240:INFO:Creating metrics dataframe
2024-07-25 15:55:36,240:INFO:Finalizing model
2024-07-25 15:55:36,277:INFO:Uploading results into container
2024-07-25 15:55:36,277:INFO:Uploading model into container now
2024-07-25 15:55:36,277:INFO:_master_model_container: 64
2024-07-25 15:55:36,277:INFO:_display_container: 3
2024-07-25 15:55:36,277:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.640625,
                                     weights='uniform')
2024-07-25 15:55:36,277:INFO:create_model() successfully completed......................................
2024-07-25 15:55:36,378:INFO:Threshold: 0.640625. Accuracy: 0.7077
2024-07-25 15:55:36,378:INFO:Initializing create_model()
2024-07-25 15:55:36,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.6484375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:36,378:INFO:Checking exceptions
2024-07-25 15:55:36,378:INFO:Importing libraries
2024-07-25 15:55:36,378:INFO:Copying training dataset
2024-07-25 15:55:36,378:INFO:Defining folds
2024-07-25 15:55:36,378:INFO:Declaring metric variables
2024-07-25 15:55:36,378:INFO:Importing untrained model
2024-07-25 15:55:36,378:INFO:Declaring custom model
2024-07-25 15:55:36,393:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:36,393:INFO:Starting cross validation
2024-07-25 15:55:36,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:37,154:INFO:Calculating mean and std
2024-07-25 15:55:37,154:INFO:Creating metrics dataframe
2024-07-25 15:55:37,154:INFO:Finalizing model
2024-07-25 15:55:37,185:INFO:Uploading results into container
2024-07-25 15:55:37,185:INFO:Uploading model into container now
2024-07-25 15:55:37,185:INFO:_master_model_container: 65
2024-07-25 15:55:37,185:INFO:_display_container: 3
2024-07-25 15:55:37,185:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.6484375,
                                     weights='uniform')
2024-07-25 15:55:37,185:INFO:create_model() successfully completed......................................
2024-07-25 15:55:37,272:INFO:Threshold: 0.6484375. Accuracy: 0.7077
2024-07-25 15:55:37,272:INFO:Initializing create_model()
2024-07-25 15:55:37,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.703125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:37,272:INFO:Checking exceptions
2024-07-25 15:55:37,272:INFO:Importing libraries
2024-07-25 15:55:37,272:INFO:Copying training dataset
2024-07-25 15:55:37,288:INFO:Defining folds
2024-07-25 15:55:37,288:INFO:Declaring metric variables
2024-07-25 15:55:37,288:INFO:Importing untrained model
2024-07-25 15:55:37,288:INFO:Declaring custom model
2024-07-25 15:55:37,288:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:37,288:INFO:Starting cross validation
2024-07-25 15:55:37,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:38,026:INFO:Calculating mean and std
2024-07-25 15:55:38,026:INFO:Creating metrics dataframe
2024-07-25 15:55:38,037:INFO:Finalizing model
2024-07-25 15:55:38,054:INFO:Uploading results into container
2024-07-25 15:55:38,054:INFO:Uploading model into container now
2024-07-25 15:55:38,054:INFO:_master_model_container: 66
2024-07-25 15:55:38,054:INFO:_display_container: 3
2024-07-25 15:55:38,054:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.703125,
                                     weights='uniform')
2024-07-25 15:55:38,054:INFO:create_model() successfully completed......................................
2024-07-25 15:55:38,154:INFO:Threshold: 0.703125. Accuracy: 0.7077
2024-07-25 15:55:38,154:INFO:Initializing create_model()
2024-07-25 15:55:38,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.7109375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:38,154:INFO:Checking exceptions
2024-07-25 15:55:38,154:INFO:Importing libraries
2024-07-25 15:55:38,154:INFO:Copying training dataset
2024-07-25 15:55:38,170:INFO:Defining folds
2024-07-25 15:55:38,170:INFO:Declaring metric variables
2024-07-25 15:55:38,170:INFO:Importing untrained model
2024-07-25 15:55:38,170:INFO:Declaring custom model
2024-07-25 15:55:38,170:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:38,170:INFO:Starting cross validation
2024-07-25 15:55:38,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:39,053:INFO:Calculating mean and std
2024-07-25 15:55:39,053:INFO:Creating metrics dataframe
2024-07-25 15:55:39,053:INFO:Finalizing model
2024-07-25 15:55:39,085:INFO:Uploading results into container
2024-07-25 15:55:39,085:INFO:Uploading model into container now
2024-07-25 15:55:39,085:INFO:_master_model_container: 67
2024-07-25 15:55:39,085:INFO:_display_container: 3
2024-07-25 15:55:39,085:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.7109375,
                                     weights='uniform')
2024-07-25 15:55:39,085:INFO:create_model() successfully completed......................................
2024-07-25 15:55:39,183:INFO:Threshold: 0.7109375. Accuracy: 0.7077
2024-07-25 15:55:39,183:INFO:Initializing create_model()
2024-07-25 15:55:39,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:39,199:INFO:Checking exceptions
2024-07-25 15:55:39,199:INFO:Importing libraries
2024-07-25 15:55:39,199:INFO:Copying training dataset
2024-07-25 15:55:39,215:INFO:Defining folds
2024-07-25 15:55:39,215:INFO:Declaring metric variables
2024-07-25 15:55:39,215:INFO:Importing untrained model
2024-07-25 15:55:39,215:INFO:Declaring custom model
2024-07-25 15:55:39,215:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:39,222:INFO:Starting cross validation
2024-07-25 15:55:39,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:40,369:INFO:Calculating mean and std
2024-07-25 15:55:40,369:INFO:Creating metrics dataframe
2024-07-25 15:55:40,369:INFO:Finalizing model
2024-07-25 15:55:40,401:INFO:Uploading results into container
2024-07-25 15:55:40,401:INFO:Uploading model into container now
2024-07-25 15:55:40,401:INFO:_master_model_container: 68
2024-07-25 15:55:40,401:INFO:_display_container: 3
2024-07-25 15:55:40,401:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.0234375,
                                     weights='uniform')
2024-07-25 15:55:40,416:INFO:create_model() successfully completed......................................
2024-07-25 15:55:40,523:INFO:Threshold: 0.0234375. Accuracy: 0.5456
2024-07-25 15:55:40,523:INFO:Initializing create_model()
2024-07-25 15:55:40,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0859375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:40,523:INFO:Checking exceptions
2024-07-25 15:55:40,538:INFO:Importing libraries
2024-07-25 15:55:40,538:INFO:Copying training dataset
2024-07-25 15:55:40,538:INFO:Defining folds
2024-07-25 15:55:40,538:INFO:Declaring metric variables
2024-07-25 15:55:40,554:INFO:Importing untrained model
2024-07-25 15:55:40,554:INFO:Declaring custom model
2024-07-25 15:55:40,554:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:40,554:INFO:Starting cross validation
2024-07-25 15:55:40,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:41,383:INFO:Calculating mean and std
2024-07-25 15:55:41,383:INFO:Creating metrics dataframe
2024-07-25 15:55:41,383:INFO:Finalizing model
2024-07-25 15:55:41,420:INFO:Uploading results into container
2024-07-25 15:55:41,420:INFO:Uploading model into container now
2024-07-25 15:55:41,420:INFO:_master_model_container: 69
2024-07-25 15:55:41,420:INFO:_display_container: 3
2024-07-25 15:55:41,420:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.0859375,
                                     weights='uniform')
2024-07-25 15:55:41,420:INFO:create_model() successfully completed......................................
2024-07-25 15:55:41,502:INFO:Threshold: 0.0859375. Accuracy: 0.5456
2024-07-25 15:55:41,502:INFO:Initializing create_model()
2024-07-25 15:55:41,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.140625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:41,502:INFO:Checking exceptions
2024-07-25 15:55:41,521:INFO:Importing libraries
2024-07-25 15:55:41,522:INFO:Copying training dataset
2024-07-25 15:55:41,522:INFO:Defining folds
2024-07-25 15:55:41,522:INFO:Declaring metric variables
2024-07-25 15:55:41,522:INFO:Importing untrained model
2024-07-25 15:55:41,522:INFO:Declaring custom model
2024-07-25 15:55:41,522:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:41,522:INFO:Starting cross validation
2024-07-25 15:55:41,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:42,262:INFO:Calculating mean and std
2024-07-25 15:55:42,262:INFO:Creating metrics dataframe
2024-07-25 15:55:42,262:INFO:Finalizing model
2024-07-25 15:55:42,282:INFO:Uploading results into container
2024-07-25 15:55:42,296:INFO:Uploading model into container now
2024-07-25 15:55:42,296:INFO:_master_model_container: 70
2024-07-25 15:55:42,297:INFO:_display_container: 3
2024-07-25 15:55:42,299:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.140625,
                                     weights='uniform')
2024-07-25 15:55:42,299:INFO:create_model() successfully completed......................................
2024-07-25 15:55:42,382:INFO:Threshold: 0.140625. Accuracy: 0.5456
2024-07-25 15:55:42,382:INFO:Initializing create_model()
2024-07-25 15:55:42,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.078125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:42,382:INFO:Checking exceptions
2024-07-25 15:55:42,382:INFO:Importing libraries
2024-07-25 15:55:42,382:INFO:Copying training dataset
2024-07-25 15:55:42,402:INFO:Defining folds
2024-07-25 15:55:42,402:INFO:Declaring metric variables
2024-07-25 15:55:42,403:INFO:Importing untrained model
2024-07-25 15:55:42,403:INFO:Declaring custom model
2024-07-25 15:55:42,404:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:42,405:INFO:Starting cross validation
2024-07-25 15:55:42,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:43,111:INFO:Calculating mean and std
2024-07-25 15:55:43,111:INFO:Creating metrics dataframe
2024-07-25 15:55:43,111:INFO:Finalizing model
2024-07-25 15:55:43,144:INFO:Uploading results into container
2024-07-25 15:55:43,144:INFO:Uploading model into container now
2024-07-25 15:55:43,144:INFO:_master_model_container: 71
2024-07-25 15:55:43,144:INFO:_display_container: 3
2024-07-25 15:55:43,144:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.078125,
                                     weights='uniform')
2024-07-25 15:55:43,144:INFO:create_model() successfully completed......................................
2024-07-25 15:55:43,229:INFO:Threshold: 0.078125. Accuracy: 0.5456
2024-07-25 15:55:43,229:INFO:Initializing create_model()
2024-07-25 15:55:43,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.1484375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:43,229:INFO:Checking exceptions
2024-07-25 15:55:43,229:INFO:Importing libraries
2024-07-25 15:55:43,229:INFO:Copying training dataset
2024-07-25 15:55:43,244:INFO:Defining folds
2024-07-25 15:55:43,244:INFO:Declaring metric variables
2024-07-25 15:55:43,244:INFO:Importing untrained model
2024-07-25 15:55:43,244:INFO:Declaring custom model
2024-07-25 15:55:43,244:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:43,244:INFO:Starting cross validation
2024-07-25 15:55:43,244:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:43,943:INFO:Calculating mean and std
2024-07-25 15:55:43,943:INFO:Creating metrics dataframe
2024-07-25 15:55:43,943:INFO:Finalizing model
2024-07-25 15:55:43,977:INFO:Uploading results into container
2024-07-25 15:55:43,977:INFO:Uploading model into container now
2024-07-25 15:55:43,993:INFO:_master_model_container: 72
2024-07-25 15:55:43,993:INFO:_display_container: 3
2024-07-25 15:55:44,000:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.1484375,
                                     weights='uniform')
2024-07-25 15:55:44,000:INFO:create_model() successfully completed......................................
2024-07-25 15:55:44,077:INFO:Threshold: 0.1484375. Accuracy: 0.5456
2024-07-25 15:55:44,077:INFO:Initializing create_model()
2024-07-25 15:55:44,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.203125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:44,077:INFO:Checking exceptions
2024-07-25 15:55:44,077:INFO:Importing libraries
2024-07-25 15:55:44,077:INFO:Copying training dataset
2024-07-25 15:55:44,093:INFO:Defining folds
2024-07-25 15:55:44,093:INFO:Declaring metric variables
2024-07-25 15:55:44,093:INFO:Importing untrained model
2024-07-25 15:55:44,093:INFO:Declaring custom model
2024-07-25 15:55:44,093:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:44,093:INFO:Starting cross validation
2024-07-25 15:55:44,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:44,781:INFO:Calculating mean and std
2024-07-25 15:55:44,781:INFO:Creating metrics dataframe
2024-07-25 15:55:44,781:INFO:Finalizing model
2024-07-25 15:55:44,812:INFO:Uploading results into container
2024-07-25 15:55:44,812:INFO:Uploading model into container now
2024-07-25 15:55:44,812:INFO:_master_model_container: 73
2024-07-25 15:55:44,812:INFO:_display_container: 3
2024-07-25 15:55:44,812:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.203125,
                                     weights='uniform')
2024-07-25 15:55:44,812:INFO:create_model() successfully completed......................................
2024-07-25 15:55:44,895:INFO:Threshold: 0.203125. Accuracy: 0.6666
2024-07-25 15:55:44,895:INFO:Initializing create_model()
2024-07-25 15:55:44,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.2109375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:44,895:INFO:Checking exceptions
2024-07-25 15:55:44,911:INFO:Importing libraries
2024-07-25 15:55:44,911:INFO:Copying training dataset
2024-07-25 15:55:44,911:INFO:Defining folds
2024-07-25 15:55:44,911:INFO:Declaring metric variables
2024-07-25 15:55:44,911:INFO:Importing untrained model
2024-07-25 15:55:44,911:INFO:Declaring custom model
2024-07-25 15:55:44,911:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:44,911:INFO:Starting cross validation
2024-07-25 15:55:44,911:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:45,615:INFO:Calculating mean and std
2024-07-25 15:55:45,617:INFO:Creating metrics dataframe
2024-07-25 15:55:45,620:INFO:Finalizing model
2024-07-25 15:55:45,645:INFO:Uploading results into container
2024-07-25 15:55:45,645:INFO:Uploading model into container now
2024-07-25 15:55:45,645:INFO:_master_model_container: 74
2024-07-25 15:55:45,645:INFO:_display_container: 3
2024-07-25 15:55:45,645:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.2109375,
                                     weights='uniform')
2024-07-25 15:55:45,645:INFO:create_model() successfully completed......................................
2024-07-25 15:55:45,729:INFO:Threshold: 0.2109375. Accuracy: 0.6666
2024-07-25 15:55:45,729:INFO:Initializing create_model()
2024-07-25 15:55:45,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.265625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:45,729:INFO:Checking exceptions
2024-07-25 15:55:45,729:INFO:Importing libraries
2024-07-25 15:55:45,729:INFO:Copying training dataset
2024-07-25 15:55:45,745:INFO:Defining folds
2024-07-25 15:55:45,745:INFO:Declaring metric variables
2024-07-25 15:55:45,745:INFO:Importing untrained model
2024-07-25 15:55:45,745:INFO:Declaring custom model
2024-07-25 15:55:45,745:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:45,745:INFO:Starting cross validation
2024-07-25 15:55:45,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:46,424:INFO:Calculating mean and std
2024-07-25 15:55:46,424:INFO:Creating metrics dataframe
2024-07-25 15:55:46,424:INFO:Finalizing model
2024-07-25 15:55:46,457:INFO:Uploading results into container
2024-07-25 15:55:46,458:INFO:Uploading model into container now
2024-07-25 15:55:46,459:INFO:_master_model_container: 75
2024-07-25 15:55:46,459:INFO:_display_container: 3
2024-07-25 15:55:46,462:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.265625,
                                     weights='uniform')
2024-07-25 15:55:46,462:INFO:create_model() successfully completed......................................
2024-07-25 15:55:46,541:INFO:Threshold: 0.265625. Accuracy: 0.6666
2024-07-25 15:55:46,541:INFO:Initializing create_model()
2024-07-25 15:55:46,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.2734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:46,541:INFO:Checking exceptions
2024-07-25 15:55:46,541:INFO:Importing libraries
2024-07-25 15:55:46,541:INFO:Copying training dataset
2024-07-25 15:55:46,562:INFO:Defining folds
2024-07-25 15:55:46,562:INFO:Declaring metric variables
2024-07-25 15:55:46,563:INFO:Importing untrained model
2024-07-25 15:55:46,563:INFO:Declaring custom model
2024-07-25 15:55:46,565:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:46,565:INFO:Starting cross validation
2024-07-25 15:55:46,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:47,240:INFO:Calculating mean and std
2024-07-25 15:55:47,240:INFO:Creating metrics dataframe
2024-07-25 15:55:47,240:INFO:Finalizing model
2024-07-25 15:55:47,280:INFO:Uploading results into container
2024-07-25 15:55:47,280:INFO:Uploading model into container now
2024-07-25 15:55:47,280:INFO:_master_model_container: 76
2024-07-25 15:55:47,280:INFO:_display_container: 3
2024-07-25 15:55:47,290:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.2734375,
                                     weights='uniform')
2024-07-25 15:55:47,290:INFO:create_model() successfully completed......................................
2024-07-25 15:55:47,371:INFO:Threshold: 0.2734375. Accuracy: 0.6666
2024-07-25 15:55:47,372:INFO:Initializing create_model()
2024-07-25 15:55:47,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.328125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:47,372:INFO:Checking exceptions
2024-07-25 15:55:47,377:INFO:Importing libraries
2024-07-25 15:55:47,377:INFO:Copying training dataset
2024-07-25 15:55:47,390:INFO:Defining folds
2024-07-25 15:55:47,390:INFO:Declaring metric variables
2024-07-25 15:55:47,390:INFO:Importing untrained model
2024-07-25 15:55:47,390:INFO:Declaring custom model
2024-07-25 15:55:47,390:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:47,390:INFO:Starting cross validation
2024-07-25 15:55:47,390:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:48,039:INFO:Calculating mean and std
2024-07-25 15:55:48,039:INFO:Creating metrics dataframe
2024-07-25 15:55:48,039:INFO:Finalizing model
2024-07-25 15:55:48,072:INFO:Uploading results into container
2024-07-25 15:55:48,072:INFO:Uploading model into container now
2024-07-25 15:55:48,072:INFO:_master_model_container: 77
2024-07-25 15:55:48,072:INFO:_display_container: 3
2024-07-25 15:55:48,072:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.328125,
                                     weights='uniform')
2024-07-25 15:55:48,072:INFO:create_model() successfully completed......................................
2024-07-25 15:55:48,164:INFO:Threshold: 0.328125. Accuracy: 0.6666
2024-07-25 15:55:48,166:INFO:Initializing create_model()
2024-07-25 15:55:48,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.7734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:48,166:INFO:Checking exceptions
2024-07-25 15:55:48,170:INFO:Importing libraries
2024-07-25 15:55:48,170:INFO:Copying training dataset
2024-07-25 15:55:48,172:INFO:Defining folds
2024-07-25 15:55:48,172:INFO:Declaring metric variables
2024-07-25 15:55:48,172:INFO:Importing untrained model
2024-07-25 15:55:48,172:INFO:Declaring custom model
2024-07-25 15:55:48,172:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:48,172:INFO:Starting cross validation
2024-07-25 15:55:48,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:48,838:INFO:Calculating mean and std
2024-07-25 15:55:48,838:INFO:Creating metrics dataframe
2024-07-25 15:55:48,838:INFO:Finalizing model
2024-07-25 15:55:48,874:INFO:Uploading results into container
2024-07-25 15:55:48,875:INFO:Uploading model into container now
2024-07-25 15:55:48,877:INFO:_master_model_container: 78
2024-07-25 15:55:48,877:INFO:_display_container: 3
2024-07-25 15:55:48,877:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.7734375,
                                     weights='uniform')
2024-07-25 15:55:48,877:INFO:create_model() successfully completed......................................
2024-07-25 15:55:48,955:INFO:Threshold: 0.7734375. Accuracy: 0.7077
2024-07-25 15:55:48,955:INFO:Initializing create_model()
2024-07-25 15:55:48,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.8359375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:48,955:INFO:Checking exceptions
2024-07-25 15:55:48,955:INFO:Importing libraries
2024-07-25 15:55:48,955:INFO:Copying training dataset
2024-07-25 15:55:48,976:INFO:Defining folds
2024-07-25 15:55:48,976:INFO:Declaring metric variables
2024-07-25 15:55:48,976:INFO:Importing untrained model
2024-07-25 15:55:48,976:INFO:Declaring custom model
2024-07-25 15:55:48,976:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:48,976:INFO:Starting cross validation
2024-07-25 15:55:48,976:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:49,488:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:49,654:INFO:Calculating mean and std
2024-07-25 15:55:49,654:INFO:Creating metrics dataframe
2024-07-25 15:55:49,654:INFO:Finalizing model
2024-07-25 15:55:49,687:INFO:Uploading results into container
2024-07-25 15:55:49,687:INFO:Uploading model into container now
2024-07-25 15:55:49,687:INFO:_master_model_container: 79
2024-07-25 15:55:49,687:INFO:_display_container: 3
2024-07-25 15:55:49,687:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.8359375,
                                     weights='uniform')
2024-07-25 15:55:49,687:INFO:create_model() successfully completed......................................
2024-07-25 15:55:49,774:INFO:Threshold: 0.8359375. Accuracy: 0.6724
2024-07-25 15:55:49,774:INFO:Initializing create_model()
2024-07-25 15:55:49,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.8984375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:49,774:INFO:Checking exceptions
2024-07-25 15:55:49,774:INFO:Importing libraries
2024-07-25 15:55:49,774:INFO:Copying training dataset
2024-07-25 15:55:49,787:INFO:Defining folds
2024-07-25 15:55:49,787:INFO:Declaring metric variables
2024-07-25 15:55:49,787:INFO:Importing untrained model
2024-07-25 15:55:49,787:INFO:Declaring custom model
2024-07-25 15:55:49,787:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:49,787:INFO:Starting cross validation
2024-07-25 15:55:49,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:50,320:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:50,487:INFO:Calculating mean and std
2024-07-25 15:55:50,489:INFO:Creating metrics dataframe
2024-07-25 15:55:50,492:INFO:Finalizing model
2024-07-25 15:55:50,524:INFO:Uploading results into container
2024-07-25 15:55:50,524:INFO:Uploading model into container now
2024-07-25 15:55:50,524:INFO:_master_model_container: 80
2024-07-25 15:55:50,524:INFO:_display_container: 3
2024-07-25 15:55:50,524:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.8984375,
                                     weights='uniform')
2024-07-25 15:55:50,524:INFO:create_model() successfully completed......................................
2024-07-25 15:55:50,623:INFO:Threshold: 0.8984375. Accuracy: 0.6724
2024-07-25 15:55:50,624:INFO:Initializing create_model()
2024-07-25 15:55:50,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF0A78E0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.9609375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:50,624:INFO:Checking exceptions
2024-07-25 15:55:50,624:INFO:Importing libraries
2024-07-25 15:55:50,624:INFO:Copying training dataset
2024-07-25 15:55:50,636:INFO:Defining folds
2024-07-25 15:55:50,636:INFO:Declaring metric variables
2024-07-25 15:55:50,636:INFO:Importing untrained model
2024-07-25 15:55:50,636:INFO:Declaring custom model
2024-07-25 15:55:50,636:INFO:K Neighbors Classifier Imported successfully
2024-07-25 15:55:50,636:INFO:Starting cross validation
2024-07-25 15:55:50,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:51,118:WARNING:c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-25 15:55:51,336:INFO:Calculating mean and std
2024-07-25 15:55:51,336:INFO:Creating metrics dataframe
2024-07-25 15:55:51,336:INFO:Finalizing model
2024-07-25 15:55:51,352:INFO:Uploading results into container
2024-07-25 15:55:51,352:INFO:Uploading model into container now
2024-07-25 15:55:51,368:INFO:_master_model_container: 81
2024-07-25 15:55:51,368:INFO:_display_container: 3
2024-07-25 15:55:51,375:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.9609375,
                                     weights='uniform')
2024-07-25 15:55:51,376:INFO:create_model() successfully completed......................................
2024-07-25 15:55:51,452:INFO:Threshold: 0.9609375. Accuracy: 0.6724
2024-07-25 15:55:51,452:INFO:optimization loop finished successfully. Best threshold: 0.625 with Accuracy=0.7077
2024-07-25 15:55:51,486:INFO:plotting optimization threshold using plotly
2024-07-25 15:55:54,899:INFO:returning model with best metric
2024-07-25 15:55:54,899:INFO:optimize_threshold() successfully completed......................................
2024-07-25 15:55:56,505:INFO:PyCaret ClassificationExperiment
2024-07-25 15:55:56,506:INFO:Logging name: clf-default-name
2024-07-25 15:55:56,506:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-25 15:55:56,506:INFO:version 3.3.2
2024-07-25 15:55:56,507:INFO:Initializing setup()
2024-07-25 15:55:56,507:INFO:self.USI: eef1
2024-07-25 15:55:56,507:INFO:self._variable_keys: {'target_param', 'y_train', 'gpu_n_jobs_param', 'exp_id', 'memory', 'pipeline', 'fold_generator', 'html_param', '_ml_usecase', 'seed', 'logging_param', 'fold_shuffle_param', 'X', '_available_plots', 'idx', 'gpu_param', 'exp_name_log', 'is_multiclass', 'USI', 'y', 'data', 'X_test', 'fix_imbalance', 'y_test', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_train'}
2024-07-25 15:55:56,507:INFO:Checking environment
2024-07-25 15:55:56,507:INFO:python_version: 3.9.19
2024-07-25 15:55:56,509:INFO:python_build: ('main', 'May  6 2024 20:12:36')
2024-07-25 15:55:56,510:INFO:machine: AMD64
2024-07-25 15:55:56,510:INFO:platform: Windows-10-10.0.17763-SP0
2024-07-25 15:55:56,511:INFO:Memory: svmem(total=8387862528, available=719073280, percent=91.4, used=7668789248, free=719073280)
2024-07-25 15:55:56,511:INFO:Physical Core: 2
2024-07-25 15:55:56,511:INFO:Logical Core: 4
2024-07-25 15:55:56,512:INFO:Checking libraries
2024-07-25 15:55:56,513:INFO:System:
2024-07-25 15:55:56,514:INFO:    python: 3.9.19 (main, May  6 2024, 20:12:36) [MSC v.1916 64 bit (AMD64)]
2024-07-25 15:55:56,514:INFO:executable: c:\Users\shuho.hidaka\AppData\Local\anaconda3\envs\pycaret_20240724_01\python.exe
2024-07-25 15:55:56,514:INFO:   machine: Windows-10-10.0.17763-SP0
2024-07-25 15:55:56,515:INFO:PyCaret required dependencies:
2024-07-25 15:55:56,515:INFO:                 pip: 24.0
2024-07-25 15:55:56,515:INFO:          setuptools: 69.5.1
2024-07-25 15:55:56,516:INFO:             pycaret: 3.3.2
2024-07-25 15:55:56,516:INFO:             IPython: 8.18.1
2024-07-25 15:55:56,517:INFO:          ipywidgets: 8.1.3
2024-07-25 15:55:56,517:INFO:                tqdm: 4.66.4
2024-07-25 15:55:56,517:INFO:               numpy: 1.26.4
2024-07-25 15:55:56,517:INFO:              pandas: 2.1.4
2024-07-25 15:55:56,518:INFO:              jinja2: 3.1.4
2024-07-25 15:55:56,518:INFO:               scipy: 1.11.4
2024-07-25 15:55:56,518:INFO:              joblib: 1.3.2
2024-07-25 15:55:56,519:INFO:             sklearn: 1.4.2
2024-07-25 15:55:56,519:INFO:                pyod: 2.0.1
2024-07-25 15:55:56,519:INFO:            imblearn: 0.12.3
2024-07-25 15:55:56,519:INFO:   category_encoders: 2.6.3
2024-07-25 15:55:56,520:INFO:            lightgbm: 4.4.0
2024-07-25 15:55:56,520:INFO:               numba: 0.60.0
2024-07-25 15:55:56,520:INFO:            requests: 2.32.3
2024-07-25 15:55:56,520:INFO:          matplotlib: 3.7.5
2024-07-25 15:55:56,520:INFO:          scikitplot: 0.3.7
2024-07-25 15:55:56,521:INFO:         yellowbrick: 1.5
2024-07-25 15:55:56,521:INFO:              plotly: 5.23.0
2024-07-25 15:55:56,521:INFO:    plotly-resampler: Not installed
2024-07-25 15:55:56,521:INFO:             kaleido: 0.2.1
2024-07-25 15:55:56,522:INFO:           schemdraw: 0.15
2024-07-25 15:55:56,522:INFO:         statsmodels: 0.14.2
2024-07-25 15:55:56,522:INFO:              sktime: 0.26.0
2024-07-25 15:55:56,522:INFO:               tbats: 1.1.3
2024-07-25 15:55:56,522:INFO:            pmdarima: 2.0.4
2024-07-25 15:55:56,523:INFO:              psutil: 6.0.0
2024-07-25 15:55:56,523:INFO:          markupsafe: 2.1.5
2024-07-25 15:55:56,523:INFO:             pickle5: Not installed
2024-07-25 15:55:56,523:INFO:         cloudpickle: 3.0.0
2024-07-25 15:55:56,523:INFO:         deprecation: 2.1.0
2024-07-25 15:55:56,524:INFO:              xxhash: 3.4.1
2024-07-25 15:55:56,524:INFO:           wurlitzer: Not installed
2024-07-25 15:55:56,525:INFO:PyCaret optional dependencies:
2024-07-25 15:55:56,526:INFO:                shap: Not installed
2024-07-25 15:55:56,526:INFO:           interpret: Not installed
2024-07-25 15:55:56,527:INFO:                umap: Not installed
2024-07-25 15:55:56,527:INFO:     ydata_profiling: Not installed
2024-07-25 15:55:56,528:INFO:  explainerdashboard: Not installed
2024-07-25 15:55:56,528:INFO:             autoviz: Not installed
2024-07-25 15:55:56,528:INFO:           fairlearn: Not installed
2024-07-25 15:55:56,528:INFO:          deepchecks: Not installed
2024-07-25 15:55:56,530:INFO:             xgboost: Not installed
2024-07-25 15:55:56,530:INFO:            catboost: Not installed
2024-07-25 15:55:56,531:INFO:              kmodes: Not installed
2024-07-25 15:55:56,532:INFO:             mlxtend: Not installed
2024-07-25 15:55:56,532:INFO:       statsforecast: Not installed
2024-07-25 15:55:56,532:INFO:        tune_sklearn: Not installed
2024-07-25 15:55:56,532:INFO:                 ray: Not installed
2024-07-25 15:55:56,532:INFO:            hyperopt: Not installed
2024-07-25 15:55:56,533:INFO:              optuna: Not installed
2024-07-25 15:55:56,533:INFO:               skopt: Not installed
2024-07-25 15:55:56,533:INFO:              mlflow: Not installed
2024-07-25 15:55:56,533:INFO:              gradio: Not installed
2024-07-25 15:55:56,533:INFO:             fastapi: Not installed
2024-07-25 15:55:56,534:INFO:             uvicorn: Not installed
2024-07-25 15:55:56,534:INFO:              m2cgen: Not installed
2024-07-25 15:55:56,534:INFO:           evidently: Not installed
2024-07-25 15:55:56,534:INFO:               fugue: Not installed
2024-07-25 15:55:56,534:INFO:           streamlit: Not installed
2024-07-25 15:55:56,535:INFO:             prophet: Not installed
2024-07-25 15:55:56,535:INFO:None
2024-07-25 15:55:56,535:INFO:Set up data.
2024-07-25 15:55:56,628:INFO:Set up folding strategy.
2024-07-25 15:55:56,632:INFO:Set up train/test split.
2024-07-25 15:55:56,657:INFO:Set up index.
2024-07-25 15:55:56,657:INFO:Assigning column types.
2024-07-25 15:55:56,766:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-25 15:55:57,114:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:55:57,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:55:57,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:57,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:57,501:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-25 15:55:57,503:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:55:57,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:57,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:57,853:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-25 15:55:58,085:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:55:58,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:58,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:58,198:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-25 15:55:58,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:58,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:58,255:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-25 15:55:58,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:58,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:58,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:58,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:58,494:INFO:Preparing preprocessing pipeline...
2024-07-25 15:55:58,494:INFO:Set up simple imputation.
2024-07-25 15:55:58,511:INFO:Set up column name cleaning.
2024-07-25 15:55:58,581:INFO:Finished creating preprocessing pipeline.
2024-07-25 15:55:58,594:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SHUHO~1.HID\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-25 15:55:58,594:INFO:Creating final display dataframe.
2024-07-25 15:55:58,944:INFO:Setup _display_container:                     Description             Value
0                    Session id              8954
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              eef1
2024-07-25 15:55:59,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:59,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:59,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:59,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-25 15:55:59,216:INFO:setup() successfully completed in 2.75s...............
2024-07-25 15:55:59,216:INFO:Initializing create_model()
2024-07-25 15:55:59,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2286D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:55:59,216:INFO:Checking exceptions
2024-07-25 15:55:59,272:INFO:Importing libraries
2024-07-25 15:55:59,273:INFO:Copying training dataset
2024-07-25 15:55:59,292:INFO:Defining folds
2024-07-25 15:55:59,292:INFO:Declaring metric variables
2024-07-25 15:55:59,303:INFO:Importing untrained model
2024-07-25 15:55:59,316:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:55:59,327:INFO:Starting cross validation
2024-07-25 15:55:59,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-25 15:55:59,760:INFO:Calculating mean and std
2024-07-25 15:55:59,760:INFO:Creating metrics dataframe
2024-07-25 15:55:59,780:INFO:Finalizing model
2024-07-25 15:55:59,810:INFO:Uploading results into container
2024-07-25 15:55:59,810:INFO:Uploading model into container now
2024-07-25 15:55:59,843:INFO:_master_model_container: 1
2024-07-25 15:55:59,860:INFO:_display_container: 2
2024-07-25 15:55:59,860:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8954, splitter='best')
2024-07-25 15:55:59,860:INFO:create_model() successfully completed......................................
2024-07-25 15:55:59,984:INFO:Initializing calibrate_model()
2024-07-25 15:55:59,984:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2286D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8954, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-25 15:55:59,984:INFO:Checking exceptions
2024-07-25 15:55:59,995:INFO:Preloading libraries
2024-07-25 15:55:59,996:INFO:Preparing display monitor
2024-07-25 15:56:00,053:INFO:Getting model name
2024-07-25 15:56:00,054:INFO:Base model : Decision Tree Classifier
2024-07-25 15:56:00,082:INFO:Importing untrained CalibratedClassifierCV
2024-07-25 15:56:00,082:INFO:SubProcess create_model() called ==================================
2024-07-25 15:56:00,089:INFO:Initializing create_model()
2024-07-25 15:56:00,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000239EF2286D0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=8954,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000239F360E280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-25 15:56:00,090:INFO:Checking exceptions
2024-07-25 15:56:00,091:INFO:Importing libraries
2024-07-25 15:56:00,091:INFO:Copying training dataset
2024-07-25 15:56:00,102:INFO:Defining folds
2024-07-25 15:56:00,102:INFO:Declaring metric variables
2024-07-25 15:56:00,110:INFO:Importing untrained model
2024-07-25 15:56:00,110:INFO:Declaring custom model
2024-07-25 15:56:00,128:INFO:Decision Tree Classifier Imported successfully
2024-07-25 15:56:00,143:INFO:Starting cross validation
2024-07-25 15:56:00,143:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
